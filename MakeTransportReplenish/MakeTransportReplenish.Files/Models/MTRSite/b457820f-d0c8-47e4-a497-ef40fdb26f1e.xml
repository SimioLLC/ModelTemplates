<Fragment>
  <Lists>
    <StringList Name="OrderStatus">
      <Items>
        <Item Value="New" />
        <Item Value="WIP" />
      </Items>
    </StringList>
    <StringList Name="OffShiftRuleName">
      <Items>
        <Item Value="SuspendProcessing" />
        <Item Value="FinishWorkAlreadyStarted" />
        <Item Value="SwitchResourcesIfPossible" />
      </Items>
    </StringList>
    <StringList Name="PhasesList">
      <Items>
        <Item Value="TaskReady" />
        <Item Value="StartingTask" />
        <Item Value="FinishedTask" />
      </Items>
    </StringList>
    <NodeList Name="SinkInputs">
      <Items>
        <Item Value="Input@SalesOrdersShip" />
        <Item Value="Input@ComponentOrdersDestroy" />
      </Items>
    </NodeList>
    <StringList Name="TaskStateAssignmentTrigger">
      <Items>
        <Item Value="TaskReady" />
        <Item Value="StartingTask" />
        <Item Value="FinishedTask" />
      </Items>
    </StringList>
    <StringList Name="DwellTimeTypes">
      <Items>
        <Item Value="NoRequirement" />
        <Item Value="SpecificTime" />
        <Item Value="DwellUntilEvent" />
        <Item Value="DwellUntilFull" />
      </Items>
    </StringList>
    <StringList Name="TagValueTypes">
      <Items>
        <Item Value="Charge" />
      </Items>
    </StringList>
    <StringList Name="PictureColor">
      <Items>
        <Item Value="Red" />
        <Item Value="Blue" />
        <Item Value="NONE" />
      </Items>
    </StringList>
    <StringList Name="ModelRunModeList">
      <Items>
        <Item Value="RealTime" />
        <Item Value="Scheduling" />
      </Items>
    </StringList>
  </Lists>
  <PropertyDefinitions>
    <Categories>
      <Category Name="Basic Logic" Description="Basic Logic" />
      <Category Name="Process Logic" Description="Process Logic" />
      <Category Name="Crossing Logic" Description="Crossing Logic" />
      <Category Name="Transport Logic" Description="Transport Logic" />
      <Category Name="Travel Logic" Description="Travel Logic" />
      <Category Name="Routing Logic" Description="Routing Logic" />
      <Category Name="Routing Logic/Other Routing Out Options" Description="Routing Logic/Other Routing Out Options" InitiallyExpanded="False" />
      <Category Name="Population" Description="Population" InitiallyExpanded="False" />
      <Category Name="Results Classification" Description="Results Classification" InitiallyExpanded="False" />
      <Category Name="Stopping Conditions" Description="Stopping Conditions" InitiallyExpanded="False" />
      <Category Name="Input Flow Control" Description="Input Flow Control" />
      <Category Name="Financials" Description="Financials" InitiallyExpanded="False" />
      <Category Name="Financials/Transport Costs" Description="Transport Costs" InitiallyExpanded="False" />
      <Category Name="Financials/Resource Costs" Description="Resource Costs" InitiallyExpanded="False" />
      <Category Name="Shortest Path Calculations" Description="Shortest Path Calculations" InitiallyExpanded="False" />
      <Category Name="Advanced Options" Description="Advanced Options" InitiallyExpanded="False" />
    </Categories>
    <ExpressionProperty Name="SOSource_Stochastic_InterarrivalTime" DefaultValue="Random.Exponential(1)" NullString="null" UnitType="Time" DefaultUnits="Minutes" />
    <BooleanProperty Name="LogController" DefaultValue="False" NullString="null" />
    <BooleanProperty Name="LogXZObservations" DefaultValue="False" NullString="null" />
    <ExpressionProperty Name="LogXZTimeInterval" DefaultValue="5" NullString="null" UnitType="Time" DefaultUnits="Minutes" />
    <ExpressionProperty Name="MaximumArrivals" DefaultValue="Infinity" NullString="null" />
    <ExpressionProperty Name="MTRVehicle_UptimeBetweenFailures" DisplayName="Vehicle_UptimeBetweenFailures" DefaultValue="Random.Exponential(2)" NullString="null" UnitType="Time" DefaultUnits="Days" />
    <ExpressionProperty Name="MTRVehicle_TimeToRepair" DefaultValue="Random.Triangular( 0.125,0.25,0.375)" NullString="null" UnitType="Time" />
    <BooleanProperty Name="AlwaysDeterministicSource" DefaultValue="True" NullString="null" />
    <ListProperty Name="ModelRunMode" DefaultValue="Scheduling" NullString="null" List="ModelRunModeList" />
    <IntegerProperty Name="NumberOfWorkers" DefaultValue="3" NullString="null" />
    <Overrides>
      <Override Name="ReportStatistics" Visible="False" />
      <Override Name="ParentCostCenter" Visible="False" />
      <Override Name="InitialCost" Visible="False" />
      <Override Name="InitialCostRate" Visible="False" />
      <Override Name="ResourceIdleCostRate" Visible="False" />
      <Override Name="ResourceCostPerUse" Visible="False" />
      <Override Name="ResourceUsageCostRate" Visible="False" />
      <Override Name="LogResourceUsage" Visible="False" />
      <Override Name="DisplayName" Visible="False" />
      <Override Name="DisplayCategory" Visible="False" />
      <Override Name="DisplayColor" Visible="False" />
      <Override Name="IncludeInPlanResourceConstraints" Visible="False" />
      <Override Name="CapacityType" Visible="False" />
      <Override Name="InitialWorkSchedule" Visible="False" />
      <Override Name="WorkDayExceptions" Visible="False" DefaultValue="0 Rows" />
      <Override Name="WorkPeriodExceptions" Visible="False" DefaultValue="0 Rows" />
      <Override Name="InitialCapacity" Visible="False" />
      <Override Name="RankingRule" Visible="False" />
      <Override Name="RankingExpression" Visible="False" />
      <Override Name="DynamicSelectionRule" Visible="False" />
      <Override Name="CurrentSizeIndex" Visible="False" />
      <Override Name="TransferInConstraintsType" Visible="False" />
      <Override Name="TransferOutConstraintsType" Visible="False" />
      <Override Name="ExpectedSetupTimeExpression" Visible="False" />
      <Override Name="ExpectedOperationTimeExpression" Visible="False" />
    </Overrides>
  </PropertyDefinitions>
  <States>
    <IntegerState Name="CurrentRowNumber" />
    <IntegerState Name="WorkerID" />
    <IntegerState Name="OnTimeOrders" />
    <IntegerState Name="LateOrders" />
    <IntegerState Name="TotalCompleted" />
    <IntegerState Name="TotalStarted" />
    <IntegerState Name="TotalIncomplete" />
    <IntegerState Name="CONumber" />
    <IntegerState Name="VialsPerTub" />
    <DiscreteState Name="EyleaQuantityPerVial" />
    <IntegerState Name="BOMRowCountI" />
    <IntegerState Name="MONumber" />
    <DateTimeState Name="CurrentDateTime" />
    <DateTimeState Name="PrevDateTime" />
    <IntegerState Name="SONumber" />
    <IntegerState Name="SORTNumber" />
    <IntegerState Name="ChargedCount" />
    <DiscreteState Name="DelaySeconds" />
    <IntegerState Name="SOORowNumber" />
    <StringState Name="JSONStringDispatchList" />
  </States>
  <Events>
    <Event Name="Finishedd" />
    <Event Name="PalletEvent" />
    <Event Name="CreateRealTimeOrder" />
  </Events>
  <UsedObjects>
    <UsedObject Name="TransferNode" />
    <UsedObject Name="MTRWorker" />
    <UsedObject Name="Server" />
    <UsedObject Name="MTRVehicle" />
    <UsedObject Name="MTRServer" />
    <UsedObject Name="BasicNode" />
    <UsedObject Name="ModelEntity" />
    <UsedObject Name="Worker" />
    <UsedObject Name="MTRPath" />
    <UsedObject Name="MTRTransferNode" />
    <UsedObject Name="MTRConveyor" />
    <UsedObject Name="MTRTransferServer" />
  </UsedObjects>
  <Elements>
    <Element Type="ChangeoverLogic" Name="SequenceDependentSetupMatrix" Scope="Public">
      <Properties>
        <Property Name="SetupEfficiencyMultiplier">Resources.ChangeoverEfficiency</Property>
      </Properties>
    </Element>
    <Element Type="TallyStatistic" Name="Lateness" Scope="Public">
      <Properties>
        <Property Name="LogObservations">True</Property>
      </Properties>
    </Element>
    <Element Type="TallyStatistic" Name="TimeInSystem" Scope="Public">
      <Properties />
    </Element>
    <Element Type="TallyStatistic" Name="Tardiness" Scope="Public">
      <Properties />
    </Element>
    <Element Type="StateStatistic" Name="OnTimeOrdersSS" Scope="Public">
      <Properties>
        <Property Name="StateVariableName">
          <Value>OnTimeOrders</Value>
        </Property>
        <Property Name="LogObservations">True</Property>
        <Property Name="DisplayCategory">Statistics\Performance</Property>
      </Properties>
    </Element>
    <Element Type="StateStatistic" Name="LateOrdersSS" Scope="Public">
      <Properties>
        <Property Name="StateVariableName">
          <Value>LateOrders</Value>
        </Property>
        <Property Name="LogObservations">True</Property>
        <Property Name="DisplayCategory">Statistics\Performance</Property>
      </Properties>
    </Element>
    <Element Type="StateStatistic" Name="TotalCompletedSS" Scope="Public">
      <Properties>
        <Property Name="StateVariableName">
          <Value>TotalCompleted</Value>
        </Property>
        <Property Name="LogObservations">True</Property>
        <Property Name="DisplayCategory">Statistics\Performance</Property>
      </Properties>
    </Element>
    <Element Type="StateStatistic" Name="TotalStartedSS" Scope="Public">
      <Properties>
        <Property Name="StateVariableName">
          <Value>TotalStarted</Value>
        </Property>
        <Property Name="LogObservations">True</Property>
        <Property Name="DisplayCategory">Statistics\Performance</Property>
      </Properties>
    </Element>
    <Element Type="StateStatistic" Name="IncompleteOrdersSS" Scope="Public">
      <Properties>
        <Property Name="StateVariableName">
          <Value>TotalIncomplete</Value>
        </Property>
        <Property Name="LogObservations">True</Property>
        <Property Name="DisplayCategory">Statistics\Performance</Property>
      </Properties>
    </Element>
    <Element Type="OutputStatistic" Name="OnTimeOrderPercent" Scope="Public">
      <Properties>
        <Property Name="Expression">(OnTimeOrders / Math.Max(1, TotalCompleted)) * 100</Property>
      </Properties>
    </Element>
    <Element Type="Timer" Name="EveryHourOnTheHour" Scope="Public">
      <Properties>
        <Property Name="TimeOffset" Units="Seconds">3600 - ( DateTime.Second( Run.TimeNow ) + (DateTime.Minute( Run.TimeNow ) * 60))</Property>
      </Properties>
    </Element>
    <Element Type="Timer" Name="EveryDayAtMidnight" Scope="Public">
      <Properties>
        <Property Name="TimeOffset" Units="Seconds">86400 - ( DateTime.Second( Run.TimeNow ) + (DateTime.Minute( Run.TimeNow ) * 60) + (DateTime.Hour( Run.TimeNow ) * 3600))</Property>
        <Property Name="TimeInterval" Units="Days">1.0</Property>
      </Properties>
    </Element>
    <Element Type="Network" Name="Main" Scope="Public">
      <Properties />
    </Element>
    <Element Type="Network" Name="NotMain" Scope="Public">
      <Properties />
    </Element>
    <Element Type="ConstraintLogic" Name="MaterialConstraints" Scope="Public">
      <Properties>
        <Property Name="Constraints">
          <Value>BillOfMaterials</Value>
          <Rows>
            <Properties>
              <Property Name="MaterialName">
                <Value>BillOfMaterials.ComponentMaterial</Value>
              </Property>
              <Property Name="InventorySiteType">SpecificObject</Property>
              <Property Name="InventorySiteObjectName">BillOfMaterials.InventoryObject</Property>
              <Property Name="MaterialQuantity">Math.If(ModelEntity.FromManufacturingOrder &amp;&amp; ManufacturingOrders.HasWIP == True &amp;&amp; WorkInProcess[1].CurrentSequenceNumber ==Operations.SequenceNumber, 0.0, Math.If(BillOfMaterials.MaterialUse == Enum.MaterialActionType.Consume, Math.If(ModelEntity.FromManufacturingOrder, ManufacturingOrders.Quantity * BillOfMaterials.RequiredQuantity, ComponentOrders.Quantity * BillOfMaterials.RequiredQuantity), 0.0))</Property>
              <Property Name="MaterialLotID">Math.If( BillOfMaterials.Pegged == False, String.Empty, Math.If(ModelEntity.FromManufacturingOrder, ManufacturingOrders.MOId,  ComponentOrders.TriggeringOrder ))</Property>
              <Property Name="SkipConstraintCondition">BillOfMaterials.Picture != List.PictureColor.NONE &amp;&amp; BillOfMaterials.Picture != ModelEntity.Picture</Property>
            </Properties>
          </Rows>
        </Property>
      </Properties>
    </Element>
    <Element Type="RoutingGroup" Name="MTRTransferServerRoutingGroup" Scope="Public">
      <Properties>
        <Property Name="DestinationNodeListName">RoutingDestinations.Node</Property>
        <Property Name="RouteRequestDynamicSelectionRule" RuleGuid="60f74791-6ccc-453b-8da7-946990d495d5">
          <Value>Standard Dispatching Rule</Value>
          <Properties>
            <Property Name="IsRepeatGroup">True</Property>
            <Property Name="DispatchingRules">
              <Value>DispatchingRules</Value>
              <Rows>
                <Properties>
                  <Property Name="RepeatingDispatchingRule">DispatchingRules.DispatchingRule</Property>
                  <Property Name="RepeatingAttributeValueExpression">DispatchingRules.AttributeValueExpression</Property>
                  <Property Name="RepeatingCampaignValueExpression">DispatchingRules.CampaignValueExpression</Property>
                </Properties>
              </Rows>
            </Property>
          </Properties>
        </Property>
      </Properties>
    </Element>
    <Element Type="Material" AutoCreated="True" Name="ProductA" Scope="Public">
      <Properties>
        <Property Name="LocationBasedInventory">True</Property>
        <Property Name="InitialQuantities">
          <Value>MaterialLots</Value>
          <Rows>
            <Properties>
              <Property Name="InitialQuantitiesInitialQuantity">MaterialLots.Quantity</Property>
              <Property Name="InitialQuantitiesLotID">MaterialLots.LotId</Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="ReplenishmentPolicy">
          <Value>None</Value>
        </Property>
        <Property Name="CostPerUnit" Units="USD">Materials.MaterialCost</Property>
        <Property Name="AssumeInfiniteAvailabilityCondition">Materials.InfiniteAvailability</Property>
        <Property Name="LogMaterialUsage">True</Property>
      </Properties>
    </Element>
    <Element Type="StateStatistic" AutoCreated="True" Name="StateStatistic1" Scope="Public">
      <Properties>
        <Property Name="StateVariableName">
          <Value>Materials.MaterialName.QuantityInStock</Value>
        </Property>
        <Property Name="DataSource">Materials.MaterialName</Property>
        <Property Name="LogObservations">True</Property>
        <Property Name="DisplayCategory">Materials.DisplayCategory</Property>
      </Properties>
    </Element>
    <Element Type="Material" AutoCreated="True" Name="ProductB" Scope="Public">
      <Properties>
        <Property Name="LocationBasedInventory">True</Property>
        <Property Name="InitialQuantities">
          <Value>MaterialLots</Value>
          <Rows>
            <Properties>
              <Property Name="InitialQuantitiesInitialQuantity">MaterialLots.Quantity</Property>
              <Property Name="InitialQuantitiesLotID">MaterialLots.LotId</Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="ReplenishmentPolicy">
          <Value>None</Value>
        </Property>
        <Property Name="CostPerUnit" Units="USD">Materials.MaterialCost</Property>
        <Property Name="AssumeInfiniteAvailabilityCondition">Materials.InfiniteAvailability</Property>
        <Property Name="LogMaterialUsage">True</Property>
      </Properties>
    </Element>
    <Element Type="StateStatistic" AutoCreated="True" Name="StateStatistic2" Scope="Public">
      <Properties>
        <Property Name="StateVariableName">
          <Value>Materials.MaterialName.QuantityInStock</Value>
        </Property>
        <Property Name="DataSource">Materials.MaterialName</Property>
        <Property Name="LogObservations">True</Property>
        <Property Name="DisplayCategory">Materials.DisplayCategory</Property>
      </Properties>
    </Element>
    <Element Type="Material" AutoCreated="True" Name="FinishedGoodA" Scope="Public">
      <Properties>
        <Property Name="LocationBasedInventory">True</Property>
        <Property Name="InitialQuantities">
          <Value>MaterialLots</Value>
          <Rows>
            <Properties>
              <Property Name="InitialQuantitiesInitialQuantity">MaterialLots.Quantity</Property>
              <Property Name="InitialQuantitiesLotID">MaterialLots.LotId</Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="ReplenishmentPolicy">
          <Value>None</Value>
        </Property>
        <Property Name="CostPerUnit" Units="USD">Materials.MaterialCost</Property>
        <Property Name="AssumeInfiniteAvailabilityCondition">Materials.InfiniteAvailability</Property>
        <Property Name="LogMaterialUsage">True</Property>
      </Properties>
    </Element>
    <Element Type="StateStatistic" AutoCreated="True" Name="StateStatistic7" Scope="Public">
      <Properties>
        <Property Name="StateVariableName">
          <Value>Materials.MaterialName.QuantityInStock</Value>
        </Property>
        <Property Name="DataSource">Materials.MaterialName</Property>
        <Property Name="LogObservations">True</Property>
        <Property Name="DisplayCategory">Materials.DisplayCategory</Property>
      </Properties>
    </Element>
    <Element Type="Material" AutoCreated="True" Name="FinishedGoodB" Scope="Public">
      <Properties>
        <Property Name="LocationBasedInventory">True</Property>
        <Property Name="InitialQuantities">
          <Value>MaterialLots</Value>
          <Rows>
            <Properties>
              <Property Name="InitialQuantitiesInitialQuantity">MaterialLots.Quantity</Property>
              <Property Name="InitialQuantitiesLotID">MaterialLots.LotId</Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="ReplenishmentPolicy">
          <Value>None</Value>
        </Property>
        <Property Name="CostPerUnit" Units="USD">Materials.MaterialCost</Property>
        <Property Name="AssumeInfiniteAvailabilityCondition">Materials.InfiniteAvailability</Property>
        <Property Name="LogMaterialUsage">True</Property>
      </Properties>
    </Element>
    <Element Type="StateStatistic" AutoCreated="True" Name="StateStatistic8" Scope="Public">
      <Properties>
        <Property Name="StateVariableName">
          <Value>Materials.MaterialName.QuantityInStock</Value>
        </Property>
        <Property Name="DataSource">Materials.MaterialName</Property>
        <Property Name="LogObservations">True</Property>
        <Property Name="DisplayCategory">Materials.DisplayCategory</Property>
      </Properties>
    </Element>
    <Element Type="Inventory" AutoCreated="True" Name="ProductA_LogisticsArea1" Scope="Public">
      <Properties>
        <Property Name="ReportStatistics">InventoryLocations.ReportStatistics</Property>
        <Property Name="MaterialName">
          <Value>InventoryLocations.MaterialName</Value>
        </Property>
        <Property Name="SiteObjectName">InventoryLocations.SiteObjectName</Property>
        <Property Name="InitialQuantity">InventoryLocations.InitialQuantity</Property>
        <Property Name="ReviewPeriod">InventoryLocations.ReviewPeriod</Property>
        <Property Name="ReviewTimerName">
          <Value>InventoryLocations.ReviewTimer</Value>
        </Property>
        <Property Name="ReplenishmentPolicy">
          <Value>InventoryLocations.ReplenishmentPolicy</Value>
        </Property>
        <Property Name="OnReplenishmentOrderProcess">
          <Value>InventoryLocations.OnReplenishmentOrderProcess</Value>
        </Property>
        <Property Name="AssumeInfiniteAvailabilityCondition">InventoryLocations.InfiniteAvailability</Property>
      </Properties>
    </Element>
    <Element Type="Monitor" AutoCreated="True" Name="Monitor1" Scope="Public">
      <Properties>
        <Property Name="StateVariableName">
          <Value>InventoryLocations.InventoryName.Inventory.QuantityInStock</Value>
        </Property>
        <Property Name="TriggeredProcessName">
          <Value>InventoryLocations.OnProducedProcess</Value>
        </Property>
      </Properties>
    </Element>
    <Element Type="StateStatistic" AutoCreated="True" Name="StateStatistic3" Scope="Public">
      <Properties>
        <Property Name="StateVariableName">
          <Value>InventoryLocations.InventoryName.QuantityInStock</Value>
        </Property>
        <Property Name="DataSource">InventoryLocations.InventoryName</Property>
        <Property Name="LogObservations">True</Property>
        <Property Name="DisplayCategory">InventoryLocations.DisplayCategory</Property>
      </Properties>
    </Element>
    <Element Type="Inventory" AutoCreated="True" Name="ProductB_LogisticsArea1" Scope="Public">
      <Properties>
        <Property Name="ReportStatistics">InventoryLocations.ReportStatistics</Property>
        <Property Name="MaterialName">
          <Value>InventoryLocations.MaterialName</Value>
        </Property>
        <Property Name="SiteObjectName">InventoryLocations.SiteObjectName</Property>
        <Property Name="InitialQuantity">InventoryLocations.InitialQuantity</Property>
        <Property Name="ReviewPeriod">InventoryLocations.ReviewPeriod</Property>
        <Property Name="ReviewTimerName">
          <Value>InventoryLocations.ReviewTimer</Value>
        </Property>
        <Property Name="ReplenishmentPolicy">
          <Value>InventoryLocations.ReplenishmentPolicy</Value>
        </Property>
        <Property Name="OnReplenishmentOrderProcess">
          <Value>InventoryLocations.OnReplenishmentOrderProcess</Value>
        </Property>
        <Property Name="AssumeInfiniteAvailabilityCondition">InventoryLocations.InfiniteAvailability</Property>
      </Properties>
    </Element>
    <Element Type="Monitor" AutoCreated="True" Name="Monitor3" Scope="Public">
      <Properties>
        <Property Name="StateVariableName">
          <Value>InventoryLocations.InventoryName.Inventory.QuantityInStock</Value>
        </Property>
        <Property Name="TriggeredProcessName">
          <Value>InventoryLocations.OnProducedProcess</Value>
        </Property>
      </Properties>
    </Element>
    <Element Type="StateStatistic" AutoCreated="True" Name="StateStatistic5" Scope="Public">
      <Properties>
        <Property Name="StateVariableName">
          <Value>InventoryLocations.InventoryName.QuantityInStock</Value>
        </Property>
        <Property Name="DataSource">InventoryLocations.InventoryName</Property>
        <Property Name="LogObservations">True</Property>
        <Property Name="DisplayCategory">InventoryLocations.DisplayCategory</Property>
      </Properties>
    </Element>
    <Element Type="Inventory" AutoCreated="True" Name="FinishedGoodA_WC2ToConveyor" Scope="Public">
      <Properties>
        <Property Name="ReportStatistics">InventoryLocations.ReportStatistics</Property>
        <Property Name="MaterialName">
          <Value>InventoryLocations.MaterialName</Value>
        </Property>
        <Property Name="SiteObjectName">InventoryLocations.SiteObjectName</Property>
        <Property Name="InitialQuantity">InventoryLocations.InitialQuantity</Property>
        <Property Name="ReviewPeriod">InventoryLocations.ReviewPeriod</Property>
        <Property Name="ReviewTimerName">
          <Value>InventoryLocations.ReviewTimer</Value>
        </Property>
        <Property Name="ReplenishmentPolicy">
          <Value>InventoryLocations.ReplenishmentPolicy</Value>
        </Property>
        <Property Name="OnReplenishmentOrderProcess">
          <Value>InventoryLocations.OnReplenishmentOrderProcess</Value>
        </Property>
        <Property Name="AssumeInfiniteAvailabilityCondition">InventoryLocations.InfiniteAvailability</Property>
      </Properties>
    </Element>
    <Element Type="Monitor" AutoCreated="True" Name="Monitor2" Scope="Public">
      <Properties>
        <Property Name="StateVariableName">
          <Value>InventoryLocations.InventoryName.Inventory.QuantityInStock</Value>
        </Property>
        <Property Name="TriggeredProcessName">
          <Value>InventoryLocations.OnProducedProcess</Value>
        </Property>
      </Properties>
    </Element>
    <Element Type="StateStatistic" AutoCreated="True" Name="StateStatistic4" Scope="Public">
      <Properties>
        <Property Name="StateVariableName">
          <Value>InventoryLocations.InventoryName.QuantityInStock</Value>
        </Property>
        <Property Name="DataSource">InventoryLocations.InventoryName</Property>
        <Property Name="LogObservations">True</Property>
        <Property Name="DisplayCategory">InventoryLocations.DisplayCategory</Property>
      </Properties>
    </Element>
    <Element Type="Inventory" AutoCreated="True" Name="FinishedGoodB_WC2ToConveyor" Scope="Public">
      <Properties>
        <Property Name="ReportStatistics">InventoryLocations.ReportStatistics</Property>
        <Property Name="MaterialName">
          <Value>InventoryLocations.MaterialName</Value>
        </Property>
        <Property Name="SiteObjectName">InventoryLocations.SiteObjectName</Property>
        <Property Name="InitialQuantity">InventoryLocations.InitialQuantity</Property>
        <Property Name="ReviewPeriod">InventoryLocations.ReviewPeriod</Property>
        <Property Name="ReviewTimerName">
          <Value>InventoryLocations.ReviewTimer</Value>
        </Property>
        <Property Name="ReplenishmentPolicy">
          <Value>InventoryLocations.ReplenishmentPolicy</Value>
        </Property>
        <Property Name="OnReplenishmentOrderProcess">
          <Value>InventoryLocations.OnReplenishmentOrderProcess</Value>
        </Property>
        <Property Name="AssumeInfiniteAvailabilityCondition">InventoryLocations.InfiniteAvailability</Property>
      </Properties>
    </Element>
    <Element Type="Monitor" AutoCreated="True" Name="Monitor4" Scope="Public">
      <Properties>
        <Property Name="StateVariableName">
          <Value>InventoryLocations.InventoryName.Inventory.QuantityInStock</Value>
        </Property>
        <Property Name="TriggeredProcessName">
          <Value>InventoryLocations.OnProducedProcess</Value>
        </Property>
      </Properties>
    </Element>
    <Element Type="StateStatistic" AutoCreated="True" Name="StateStatistic6" Scope="Public">
      <Properties>
        <Property Name="StateVariableName">
          <Value>InventoryLocations.InventoryName.QuantityInStock</Value>
        </Property>
        <Property Name="DataSource">InventoryLocations.InventoryName</Property>
        <Property Name="LogObservations">True</Property>
        <Property Name="DisplayCategory">InventoryLocations.DisplayCategory</Property>
      </Properties>
    </Element>
  </Elements>
  <Processes>
    <Process Name="OnRunInitialized" IsOverride="True" ShowAsUserExecutableProcess="False" InterfaceProcessID="Object.OnRunInitialized" BeginStepID="2" Description="Initialize ManufacturingOrders table, then iterate through each Materials row and its associated MaterialLots row to sum total quantity involved. If it’s a ManufacturingMaterial then create that quantity of MfgOrders and send to Stock. Otherwise create that quantity of PurchaseOrders and send to Receiving.">
      <Properties>
        <Property Name="TokenClassName">CustomToken</Property>
      </Properties>
      <Steps>
        <Step Type="Execute" Name="OnRunInitializedProcess" ID="2">
          <Properties>
            <Property Name="ProcessName">
              <Value>OnRunInitializedProcess</Value>
            </Property>
          </Properties>
        </Step>
      </Steps>
    </Process>
    <Process Name="OnRunEnding" IsOverride="True" ShowAsUserExecutableProcess="False" InterfaceProcessID="Object.OnRunEnding" BeginStepID="2">
      <Properties />
      <Steps>
        <Step Type="Execute" Name="OnRunEndingProcess" ID="2">
          <Properties>
            <Property Name="ProcessName">
              <Value>OnRunEndingProcess</Value>
            </Property>
          </Properties>
        </Step>
      </Steps>
    </Process>
    <Process Name="AllocateMaterial" BeginStepID="37" Category="Allocate">
      <Properties>
        <Property Name="TokenClassName">CustomToken</Property>
      </Properties>
      <Steps>
        <Step Type="Assign" Name="SOId" ID="2">
          <Properties>
            <Property Name="StateVariableName">
              <Value>CustomToken.SOId</Value>
            </Property>
            <Property Name="NewValue">SalesOrders.SOId</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="3" />
        </Step>
        <Step Type="Assign" Name="MaterialName" ID="3">
          <Properties>
            <Property Name="StateVariableName">
              <Value>CustomToken.Material</Value>
            </Property>
            <Property Name="NewValue">SalesOrders.MaterialName</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="26" />
        </Step>
        <Step Type="Assign" Name="Quantity" ID="4">
          <Properties>
            <Property Name="StateVariableName">
              <Value>CustomToken.Quantity</Value>
            </Property>
            <Property Name="NewValue">SalesOrders.Quantity</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="16" />
        </Step>
        <Step Type="Search" Name="ManufacturingOrders" ID="5">
          <Properties>
            <Property Name="CollectionType">TableRows</Property>
            <Property Name="TableName">ManufacturingOrders</Property>
            <Property Name="SearchRelatedRowsOnly">False</Property>
            <Property Name="MatchCondition">ManufacturingOrders.SOEntityID == CustomToken.CurrentEntity.ID</Property>
            <Property Name="Limit">Infinity</Property>
          </Properties>
          <Exit Name="Found" Type="Alternate" NextID="6" />
        </Step>
        <Step Type="Create" Name="MFGOrder" ID="6">
          <Properties>
            <Property Name="EntityType">ManufacturingOrderEntity</Property>
          </Properties>
          <Exit Name="Created" Type="Alternate" NextID="31" />
        </Step>
        <Step Type="Transfer" Name="ParallelRouteController" ID="7">
          <Properties>
            <Property Name="NodeName">Input@OperationController</Property>
          </Properties>
        </Step>
        <Step Type="Search" Name="SalesOrders" ID="8">
          <Properties>
            <Property Name="CollectionType">TableRows</Property>
            <Property Name="TableName">SalesOrders</Property>
            <Property Name="SearchRelatedRowsOnly">False</Property>
            <Property Name="MatchCondition">SalesOrders.SOId == CustomToken.SOId</Property>
            <Property Name="Limit">Infinity</Property>
            <Property Name="CopyOverTableRowReferences">False</Property>
            <Property Name="SetTableRowConflictResolution">Abort</Property>
          </Properties>
          <Exit Name="Found" Type="Alternate" NextID="39" />
        </Step>
        <Step Type="Decide" Name="Is WIP" ID="9">
          <Properties>
            <Property Name="DecideType">ConditionBased</Property>
            <Property Name="ConditionOrProbability">SalesOrders.OrderStatus == List.OrderStatus.WIP</Property>
          </Properties>
          <Exit Name="True" Type="Primary" NextID="11" />
          <Exit Name="False" Type="Alternate" NextID="22" />
        </Step>
        <Step Type="Search" Name="WorkInProcess" ID="10">
          <Properties>
            <Property Name="CollectionType">TableRows</Property>
            <Property Name="TableName">WorkInProcess</Property>
            <Property Name="MatchCondition">WorkInProcess.MOId == CustomToken.MOId</Property>
            <Property Name="SaveIndexFound">
              <Value>CustomToken.RowNumber</Value>
            </Property>
          </Properties>
          <Exit Name="Original" Type="Primary" NextID="13" />
        </Step>
        <Step Type="Assign" Name="MOId" ID="11">
          <Properties>
            <Property Name="StateVariableName">
              <Value>CustomToken.MOId</Value>
            </Property>
            <Property Name="NewValue">ManufacturingOrders.MOId</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="10" />
        </Step>
        <Step Type="SetRow" Name="WorkInProcess" ID="12">
          <Properties>
            <Property Name="TableName">WorkInProcess</Property>
            <Property Name="RowNumber">CustomToken.RowNumber</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="22" />
        </Step>
        <Step Type="Decide" Name="RowNumber" ID="13">
          <Properties>
            <Property Name="DecideType">ConditionBased</Property>
            <Property Name="ConditionOrProbability">CustomToken.RowNumber &gt; 0</Property>
          </Properties>
          <Exit Name="True" Type="Primary" NextID="15" />
          <Exit Name="False" Type="Alternate" NextID="22" />
        </Step>
        <Step Type="SetRow" Name="Operations" ID="14">
          <Properties>
            <Property Name="TableName">Operations</Property>
            <Property Name="RowNumber">WorkInProcess.CurrentSequenceNumber / 10 - 1</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="12" />
        </Step>
        <Step Type="Assign" Name="T HasWIP" ID="15">
          <Properties>
            <Property Name="StateVariableName">
              <Value>ManufacturingOrders.HasWIP</Value>
            </Property>
            <Property Name="NewValue">True</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="14" />
        </Step>
        <Step Type="Create" Name="Token" ID="16">
          <Properties>
            <Property Name="CreateType">NewToken</Property>
            <Property Name="NumberToCreate">Math.Ceiling( CustomToken.Quantity / CustomToken.BatchSize)</Property>
          </Properties>
          <Exit Name="Original" Type="Primary" NextID="8" />
          <Exit Name="Created" Type="Alternate" NextID="25" />
        </Step>
        <Step Type="SetRow" Name="InventoryLocations" ID="17">
          <Properties>
            <Property Name="ObjectType">Token</Property>
            <Property Name="TableName">InventoryLocations</Property>
            <Property Name="RowNumber">CustomToken.RowNumber</Property>
            <Property Name="ClearAllTableReferencesFirst">True</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="45" />
        </Step>
        <Step Type="Assign" Name="RowNumber" ID="18">
          <Properties>
            <Property Name="StateVariableName">
              <Value>CustomToken.RowNumber</Value>
            </Property>
            <Property Name="NewValue">SalesOrders.SOId.RowForKey(CustomToken.SOId)</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="19" />
        </Step>
        <Step Type="SetRow" Name="SalesOrders" ID="19">
          <Properties>
            <Property Name="ObjectType">Token</Property>
            <Property Name="TableName">SalesOrders</Property>
            <Property Name="RowNumber">CustomToken.RowNumber</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="29" />
        </Step>
        <Step Type="AddRow" Name="ManufacturingOrders" ID="20">
          <Properties>
            <Property Name="ObjectType">Token</Property>
            <Property Name="TableName">ManufacturingOrders</Property>
            <Property Name="KeyColumnValue">CustomToken.SOId + " - " + CustomToken.Material.Name + "- BatchNumber:" + String.FromReal(ModelEntity.MORowCount) </Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="21" />
        </Step>
        <Step Type="Assign" Name="SOId" ID="21">
          <Properties>
            <Property Name="StateVariableName">
              <Value>ManufacturingOrders.SOId</Value>
            </Property>
            <Property Name="NewValue">SalesOrders.SOId</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="40" />
        </Step>
        <Step Type="Assign" Name="MOIdBOMLevel" ID="22">
          <Properties>
            <Property Name="StateVariableName">
              <Value>ModelEntity.MOIdBOMLevel</Value>
            </Property>
            <Property Name="NewValue">ManufacturingOrders.MOId + " - " + String.FromReal(ManufacturingOrders.BOMLevel) </Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="7" />
        </Step>
        <Step Type="Assign" Name="DisplayString" ID="23">
          <Properties>
            <Property Name="StateVariableName">
              <Value>ModelEntity.DisplayString</Value>
            </Property>
            <Property Name="NewValue">ManufacturingOrders.MOId</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="24" />
        </Step>
        <Step Type="Assign" Name="DueDate" ID="24">
          <Properties>
            <Property Name="StateVariableName">
              <Value>ModelEntity.DueDate</Value>
            </Property>
            <Property Name="NewValue">CustomToken.CurrentEntity.ModelEntity.DueDate</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="28" />
        </Step>
        <Step Type="Search" Name="InventoryLocations" ID="25">
          <Properties>
            <Property Name="CollectionType">TableRows</Property>
            <Property Name="TableName">InventoryLocations</Property>
            <Property Name="SearchRelatedRowsOnly">False</Property>
            <Property Name="MatchCondition">InventoryLocations.MaterialName == CustomToken.Material &amp;&amp; InventoryLocations.SiteObjectName == CustomToken.Resource</Property>
            <Property Name="SaveIndexFound">
              <Value>CustomToken.RowNumber</Value>
            </Property>
          </Properties>
          <Exit Name="Original" Type="Primary" NextID="27" />
        </Step>
        <Step Type="Assign" Name="Resource" ID="26">
          <Properties>
            <Property Name="StateVariableName">
              <Value>CustomToken.Resource</Value>
            </Property>
            <Property Name="NewValue">SalesOrders.SiteObjectName</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="44" />
        </Step>
        <Step Type="Decide" Name="RowNumber &gt; 0" ID="27">
          <Properties>
            <Property Name="DecideType">ConditionBased</Property>
            <Property Name="ConditionOrProbability">CustomToken.RowNumber &gt; 0</Property>
          </Properties>
          <Exit Name="True" Type="Primary" NextID="17" />
        </Step>
        <Step Type="Assign" Name="RowNumber" ID="28">
          <Properties>
            <Property Name="StateVariableName">
              <Value>CustomToken.RowNumber</Value>
            </Property>
            <Property Name="NewValue">ManufacturingOrders.ProcessName + 1</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="34" />
        </Step>
        <Step Type="Assign" Name="ManufacturingOrder Row Count" ID="29">
          <Properties>
            <Property Name="StateVariableName">
              <Value>ModelEntity.MORowCount</Value>
            </Property>
            <Property Name="NewValue">ModelEntity.MORowCount +1</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="35" />
        </Step>
        <Step Type="Assign" Name="MOId" ID="30">
          <Properties>
            <Property Name="StateVariableName">
              <Value>ModelEntity.MOId</Value>
            </Property>
            <Property Name="NewValue">ManufacturingOrders.MOId</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="23" />
        </Step>
        <Step Type="Assign" Name="T FromManufacturingOrder" ID="31">
          <Properties>
            <Property Name="StateVariableName">
              <Value>ModelEntity.FromManufacturingOrder</Value>
            </Property>
            <Property Name="NewValue">True</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="42" />
        </Step>
        <Step Type="Assign" Name="RowNumber" ID="32">
          <Properties>
            <Property Name="StateVariableName">
              <Value>ManufacturingOrders.RowNumber</Value>
            </Property>
            <Property Name="NewValue">MONumber</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="38" />
        </Step>
        <Step Type="Assign" Name="MONumber++" ID="33">
          <Properties>
            <Property Name="StateVariableName">
              <Value>MONumber</Value>
            </Property>
            <Property Name="NewValue">MONumber + 1</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="32" />
        </Step>
        <Step Type="Assign" Name="CurrentMaterial" ID="34">
          <Properties>
            <Property Name="StateVariableName">
              <Value>ModelEntity.CurrentMaterial</Value>
            </Property>
            <Property Name="NewValue">SalesOrders.MaterialName</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="43" />
        </Step>
        <Step Type="Decide" Name="T RandomnessDisable" ID="35">
          <Properties>
            <Property Name="DecideType">ConditionBased</Property>
            <Property Name="ConditionOrProbability">Run.RandomnessDisabled == True</Property>
          </Properties>
          <Exit Name="True" Type="Primary" NextID="20" />
          <Exit Name="False" Type="Alternate" NextID="36" />
        </Step>
        <Step Type="AddRow" Name="ManufacturingOrders" ID="36">
          <Properties>
            <Property Name="ObjectType">Token</Property>
            <Property Name="TableName">ManufacturingOrders</Property>
            <Property Name="KeyColumnValue">CustomToken.SOId + " - " + CustomToken.Material.Name + "- BatchNumber:" + String.FromReal(ModelEntity.MORowCount) + "- Random SO Entity ID:" + String.FromReal( CustomToken.CurrentEntity.ID )</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="21" />
        </Step>
        <Step Type="Assign" Name="CurrentEntity" ID="37">
          <Properties>
            <Property Name="StateVariableName">
              <Value>CustomToken.CurrentEntity</Value>
            </Property>
            <Property Name="NewValue">ModelEntity</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="2" />
        </Step>
        <Step Type="Assign" Name="SOEntityID" ID="38">
          <Properties>
            <Property Name="StateVariableName">
              <Value>ManufacturingOrders.SOEntityID</Value>
            </Property>
            <Property Name="NewValue">CustomToken.CurrentEntity.ID</Property>
          </Properties>
        </Step>
        <Step Type="Assign" Name="SOEntityID" ID="39">
          <Properties>
            <Property Name="StateVariableName">
              <Value>SalesOrders.SOEntityID</Value>
            </Property>
            <Property Name="NewValue">CustomToken.CurrentEntity.ID</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="5" />
        </Step>
        <Step Type="Assign" Name="Quantity" ID="40">
          <Properties>
            <Property Name="StateVariableName">
              <Value>ManufacturingOrders.Quantity</Value>
            </Property>
            <Property Name="NewValue">CustomToken.BatchSize</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="33" />
        </Step>
        <Step Type="Assign" Name="SOId" ID="41">
          <Properties>
            <Property Name="StateVariableName">
              <Value>ModelEntity.SOId</Value>
            </Property>
            <Property Name="NewValue">ManufacturingOrders.SOId</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="30" />
        </Step>
        <Step Type="Assign" Name="RowNumber" ID="42">
          <Properties>
            <Property Name="StateVariableName">
              <Value>ModelEntity.RowNumber</Value>
            </Property>
            <Property Name="NewValue">ManufacturingOrders.RowNumber</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="41" />
        </Step>
        <Step Type="Assign" Name="Material Class" ID="43">
          <Properties>
            <Property Name="StateVariableName">
              <Value>ModelEntity.MaterialClass</Value>
            </Property>
            <Property Name="NewValue">Materials[Materials.MaterialName.RowForKey(SalesOrders.MaterialName)].MaterialClass</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="47" />
        </Step>
        <Step Type="Assign" Name="BatchSize" ID="44">
          <Properties>
            <Property Name="StateVariableName">
              <Value>CustomToken.BatchSize</Value>
            </Property>
            <Property Name="NewValue">Materials[Materials.MaterialName.RowForKey( CustomToken.Material.Name )].BatchSize</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="4" />
        </Step>
        <Step Type="Assign" Name="ProcessName" Color="f79646" ID="45">
          <Properties>
            <Property Name="StateVariableName">
              <Value>CustomToken.ProcessName</Value>
            </Property>
            <Property Name="NewValue">InventoryLocationsToProcesses[1].ProcessName</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="46" />
        </Step>
        <Step Type="SetRow" Name="Processes" ID="46">
          <Properties>
            <Property Name="ObjectType">Token</Property>
            <Property Name="TableName">Processes</Property>
            <Property Name="RowNumber">Processes.ProcessName.RowForKey(CustomToken.ProcessName )</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="18" />
        </Step>
        <Step Type="Assign" Name="InventoryLocation" ID="47">
          <Properties>
            <Property Name="StateVariableName">
              <Value>ModelEntity.InventoryLocation</Value>
            </Property>
            <Property Name="NewValue">InventoryLocations.InventoryName</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="9" />
        </Step>
      </Steps>
    </Process>
    <Process Name="OperationController_TaskProcessName" BeginStepID="10" Category="Controllers">
      <Properties>
        <Property Name="TokenClassName">CustomToken</Property>
      </Properties>
      <Steps>
        <Step Type="Transfer" Name="MTRServer.Input" ID="2">
          <Properties>
            <Property Name="NodeName">Operations.ResourceName.MTRServer.Input</Property>
          </Properties>
        </Step>
        <Step Type="Assign" Name="CurrentEntity" ID="3">
          <Properties>
            <Property Name="StateVariableName">
              <Value>CustomToken.CurrentEntity</Value>
            </Property>
            <Property Name="NewValue">ModelEntity</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="25" />
        </Step>
        <Step Type="Assign" Name="ParentEntity" ID="4">
          <Properties>
            <Property Name="StateVariableName">
              <Value>ModelEntity.ParentEntity</Value>
            </Property>
            <Property Name="NewValue">CustomToken.CurrentEntity</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="8" />
        </Step>
        <Step Type="Search" Name="Operation Entities" ID="5">
          <Properties>
            <Property Name="EntityType">OperationEntity</Property>
            <Property Name="MatchCondition">Candidate.ModelEntity.DisplayString == CustomToken.CurrentEntity.ModelEntity.DisplayString &amp;&amp; Candidate.ModelEntity.ParallelSequence == CustomToken.ParallelSequence</Property>
            <Property Name="Limit">Infinity</Property>
            <Property Name="SaveNumberFound">
              <Value>CustomToken.NumberOfRows</Value>
            </Property>
          </Properties>
          <Exit Name="Original" Type="Primary" NextID="6" />
          <Exit Name="Found" Type="Alternate" NextID="16" />
        </Step>
        <Step Type="Decide" Name="NumberOfRows &gt; 0" ID="6">
          <Properties>
            <Property Name="DecideType">ConditionBased</Property>
            <Property Name="ConditionOrProbability">CustomToken.NumberOfRows &gt; 0</Property>
          </Properties>
          <Exit Name="True" Type="Primary" NextID="46" />
          <Exit Name="False" Type="Alternate" NextID="7" />
        </Step>
        <Step Type="Create" Name="Operation" ID="7">
          <Properties>
            <Property Name="CreateType">CopyAssociatedObject</Property>
            <Property Name="EntityType">OperationEntity</Property>
            <Property Name="TokenWaitAction">WaitUntilNewTokenProcessingCompleted</Property>
          </Properties>
          <Exit Name="Original" Type="Primary" NextID="46" />
          <Exit Name="Created" Type="Alternate" NextID="45" />
        </Step>
        <Step Type="Assign" Name="OperationName" ID="8">
          <Properties>
            <Property Name="StateVariableName">
              <Value>ModelEntity.OperationName</Value>
            </Property>
            <Property Name="NewValue">CustomToken.CurrentEntity.ModelEntity.OperationName</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="12" />
        </Step>
        <Step Type="Assign" Name="PhaseKey" ID="9">
          <Properties>
            <Property Name="StateVariableName">
              <Value>ModelEntity.PhaseKey</Value>
            </Property>
            <Property Name="NewValue">CustomToken.CurrentEntity.ModelEntity.PhaseKey</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="32" />
        </Step>
        <Step Type="Decide" Name="T Enabled" ID="10">
          <Properties>
            <Property Name="DecideType">ConditionBased</Property>
            <Property Name="ConditionOrProbability">Operations.Enabled == True</Property>
          </Properties>
          <Exit Name="True" Type="Primary" NextID="33" />
        </Step>
        <Step Type="Assign" Name="SequenceNumber" ID="11">
          <Properties>
            <Property Name="StateVariableName">
              <Value>ModelEntity.SequenceNumber</Value>
            </Property>
            <Property Name="NewValue">Operations.SequenceNumber</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="29" />
        </Step>
        <Step Type="SetRow" Name="Operations" ID="12">
          <Properties>
            <Property Name="TableName">Operations</Property>
            <Property Name="RowNumber">Operations.OperationName.RowForKey(ModelEntity.OperationName )</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="17" />
        </Step>
        <Step Type="Assign" Name="T EntityJustCreated" ID="13">
          <Properties>
            <Property Name="StateVariableName">
              <Value>CustomToken.EntityJustCreated</Value>
            </Property>
            <Property Name="NewValue">True</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="23" />
        </Step>
        <Step Type="Decide" Name="T EntityJustCreated" ID="14">
          <Properties>
            <Property Name="DecideType">ConditionBased</Property>
            <Property Name="ConditionOrProbability">CustomToken.EntityJustCreated == True</Property>
          </Properties>
          <Exit Name="True" Type="Primary" NextID="18" />
          <Exit Name="False" Type="Alternate" NextID="42" />
        </Step>
        <Step Type="Fire" Name="NextPhaseStarted" ID="15">
          <Properties>
            <Property Name="EventName">ModelEntity.NextOperationStarted</Property>
          </Properties>
        </Step>
        <Step Type="Assign" Name="LastOperation" ID="16">
          <Properties>
            <Property Name="StateVariableName">
              <Value>ModelEntity.LastOperation</Value>
            </Property>
            <Property Name="NewValue">CustomToken.CurrentEntity.ModelEntity.LastOperation</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="4" />
        </Step>
        <Step Type="Assign" Name="LoopbackSequenceNumber" ID="17">
          <Properties>
            <Property Name="StateVariableName">
              <Value>ModelEntity.LoopbackSequenceNumber</Value>
            </Property>
            <Property Name="NewValue">Operations.LoopbackSequenceNumber</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="9" />
        </Step>
        <Step Type="Decide" Name="T Is.MTRServer " ID="18">
          <Properties>
            <Property Name="DecideType">ConditionBased</Property>
            <Property Name="ConditionOrProbability">Operations.ResourceName.Is.MTRServer == True</Property>
          </Properties>
          <Exit Name="True" Type="Primary" NextID="2" />
          <Exit Name="False" Type="Alternate" NextID="36" />
        </Step>
        <Step Type="Transfer" Name="Phases.ResourceName" ID="19">
          <Properties>
            <Property Name="NodeName">Operations.ResourceName.Node</Property>
          </Properties>
        </Step>
        <Step Type="Decide" Name="T Is.TransferNode" ID="20">
          <Properties>
            <Property Name="DecideType">ConditionBased</Property>
            <Property Name="ConditionOrProbability">Operations.ResourceName.Is.TransferNode == True</Property>
          </Properties>
          <Exit Name="True" Type="Primary" NextID="41" />
          <Exit Name="False" Type="Alternate" NextID="21" />
        </Step>
        <Step Type="Notify" Name="Invalid ResourceName" ID="21">
          <Properties>
            <Property Name="NotificationType">Error</Property>
            <Property Name="MessageHeading">"Phases.ResourceName Must Be MTRServer or TransferNode"</Property>
            <Property Name="MessageContent">"Entity Display String : " + ModelEntity.DisplayString + " - Phase : " + ModelEntity.PhaseKey</Property>
          </Properties>
        </Step>
        <Step Type="Assign" Name="ParallelSequence" ID="22">
          <Properties>
            <Property Name="StateVariableName">
              <Value>CustomToken.ParallelSequence</Value>
            </Property>
            <Property Name="NewValue">Operations.ParallelSequence</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="30" />
        </Step>
        <Step Type="Assign" Name="ParallelSequence" ID="23">
          <Properties>
            <Property Name="StateVariableName">
              <Value>ModelEntity.ParallelSequence</Value>
            </Property>
            <Property Name="NewValue">CustomToken.ParallelSequence</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="4" />
        </Step>
        <Step Type="Assign" Name="0 ParallelSequence" ID="24">
          <Properties>
            <Property Name="StateVariableName">
              <Value>ModelEntity.ParallelSequence</Value>
            </Property>
            <Property Name="NewValue">0</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="22" />
        </Step>
        <Step Type="Assign" Name="OperationName" ID="25">
          <Properties>
            <Property Name="StateVariableName">
              <Value>ModelEntity.OperationName</Value>
            </Property>
            <Property Name="NewValue">Operations.OperationName</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="24" />
        </Step>
        <Step Type="Decide" Name="ToLocation != Nothing" ID="26">
          <Properties>
            <Property Name="DecideType">ConditionBased</Property>
            <Property Name="ConditionOrProbability">Operations.ToLocation != Nothing </Property>
          </Properties>
          <Exit Name="True" Type="Primary" NextID="34" />
          <Exit Name="False" Type="Alternate" NextID="14" />
        </Step>
        <Step Type="Assign" Name="ToLocation" ID="27">
          <Properties>
            <Property Name="StateVariableName">
              <Value>ModelEntity.ToLocation</Value>
            </Property>
            <Property Name="NewValue">Operations.ToLocation.MTRServer.Input</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="28" />
        </Step>
        <Step Type="Assign" Name="Vehicle" ID="28">
          <Properties>
            <Property Name="StateVariableName">
              <Value>ModelEntity.UseVehicle</Value>
            </Property>
            <Property Name="NewValue">Operations.UseVehicle</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="14" />
        </Step>
        <Step Type="Assign" Name="VehicleDriver" ID="29">
          <Properties>
            <Property Name="StateVariableName">
              <Value>ModelEntity.VehicleDriver</Value>
            </Property>
            <Property Name="NewValue">Operations.VehicleDriver</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="26" />
        </Step>
        <Step Type="Assign" Name="AlternatePath" ID="30">
          <Properties>
            <Property Name="StateVariableName">
              <Value>CustomToken.AlternatePath</Value>
            </Property>
            <Property Name="NewValue">Operations.AlternatePath</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="31" />
        </Step>
        <Step Type="Assign" Name="StartingAlternatePath" ID="31">
          <Properties>
            <Property Name="StateVariableName">
              <Value>ModelEntity.StartingAlternatePath</Value>
            </Property>
            <Property Name="NewValue">Operations.AlternatePath</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="48" />
        </Step>
        <Step Type="Assign" Name="StartingAlternatePath" ID="32">
          <Properties>
            <Property Name="StateVariableName">
              <Value>ModelEntity.StartingAlternatePath</Value>
            </Property>
            <Property Name="NewValue">Operations.AlternatePath</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="11" />
        </Step>
        <Step Type="Decide" Name="Operatiions.AlternatePath == ModelEntity.AlternatePath" ID="33">
          <Properties>
            <Property Name="DecideType">ConditionBased</Property>
            <Property Name="ConditionOrProbability">Operations.AlternatePath == ModelEntity.AlternatePath</Property>
          </Properties>
          <Exit Name="True" Type="Primary" NextID="47" />
        </Step>
        <Step Type="Decide" Name="T Is.MTRServer " ID="34">
          <Properties>
            <Property Name="DecideType">ConditionBased</Property>
            <Property Name="ConditionOrProbability">Operations.ToLocation.Is.MTRServer == True</Property>
          </Properties>
          <Exit Name="True" Type="Primary" NextID="27" />
          <Exit Name="False" Type="Alternate" NextID="38" />
        </Step>
        <Step Type="Assign" Name="NULL ToLocation" ID="35">
          <Properties>
            <Property Name="StateVariableName">
              <Value>ModelEntity.ToLocation</Value>
            </Property>
            <Property Name="NewValue">Nothing</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="28" />
        </Step>
        <Step Type="Decide" Name="T Is.MTRTransferServer " ID="36">
          <Properties>
            <Property Name="DecideType">ConditionBased</Property>
            <Property Name="ConditionOrProbability">Operations.ResourceName.Is.MTRTransferServer == True</Property>
          </Properties>
          <Exit Name="True" Type="Primary" NextID="37" />
          <Exit Name="False" Type="Alternate" NextID="20" />
        </Step>
        <Step Type="Transfer" Name="MTRServer.Input" ID="37">
          <Properties>
            <Property Name="NodeName">Operations.ResourceName.MTRTransferServer.Input</Property>
          </Properties>
        </Step>
        <Step Type="Decide" Name="T Is.MTRTransferServer " ID="38">
          <Properties>
            <Property Name="DecideType">ConditionBased</Property>
            <Property Name="ConditionOrProbability">Operations.ToLocation.Is.MTRTransferServer == True</Property>
          </Properties>
          <Exit Name="True" Type="Primary" NextID="39" />
          <Exit Name="False" Type="Alternate" NextID="35" />
        </Step>
        <Step Type="Assign" Name="ToLocation" ID="39">
          <Properties>
            <Property Name="StateVariableName">
              <Value>ModelEntity.ToLocation</Value>
            </Property>
            <Property Name="NewValue">Operations.ToLocation.MTRTransferServer.Input</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="28" />
        </Step>
        <Step Type="Assign" Name="Picture" ID="40">
          <Properties>
            <Property Name="StateVariableName">
              <Value>ModelEntity.Picture</Value>
            </Property>
            <Property Name="NewValue">Materials.Picture</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="13" />
        </Step>
        <Step Type="Execute" Name="CheckSetLocationOrPhaseEntiyFinished" ID="41">
          <Properties>
            <Property Name="ProcessName">
              <Value>CheckSetLocationOrPhaseEntiyFinished</Value>
            </Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="19" />
        </Step>
        <Step Type="Execute" Name="CheckAndUnloadVehicle" ID="42">
          <Properties>
            <Property Name="ProcessName">
              <Value>CheckAndUnloadVehicle</Value>
            </Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="15" />
        </Step>
        <Step Type="SetRow" Name="Materials" ID="43">
          <Properties>
            <Property Name="TableName">Materials</Property>
            <Property Name="RowNumber">Materials.MaterialName.RowForKey(ModelEntity.CurrentMaterial.Name)</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="40" />
        </Step>
        <Step Type="Assign" Name="Entity" ID="44">
          <Properties>
            <Property Name="StateVariableName">
              <Value>ManufacturingOrders.Entity</Value>
            </Property>
            <Property Name="NewValue">ModelEntity</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="43" />
        </Step>
        <Step Type="Decide" Name="T FromManufacturingOrders" ID="45">
          <Properties>
            <Property Name="DecideType">ConditionBased</Property>
            <Property Name="ConditionOrProbability">ModelEntity.FromManufacturingOrder == True</Property>
          </Properties>
          <Exit Name="True" Type="Primary" NextID="44" />
          <Exit Name="False" Type="Alternate" NextID="43" />
        </Step>
        <Step Type="Wait" Name="OperationFinished" ID="46">
          <Properties>
            <Property Name="EventName">ModelEntity.OperationFinished</Property>
          </Properties>
        </Step>
        <Step Type="Delay" Name="Epsilon" ID="47">
          <Properties>
            <Property Name="DelayTime">Math.Epsilon</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="3" />
        </Step>
        <Step Type="Decide" Name="AvailableRowCount == 0" ID="48">
          <Properties>
            <Property Name="DecideType">ConditionBased</Property>
            <Property Name="ConditionOrProbability">OperationSuccessors.AvailableRowCount == 0</Property>
          </Properties>
          <Exit Name="True" Type="Primary" NextID="49" />
          <Exit Name="False" Type="Alternate" NextID="5" />
        </Step>
        <Step Type="Assign" Name="T LastOperation" ID="49">
          <Properties>
            <Property Name="StateVariableName">
              <Value>ModelEntity.LastOperation</Value>
            </Property>
            <Property Name="NewValue">True</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="5" />
        </Step>
      </Steps>
    </Process>
    <Process Name="CheckAndUnloadVehicle" BeginStepID="2" Category="MTRServer">
      <Properties>
        <Property Name="TokenClassName">CustomToken</Property>
      </Properties>
      <Steps>
        <Step Type="Assign" Name="CurrentEntity" ID="2">
          <Properties>
            <Property Name="StateVariableName">
              <Value>CustomToken.CurrentEntity</Value>
            </Property>
            <Property Name="NewValue">ModelEntity</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="10" />
        </Step>
        <Step Type="Decide" Name="T LastOp &amp;&amp; T LastPhase" ID="3">
          <Properties>
            <Property Name="DecideType">ConditionBased</Property>
            <Property Name="ConditionOrProbability">ModelEntity.LastOperation == True</Property>
          </Properties>
          <Exit Name="True" Type="Primary" NextID="4" />
          <Exit Name="False" Type="Alternate" NextID="7" />
        </Step>
        <Step Type="Assign" Name="T DestroyEntity" ID="4">
          <Properties>
            <Property Name="StateVariableName">
              <Value>ModelEntity.DestroyEntity</Value>
            </Property>
            <Property Name="NewValue">True</Property>
          </Properties>
        </Step>
        <Step Type="Assign" Name="CurrentLocation" ID="5">
          <Properties>
            <Property Name="StateVariableName">
              <Value>CustomToken.CurrentLocation</Value>
            </Property>
            <Property Name="NewValue">ModelEntity.Location.Parent.MTRServer.RoutingResource</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="6" />
        </Step>
        <Step Type="Decide" Name="F HasValue or ( Cur == To &amp;&amp; Cur == ResName)" ID="6">
          <Properties>
            <Property Name="DecideType">ConditionBased</Property>
            <Property Name="ConditionOrProbability">Operations.ToLocation.HasValue == False || Operations.ToLocation == CustomToken.CurrentLocation</Property>
          </Properties>
          <Exit Name="True" Type="Primary" NextID="3" />
        </Step>
        <Step Type="Search" Name="Par Seq OperationSuccessors" ID="7">
          <Properties>
            <Property Name="CollectionType">TableRows</Property>
            <Property Name="TableName">OperationSuccessors</Property>
            <Property Name="MatchCondition">OperationSuccessors.SuccessorParallelSequence == CustomToken.CurrentEntity.ModelEntity.ParallelSequence</Property>
            <Property Name="SaveNumberFound">
              <Value>CustomToken.NumberOfRows</Value>
            </Property>
          </Properties>
          <Exit Name="Original" Type="Primary" NextID="8" />
        </Step>
        <Step Type="Decide" Name="NumberOfRows == 0" ID="8">
          <Properties>
            <Property Name="DecideType">ConditionBased</Property>
            <Property Name="ConditionOrProbability">CustomToken.NumberOfRows == 0</Property>
          </Properties>
          <Exit Name="True" Type="Primary" NextID="9" />
        </Step>
        <Step Type="Assign" Name="T DestroyEntity" ID="9">
          <Properties>
            <Property Name="StateVariableName">
              <Value>ModelEntity.DestroyEntity</Value>
            </Property>
            <Property Name="NewValue">True</Property>
          </Properties>
        </Step>
        <Step Type="Decide" Name="Is.MTRServer" ID="10">
          <Properties>
            <Property Name="DecideType">ConditionBased</Property>
            <Property Name="ConditionOrProbability">ModelEntity.Location.Parent.Is.MTRServer</Property>
          </Properties>
          <Exit Name="True" Type="Primary" NextID="5" />
          <Exit Name="False" Type="Alternate" NextID="11" />
        </Step>
        <Step Type="Assign" Name="CurrentLocation" ID="11">
          <Properties>
            <Property Name="StateVariableName">
              <Value>CustomToken.CurrentLocation</Value>
            </Property>
            <Property Name="NewValue">ModelEntity.Location.Parent</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="6" />
        </Step>
      </Steps>
    </Process>
    <Process Name="CheckSetLocationOrPhaseEntiyFinished" BeginStepID="6" Category="MTRServer">
      <Properties>
        <Property Name="TokenClassName">CustomToken</Property>
      </Properties>
      <Steps>
        <Step Type="Assign" Name="CurrentEntity" ID="2">
          <Properties>
            <Property Name="StateVariableName">
              <Value>CustomToken.CurrentEntity</Value>
            </Property>
            <Property Name="NewValue">ModelEntity</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="25" />
        </Step>
        <Step Type="Decide" Name="ToLocation != Nothing &amp;&amp; ToLocation != CurrentLocation" ID="3">
          <Properties>
            <Property Name="DecideType">ConditionBased</Property>
            <Property Name="ConditionOrProbability">Operations.ToLocation != Nothing &amp;&amp; Operations.ToLocation != CustomToken.CurrentLocation</Property>
          </Properties>
          <Exit Name="True" Type="Primary" NextID="17" />
          <Exit Name="False" Type="Alternate" NextID="4" />
        </Step>
        <Step Type="Execute" Name="PhaseFinished" ID="4">
          <Properties>
            <Property Name="ProcessName">
              <Value>PhaseFinished</Value>
            </Property>
          </Properties>
        </Step>
        <Step Type="Decide" Name="Transporter != Nothing" ID="5">
          <Properties>
            <Property Name="DecideType">ConditionBased</Property>
            <Property Name="ConditionOrProbability">Operations.VehicleDriver != Nothing</Property>
          </Properties>
          <Exit Name="True" Type="Primary" NextID="28" />
          <Exit Name="False" Type="Alternate" NextID="13" />
        </Step>
        <Step Type="Execute" Name="CheckAndUnloadVehicle" ID="6">
          <Properties>
            <Property Name="ProcessName">
              <Value>CheckAndUnloadVehicle</Value>
            </Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="7" />
        </Step>
        <Step Type="Delay" Name="Epsilon" ID="7">
          <Properties>
            <Property Name="DelayTime">Math.Epsilon</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="2" />
        </Step>
        <Step Type="Decide" Name="NumberWaiting == 0" ID="8">
          <Properties>
            <Property Name="DecideType">ConditionBased</Property>
            <Property Name="ConditionOrProbability">ModelEntity.BatchMembers.NumberWaiting == 0</Property>
          </Properties>
          <Exit Name="True" Type="Primary" NextID="5" />
        </Step>
        <Step Type="Assign" Name="CurrentLocation" ID="9">
          <Properties>
            <Property Name="StateVariableName">
              <Value>CustomToken.CurrentLocation</Value>
            </Property>
            <Property Name="NewValue">ModelEntity.Location.Parent.MTRServer.RoutingResource</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="12" />
        </Step>
        <Step Type="Decide" Name="ResourceName == CurrentLocation" ID="10">
          <Properties>
            <Property Name="DecideType">ConditionBased</Property>
            <Property Name="ConditionOrProbability">Operations.ResourceName == CustomToken.CurrentLocation</Property>
          </Properties>
          <Exit Name="True" Type="Primary" NextID="16" />
        </Step>
        <Step Type="Decide" Name="T RideOnTransporter" ID="11">
          <Properties>
            <Property Name="DecideType">ConditionBased</Property>
            <Property Name="ConditionOrProbability">Operations.ResourceName.MTRServer.Output.RideOnTransporter == True</Property>
          </Properties>
        </Step>
        <Step Type="Decide" Name="F ResourceName.Is.TransferNode " ID="12">
          <Properties>
            <Property Name="DecideType">ConditionBased</Property>
            <Property Name="ConditionOrProbability">Operations.ResourceName.Is.TransferNode == False</Property>
          </Properties>
          <Exit Name="True" Type="Primary" NextID="10" />
          <Exit Name="False" Type="Alternate" NextID="16" />
        </Step>
        <Step Type="Decide" Name="F ResourceName.Is.TransferNode " ID="13">
          <Properties>
            <Property Name="DecideType">ConditionBased</Property>
            <Property Name="ConditionOrProbability">Operations.ResourceName.Is.TransferNode == False</Property>
          </Properties>
          <Exit Name="True" Type="Primary" NextID="22" />
          <Exit Name="False" Type="Alternate" NextID="14" />
        </Step>
        <Step Type="Decide" Name="T RideOnTransporter" ID="14">
          <Properties>
            <Property Name="DecideType">ConditionBased</Property>
            <Property Name="ConditionOrProbability">Operations.ResourceName.TransferNode.RideOnTransporter == True</Property>
          </Properties>
        </Step>
        <Step Type="Assign" Name="ToLocation" ID="15">
          <Properties>
            <Property Name="StateVariableName">
              <Value>CustomToken.CurrentEntity.ModelEntity.ToLocation</Value>
            </Property>
            <Property Name="NewValue">Operations.ToLocation.MTRServer.Input</Property>
          </Properties>
        </Step>
        <Step Type="Decide" Name="F DestroyEntity" ID="16">
          <Properties>
            <Property Name="DecideType">ConditionBased</Property>
            <Property Name="ConditionOrProbability">ModelEntity.DestroyEntity == False</Property>
          </Properties>
          <Exit Name="True" Type="Primary" NextID="3" />
          <Exit Name="False" Type="Alternate" NextID="4" />
        </Step>
        <Step Type="Decide" Name="T Is.MTRServer " ID="17">
          <Properties>
            <Property Name="DecideType">ConditionBased</Property>
            <Property Name="ConditionOrProbability">Operations.ToLocation.Is.MTRServer == True</Property>
          </Properties>
          <Exit Name="True" Type="Primary" NextID="19" />
          <Exit Name="False" Type="Alternate" NextID="20" />
        </Step>
        <Step Type="Assign" Name="ToLocation" ID="18">
          <Properties>
            <Property Name="StateVariableName">
              <Value>CustomToken.CurrentEntity.ModelEntity.ToLocation</Value>
            </Property>
            <Property Name="NewValue">Operations.ToLocation</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="8" />
        </Step>
        <Step Type="Assign" Name="ToLocation" ID="19">
          <Properties>
            <Property Name="StateVariableName">
              <Value>CustomToken.CurrentEntity.ModelEntity.ToLocation</Value>
            </Property>
            <Property Name="NewValue">Operations.ToLocation.MTRServer.Input</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="8" />
        </Step>
        <Step Type="Decide" Name="T Is.MTRTransferServer " ID="20">
          <Properties>
            <Property Name="DecideType">ConditionBased</Property>
            <Property Name="ConditionOrProbability">Operations.ToLocation.Is.MTRTransferServer == True</Property>
          </Properties>
          <Exit Name="True" Type="Primary" NextID="21" />
          <Exit Name="False" Type="Alternate" NextID="26" />
        </Step>
        <Step Type="Assign" Name="ToLocation" ID="21">
          <Properties>
            <Property Name="StateVariableName">
              <Value>CustomToken.CurrentEntity.ModelEntity.ToLocation</Value>
            </Property>
            <Property Name="NewValue">Operations.ToLocation.MTRTransferServer.Input</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="8" />
        </Step>
        <Step Type="Decide" Name="T Is.MTRServer " ID="22">
          <Properties>
            <Property Name="DecideType">ConditionBased</Property>
            <Property Name="ConditionOrProbability">Operations.ResourceName.Is.MTRServer == True</Property>
          </Properties>
          <Exit Name="True" Type="Primary" NextID="11" />
          <Exit Name="False" Type="Alternate" NextID="24" />
        </Step>
        <Step Type="Decide" Name="T RideOnTransporter" ID="23">
          <Properties>
            <Property Name="DecideType">ConditionBased</Property>
            <Property Name="ConditionOrProbability">Operations.ResourceName.MTRTransferServer.Output.RideOnTransporter == True</Property>
          </Properties>
        </Step>
        <Step Type="Decide" Name="T Is.MTRTransferServer " ID="24">
          <Properties>
            <Property Name="DecideType">ConditionBased</Property>
            <Property Name="ConditionOrProbability">Operations.ResourceName.Is.MTRTransferServer == True</Property>
          </Properties>
          <Exit Name="True" Type="Primary" NextID="23" />
        </Step>
        <Step Type="Decide" Name="T Is.MTRServer " ID="25">
          <Properties>
            <Property Name="DecideType">ConditionBased</Property>
            <Property Name="ConditionOrProbability">ModelEntity.Location.Parent.Is.MTRServer == True</Property>
          </Properties>
          <Exit Name="True" Type="Primary" NextID="9" />
          <Exit Name="False" Type="Alternate" NextID="12" />
        </Step>
        <Step Type="Decide" Name="T Is.MTRTransferServer " ID="26">
          <Properties>
            <Property Name="DecideType">ConditionBased</Property>
            <Property Name="ConditionOrProbability">Operations.ToLocation.Is.MTRTransferNode == True</Property>
          </Properties>
          <Exit Name="True" Type="Primary" NextID="18" />
          <Exit Name="False" Type="Alternate" NextID="27" />
        </Step>
        <Step Type="Assign" Name="ToLocation" ID="27">
          <Properties>
            <Property Name="StateVariableName">
              <Value>CustomToken.CurrentEntity.ModelEntity.ToLocation</Value>
            </Property>
            <Property Name="NewValue">Nothing</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="8" />
        </Step>
        <Step Type="Decide" Name="T Is.MTRServer " ID="28">
          <Properties>
            <Property Name="DecideType">ConditionBased</Property>
            <Property Name="ConditionOrProbability">Operations.ToLocation.Is.MTRServer == True</Property>
          </Properties>
          <Exit Name="True" Type="Primary" NextID="15" />
          <Exit Name="False" Type="Alternate" NextID="29" />
        </Step>
        <Step Type="Decide" Name="T Is.MTRTransferServer " ID="29">
          <Properties>
            <Property Name="DecideType">ConditionBased</Property>
            <Property Name="ConditionOrProbability">Operations.ToLocation.Is.MTRTransferServer == True</Property>
          </Properties>
          <Exit Name="True" Type="Primary" NextID="30" />
        </Step>
        <Step Type="Assign" Name="ToLocation" ID="30">
          <Properties>
            <Property Name="StateVariableName">
              <Value>CustomToken.CurrentEntity.ModelEntity.ToLocation</Value>
            </Property>
            <Property Name="NewValue">Operations.ToLocation.MTRTransferServer.Input</Property>
          </Properties>
        </Step>
      </Steps>
    </Process>
    <Process Name="MTRServer_Entered" BeginStepID="9" Category="MTRServer">
      <Properties>
        <Property Name="TokenClassName">CustomToken</Property>
      </Properties>
      <Steps>
        <Step Type="Execute" Name="PhaseFinished" ID="2">
          <Properties>
            <Property Name="ProcessName">
              <Value>PhaseFinished</Value>
            </Property>
          </Properties>
        </Step>
        <Step Type="Decide" Name="Is.OperationEntity" ID="3">
          <Properties>
            <Property Name="DecideType">ConditionBased</Property>
            <Property Name="ConditionOrProbability">Is.OperationEntity == True</Property>
          </Properties>
          <Exit Name="True" Type="Primary" NextID="6" />
        </Step>
        <Step Type="Decide" Name="New Location?" ID="4">
          <Properties>
            <Property Name="DecideType">ConditionBased</Property>
            <Property Name="ConditionOrProbability">ModelEntity.Location.Parent.MTRServer.RoutingResource != Operations.ResourceName</Property>
          </Properties>
          <Exit Name="True" Type="Primary" NextID="5" />
        </Step>
        <Step Type="Execute" Name="CheckAndUnloadVehicle" ID="5">
          <Properties>
            <Property Name="ProcessName">
              <Value>CheckAndUnloadVehicle</Value>
            </Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="2" />
        </Step>
        <Step Type="Decide" Name="T Is.MTRServer " ID="6">
          <Properties>
            <Property Name="DecideType">ConditionBased</Property>
            <Property Name="ConditionOrProbability">ModelEntity.Location.Parent.Is.MTRServer == True</Property>
          </Properties>
          <Exit Name="True" Type="Primary" NextID="4" />
          <Exit Name="False" Type="Alternate" NextID="7" />
        </Step>
        <Step Type="Decide" Name="T Is.MTRTransferServer " ID="7">
          <Properties>
            <Property Name="DecideType">ConditionBased</Property>
            <Property Name="ConditionOrProbability">ModelEntity.Location.Parent.Is.MTRTransferServer == True</Property>
          </Properties>
          <Exit Name="True" Type="Primary" NextID="11" />
        </Step>
        <Step Type="Reserve" Name="AMRs" ID="8">
          <Properties>
            <Property Name="OwnerType">SpecificObject</Property>
            <Property Name="OwnerObject">
              <Value>CustomToken.CurrentEntity</Value>
            </Property>
            <Property Name="ResourceName">CustomToken.CurrentEntity.ModelEntity.AssignedVehicle</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="10" />
        </Step>
        <Step Type="Assign" Name="CurrentEntity" ID="9">
          <Properties>
            <Property Name="StateVariableName">
              <Value>CustomToken.CurrentEntity</Value>
            </Property>
            <Property Name="NewValue">ModelEntity</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="3" />
        </Step>
        <Step Type="Decide" Name="New Location?" ID="10">
          <Properties>
            <Property Name="DecideType">ConditionBased</Property>
            <Property Name="ConditionOrProbability">ModelEntity.Location.Parent  != Operations.ResourceName</Property>
          </Properties>
          <Exit Name="True" Type="Primary" NextID="5" />
        </Step>
        <Step Type="Decide" Name="AssignedVehicle != Nothing" ID="11">
          <Properties>
            <Property Name="DecideType">ConditionBased</Property>
            <Property Name="ConditionOrProbability">CustomToken.CurrentEntity.ModelEntity.AssignedVehicle != Nothing</Property>
          </Properties>
          <Exit Name="True" Type="Primary" NextID="8" />
          <Exit Name="False" Type="Alternate" NextID="10" />
        </Step>
      </Steps>
    </Process>
    <Process Name="PhaseFinished" BeginStepID="4" Category="MTRServer">
      <Properties>
        <Property Name="TokenClassName">CustomToken</Property>
      </Properties>
      <Steps>
        <Step Type="Fire" Name="PhaseFinished" ID="2">
          <Properties>
            <Property Name="EventName">ModelEntity.ParentEntity.ModelEntity.OperationFinished</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="3" />
        </Step>
        <Step Type="Delay" Name="Epsilon" ID="3">
          <Properties>
            <Property Name="DelayTime">Math.Epsilon</Property>
          </Properties>
        </Step>
        <Step Type="Decide" Name="SN == LoopbackSN" ID="4">
          <Properties>
            <Property Name="DecideType">ConditionBased</Property>
            <Property Name="ConditionOrProbability">ModelEntity.SequenceNumber == ModelEntity.LoopbackSequenceNumber</Property>
          </Properties>
          <Exit Name="True" Type="Primary" NextID="5" />
          <Exit Name="False" Type="Alternate" NextID="6" />
        </Step>
        <Step Type="Decide" Name="Operations.LoopbackExpression" ID="5">
          <Properties>
            <Property Name="DecideType">ConditionBased</Property>
            <Property Name="ConditionOrProbability">Operations.LoopbackExpression</Property>
          </Properties>
          <Exit Name="False" Type="Alternate" NextID="6" />
        </Step>
        <Step Type="Assign" Name="P ParallelSequence" ID="6">
          <Properties>
            <Property Name="StateVariableName">
              <Value>ModelEntity.ParentEntity.ModelEntity.ParallelSequence</Value>
            </Property>
            <Property Name="NewValue">ModelEntity.ParallelSequence</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="7" />
        </Step>
        <Step Type="Assign" Name="P StartingAlternatePath" ID="7">
          <Properties>
            <Property Name="StateVariableName">
              <Value>ModelEntity.ParentEntity.ModelEntity.StartingAlternatePath</Value>
            </Property>
            <Property Name="NewValue">ModelEntity.StartingAlternatePath</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="2" />
        </Step>
      </Steps>
    </Process>
    <Process Name="PSOutputNodeChecks" BeginStepID="18" Category="MTRServer">
      <Properties>
        <Property Name="TokenClassName">CustomToken</Property>
      </Properties>
      <Steps>
        <Step Type="Destroy" Name="AssocatiatedObject" ID="2">
          <Properties />
          <Exit Name="OK" Type="Primary" NextID="19" />
        </Step>
        <Step Type="Decide" Name="T DestroyEntity " ID="3">
          <Properties>
            <Property Name="DecideType">ConditionBased</Property>
            <Property Name="ConditionOrProbability">ModelEntity.DestroyEntity == True</Property>
          </Properties>
          <Exit Name="True" Type="Primary" NextID="2" />
          <Exit Name="False" Type="Alternate" NextID="10" />
        </Step>
        <Step Type="Decide" Name="MTRServer.Input == ModelEntity.ToLocation" ID="4">
          <Properties>
            <Property Name="DecideType">ConditionBased</Property>
            <Property Name="ConditionOrProbability">ModelEntity.Location.Parent.Node.AssociatedObject.MTRServer.RoutingResource.MTRServer.Input == ModelEntity.ToLocation</Property>
          </Properties>
          <Exit Name="True" Type="Primary" NextID="5" />
        </Step>
        <Step Type="Wait" Name="NextPhaseStarted" ID="5">
          <Properties>
            <Property Name="EventName">ModelEntity.NextOperationStarted</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="6" />
        </Step>
        <Step Type="Transfer" Name="PS Input" ID="6">
          <Properties>
            <Property Name="FromType">CurrentNode</Property>
            <Property Name="NodeName">ModelEntity.Location.Parent.Node.AssociatedObject.MTRServer.RoutingResource.MTRServer.Input</Property>
          </Properties>
        </Step>
        <Step Type="Assign" Name="CurrentResource" ID="7">
          <Properties>
            <Property Name="StateVariableName">
              <Value>CustomToken.Resource</Value>
            </Property>
            <Property Name="NewValue">ModelEntity.Location.Parent.Node.AssociatedObject.MTRServer.RoutingResource</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="3" />
        </Step>
        <Step Type="Decide" Name="InitialCapacity == 0" ID="8">
          <Properties>
            <Property Name="DecideType">ConditionBased</Property>
            <Property Name="ConditionOrProbability">CustomToken.Resource.MTRServer.OutputBuffer.InitialCapacity == 0</Property>
          </Properties>
          <Exit Name="True" Type="Primary" NextID="9" />
        </Step>
        <Step Type="Assign" Name="0 CurrentCapacity" ID="9">
          <Properties>
            <Property Name="StateVariableName">
              <Value>CustomToken.Resource.MTRServer.OutputBuffer.CurrentCapacity</Value>
            </Property>
            <Property Name="NewValue">0</Property>
          </Properties>
        </Step>
        <Step Type="Decide" Name="Is.MTRServer" ID="10">
          <Properties>
            <Property Name="DecideType">ConditionBased</Property>
            <Property Name="ConditionOrProbability">CustomToken.Resource.Is.MTRServer</Property>
          </Properties>
          <Exit Name="True" Type="Primary" NextID="4" />
          <Exit Name="False" Type="Alternate" NextID="11" />
        </Step>
        <Step Type="Decide" Name="Is.MTRTransferServer" ID="11">
          <Properties>
            <Property Name="DecideType">ConditionBased</Property>
            <Property Name="ConditionOrProbability">CustomToken.Resource.Is.MTRTransferServer</Property>
          </Properties>
          <Exit Name="True" Type="Primary" NextID="12" />
        </Step>
        <Step Type="Decide" Name="MTRTransferServer.Input == ModelEntity.ToLocation" ID="12">
          <Properties>
            <Property Name="DecideType">ConditionBased</Property>
            <Property Name="ConditionOrProbability">CustomToken.Resource.MTRTransferServer.Input == ModelEntity.ToLocation</Property>
          </Properties>
          <Exit Name="True" Type="Primary" NextID="13" />
        </Step>
        <Step Type="Wait" Name="NextPhaseStarted" ID="13">
          <Properties>
            <Property Name="EventName">ModelEntity.NextOperationStarted</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="14" />
        </Step>
        <Step Type="Transfer" Name="PS Input" ID="14">
          <Properties>
            <Property Name="FromType">CurrentNode</Property>
            <Property Name="NodeName">CustomToken.Resource.MTRTransferServer.Input</Property>
          </Properties>
        </Step>
        <Step Type="Decide" Name="Is.MTRServer" ID="15">
          <Properties>
            <Property Name="DecideType">ConditionBased</Property>
            <Property Name="ConditionOrProbability">ModelEntity.Location.Parent.Node.AssociatedObject.Is.MTRServer</Property>
          </Properties>
          <Exit Name="True" Type="Primary" NextID="7" />
          <Exit Name="False" Type="Alternate" NextID="16" />
        </Step>
        <Step Type="Decide" Name="Is.MTRTransferServer" ID="16">
          <Properties>
            <Property Name="DecideType">ConditionBased</Property>
            <Property Name="ConditionOrProbability">ModelEntity.Location.Parent.Node.AssociatedObject.Is.MTRTransferServer</Property>
          </Properties>
          <Exit Name="True" Type="Primary" NextID="17" />
        </Step>
        <Step Type="Assign" Name="CurrentResource" ID="17">
          <Properties>
            <Property Name="StateVariableName">
              <Value>CustomToken.Resource</Value>
            </Property>
            <Property Name="NewValue">ModelEntity.Location.Parent.Node.AssociatedObject</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="3" />
        </Step>
        <Step Type="Decide" Name="Is.Operation" ID="18">
          <Properties>
            <Property Name="DecideType">ConditionBased</Property>
            <Property Name="ConditionOrProbability">Is.OperationEntity</Property>
          </Properties>
          <Exit Name="True" Type="Primary" NextID="15" />
        </Step>
        <Step Type="Decide" Name="Is.MTRServer" ID="19">
          <Properties>
            <Property Name="DecideType">ConditionBased</Property>
            <Property Name="ConditionOrProbability">CustomToken.Resource.Is.MTRServer</Property>
          </Properties>
          <Exit Name="True" Type="Primary" NextID="8" />
        </Step>
      </Steps>
    </Process>
    <Process Name="MTRServer_RunInitialized" BeginStepID="3" Category="MTRServer">
      <Properties>
        <Property Name="TokenClassName">CustomToken</Property>
      </Properties>
      <Steps>
        <Step Type="SetRow" Name="Resource to OutputNode" ID="2">
          <Properties>
            <Property Name="ObjectType">SpecificObjectOrElement</Property>
            <Property Name="ObjectOrElement">
              <Value>CustomToken.AssociatedObject.MTRServer.Output</Value>
            </Property>
            <Property Name="TableName">Resources</Property>
            <Property Name="RowNumber">Resources.ResourceName.RowForKey(CustomToken.AssociatedObject.Name)</Property>
          </Properties>
        </Step>
        <Step Type="Decide" Name="Is.MTRServer" ID="3">
          <Properties>
            <Property Name="DecideType">ConditionBased</Property>
            <Property Name="ConditionOrProbability">CustomToken.AssociatedObject.Is.MTRServer</Property>
          </Properties>
          <Exit Name="True" Type="Primary" NextID="2" />
          <Exit Name="False" Type="Alternate" NextID="5" />
        </Step>
        <Step Type="SetRow" Name="Resource to OutputNode" ID="4">
          <Properties>
            <Property Name="ObjectType">SpecificObjectOrElement</Property>
            <Property Name="ObjectOrElement">
              <Value>CustomToken.AssociatedObject.MTRTransferServer.Output</Value>
            </Property>
            <Property Name="TableName">Resources</Property>
            <Property Name="RowNumber">Resources.ResourceName.RowForKey(CustomToken.AssociatedObject.Name)</Property>
          </Properties>
        </Step>
        <Step Type="Decide" Name="Is.MTRTransferServer" ID="5">
          <Properties>
            <Property Name="DecideType">ConditionBased</Property>
            <Property Name="ConditionOrProbability">CustomToken.AssociatedObject.Is.MTRTransferServer</Property>
          </Properties>
          <Exit Name="True" Type="Primary" NextID="4" />
        </Step>
      </Steps>
    </Process>
    <Process Name="PopulateImmediateSuccessorSequences" BeginStepID="31" Category="OnRun">
      <Properties>
        <Property Name="ReportStatistics">False</Property>
        <Property Name="TokenClassName">SuccessorsToken</Property>
      </Properties>
      <Steps>
        <Step Type="Search" Name="PhasesSuccessors" ID="2">
          <Properties>
            <Property Name="CollectionType">TableRows</Property>
            <Property Name="EntityType">SequenceEntity</Property>
            <Property Name="TableName">Phases</Property>
            <Property Name="SearchRelatedRowsOnly">False</Property>
            <Property Name="MatchCondition">Phases.Enabled == True &amp;&amp; String.CompareSequenceNumbers(Phases.SequenceNumber, SuccessorsToken.SequenceNumber) &gt; 0 &amp;&amp; Phases.OperationName == SuccessorsToken.OperationName</Property>
            <Property Name="Limit">Infinity</Property>
            <Property Name="CopyOverTableRowReferences">False</Property>
            <Property Name="SetTableRowConflictResolution">Abort</Property>
          </Properties>
          <Exit Name="Found" Type="Alternate" NextID="7" />
        </Step>
        <Step Type="Search" Name="Operations" ID="3">
          <Properties>
            <Property Name="CollectionType">TableRows</Property>
            <Property Name="EntityType">SequenceEntity</Property>
            <Property Name="TableName">Operations</Property>
            <Property Name="MatchCondition">Operations.Enabled == True</Property>
            <Property Name="Limit">Infinity</Property>
            <Property Name="CopyOverTableRowReferences">False</Property>
            <Property Name="SetTableRowConflictResolution">Abort</Property>
          </Properties>
          <Exit Name="Found" Type="Alternate" NextID="5" />
        </Step>
        <Step Type="Search" Name="Phases" ID="4">
          <Properties>
            <Property Name="CollectionType">TableRows</Property>
            <Property Name="EntityType">SequenceEntity</Property>
            <Property Name="TableName">Phases</Property>
            <Property Name="MatchCondition">Phases.Enabled == True</Property>
            <Property Name="Limit">Infinity</Property>
            <Property Name="CopyOverTableRowReferences">False</Property>
            <Property Name="SetTableRowConflictResolution">Abort</Property>
          </Properties>
          <Exit Name="Found" Type="Alternate" NextID="15" />
        </Step>
        <Step Type="Assign" Name="OperationName" ID="5">
          <Properties>
            <Property Name="StateVariableName">
              <Value>SuccessorsToken.OperationName</Value>
            </Property>
            <Property Name="NewValue">Operations.OperationName</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="17" />
        </Step>
        <Step Type="Assign" Name="SequenceNumber" ID="6">
          <Properties>
            <Property Name="StateVariableName">
              <Value>SuccessorsToken.SequenceNumber</Value>
            </Property>
            <Property Name="NewValue">Phases.SequenceNumber</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="2" />
        </Step>
        <Step Type="Assign" Name="SuccessorSequenceNumber" ID="7">
          <Properties>
            <Property Name="StateVariableName">
              <Value>SuccessorsToken.SuccessorSequenceNumber</Value>
            </Property>
            <Property Name="NewValue">Phases.SequenceNumber</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="8" />
        </Step>
        <Step Type="Search" Name="PhasesMoreImmediateSuccessor" ID="8">
          <Properties>
            <Property Name="CollectionType">TableRows</Property>
            <Property Name="EntityType">SequenceEntity</Property>
            <Property Name="TableName">Phases</Property>
            <Property Name="MatchCondition">Phases.Enabled == True &amp;&amp; String.CompareSequenceNumbers(Phases.SequenceNumber, SuccessorsToken.SequenceNumber) &gt; 0 &amp;&amp; String.CompareSequenceNumbers(Phases.SequenceNumber, SuccessorsToken.SuccessorSequenceNumber) &lt; 0 &amp;&amp; Phases.OperationName == SuccessorsToken.OperationName</Property>
            <Property Name="Limit">Infinity</Property>
            <Property Name="SaveNumberFound">
              <Value>SuccessorsToken.NumberOfRows</Value>
            </Property>
            <Property Name="CopyOverTableRowReferences">False</Property>
            <Property Name="SetTableRowConflictResolution">Abort</Property>
          </Properties>
          <Exit Name="Original" Type="Primary" NextID="12" />
        </Step>
        <Step Type="AddRow" Name="ToOutputTable" ID="9">
          <Properties>
            <Property Name="ObjectType">Token</Property>
            <Property Name="TableName">PhaseSuccessors</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="10" />
        </Step>
        <Step Type="Assign" Name="SequenceNumber" ID="10">
          <Properties>
            <Property Name="StateVariableName">
              <Value>PhaseSuccessors.SequenceNumber</Value>
            </Property>
            <Property Name="NewValue">SuccessorsToken.SequenceNumber</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="11" />
        </Step>
        <Step Type="Assign" Name="SuccessorSequenceNumber" ID="11">
          <Properties>
            <Property Name="StateVariableName">
              <Value>PhaseSuccessors.SuccessorSequenceNumber</Value>
            </Property>
            <Property Name="NewValue">SuccessorsToken.SuccessorSequenceNumber</Property>
          </Properties>
        </Step>
        <Step Type="Decide" Name="NumberOfRows == 0" ID="12">
          <Properties>
            <Property Name="DecideType">ConditionBased</Property>
            <Property Name="ConditionOrProbability">SuccessorsToken.NumberOfRows == 0</Property>
          </Properties>
          <Exit Name="True" Type="Primary" NextID="14" />
        </Step>
        <Step Type="SetRow" Name="Phases" ID="13">
          <Properties>
            <Property Name="ObjectType">Token</Property>
            <Property Name="TableName">Phases</Property>
            <Property Name="RowNumber">SuccessorsToken.RowNumber</Property>
            <Property Name="ClearAllTableReferencesFirst">True</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="9" />
        </Step>
        <Step Type="Create" Name="Token" ID="14">
          <Properties>
            <Property Name="CreateType">NewToken</Property>
          </Properties>
          <Exit Name="Created" Type="Alternate" NextID="13" />
        </Step>
        <Step Type="Assign" Name="PhaseKey" ID="15">
          <Properties>
            <Property Name="StateVariableName">
              <Value>SuccessorsToken.PhaseKey</Value>
            </Property>
            <Property Name="NewValue">Phases.PhaseKey</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="16" />
        </Step>
        <Step Type="Assign" Name="RowNumber" ID="16">
          <Properties>
            <Property Name="StateVariableName">
              <Value>SuccessorsToken.RowNumber</Value>
            </Property>
            <Property Name="NewValue">Phases.PhaseKey.RowForKey( SuccessorsToken.PhaseKey )</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="6" />
        </Step>
        <Step Type="Assign" Name="RowNumber" ID="17">
          <Properties>
            <Property Name="StateVariableName">
              <Value>SuccessorsToken.RowNumber</Value>
            </Property>
            <Property Name="NewValue">Operations.OperationName.RowForKey( SuccessorsToken.OperationName )</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="18" />
        </Step>
        <Step Type="Assign" Name="SequenceNumber" ID="18">
          <Properties>
            <Property Name="StateVariableName">
              <Value>SuccessorsToken.SequenceNumber</Value>
            </Property>
            <Property Name="NewValue">Operations.SequenceNumber</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="19" />
        </Step>
        <Step Type="Search" Name="OperationsSuccessors" ID="19">
          <Properties>
            <Property Name="CollectionType">TableRows</Property>
            <Property Name="EntityType">SequenceEntity</Property>
            <Property Name="TableName">Operations</Property>
            <Property Name="SearchRelatedRowsOnly">False</Property>
            <Property Name="MatchCondition">Operations.Enabled == True &amp;&amp; String.CompareSequenceNumbers(Operations.SequenceNumber, SuccessorsToken.SequenceNumber) &gt; 0 &amp;&amp; Operations.ProcessName == SuccessorsToken.ProcessName</Property>
            <Property Name="Limit">Infinity</Property>
            <Property Name="CopyOverTableRowReferences">False</Property>
            <Property Name="SetTableRowConflictResolution">Abort</Property>
          </Properties>
          <Exit Name="Original" Type="Primary" NextID="4" />
          <Exit Name="Found" Type="Alternate" NextID="20" />
        </Step>
        <Step Type="Assign" Name="SuccessorRoutingNumber" ID="20">
          <Properties>
            <Property Name="StateVariableName">
              <Value>SuccessorsToken.SuccessorSequenceNumber</Value>
            </Property>
            <Property Name="NewValue">Operations.SequenceNumber</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="29" />
        </Step>
        <Step Type="Search" Name="OperationsMoreImmediateSuccessor" ID="21">
          <Properties>
            <Property Name="CollectionType">TableRows</Property>
            <Property Name="EntityType">SequenceEntity</Property>
            <Property Name="TableName">Operations</Property>
            <Property Name="MatchCondition">Operations.Enabled == True &amp;&amp; String.CompareSequenceNumbers(Operations.SequenceNumber, SuccessorsToken.SequenceNumber) &gt; 0 &amp;&amp; String.CompareSequenceNumbers(Operations.SequenceNumber, SuccessorsToken.SuccessorSequenceNumber) &lt; 0 &amp;&amp; Operations.ProcessName == SuccessorsToken.ProcessName</Property>
            <Property Name="Limit">Infinity</Property>
            <Property Name="SaveNumberFound">
              <Value>SuccessorsToken.NumberOfRows</Value>
            </Property>
            <Property Name="CopyOverTableRowReferences">False</Property>
            <Property Name="SetTableRowConflictResolution">Abort</Property>
          </Properties>
          <Exit Name="Original" Type="Primary" NextID="22" />
        </Step>
        <Step Type="Decide" Name="NumberOfRows == 0" ID="22">
          <Properties>
            <Property Name="DecideType">ConditionBased</Property>
            <Property Name="ConditionOrProbability">SuccessorsToken.NumberOfRows == 0</Property>
          </Properties>
          <Exit Name="True" Type="Primary" NextID="23" />
        </Step>
        <Step Type="Create" Name="Token" ID="23">
          <Properties>
            <Property Name="CreateType">NewToken</Property>
          </Properties>
          <Exit Name="Created" Type="Alternate" NextID="24" />
        </Step>
        <Step Type="SetRow" Name="Phases" ID="24">
          <Properties>
            <Property Name="ObjectType">Token</Property>
            <Property Name="TableName">Operations</Property>
            <Property Name="RowNumber">SuccessorsToken.RowNumber</Property>
            <Property Name="ClearAllTableReferencesFirst">True</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="25" />
        </Step>
        <Step Type="AddRow" Name="ToOutputTable" ID="25">
          <Properties>
            <Property Name="ObjectType">Token</Property>
            <Property Name="TableName">OperationSuccessors</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="26" />
        </Step>
        <Step Type="Assign" Name="SequenceNumber" ID="26">
          <Properties>
            <Property Name="StateVariableName">
              <Value>OperationSuccessors.SequenceNumber</Value>
            </Property>
            <Property Name="NewValue">SuccessorsToken.SequenceNumber</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="27" />
        </Step>
        <Step Type="Assign" Name="SuccessorSequenceNumber" ID="27">
          <Properties>
            <Property Name="StateVariableName">
              <Value>OperationSuccessors.SuccessorSequenceNumber</Value>
            </Property>
            <Property Name="NewValue">SuccessorsToken.SuccessorSequenceNumber</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="30" />
        </Step>
        <Step Type="Assign" Name="ProcessName" ID="28">
          <Properties>
            <Property Name="StateVariableName">
              <Value>SuccessorsToken.ProcessName</Value>
            </Property>
            <Property Name="NewValue">Processes.ProcessName</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="3" />
        </Step>
        <Step Type="Assign" Name="SuccessorParallelSequence" ID="29">
          <Properties>
            <Property Name="StateVariableName">
              <Value>SuccessorsToken.SuccessorParallelSequence</Value>
            </Property>
            <Property Name="NewValue">Operations.ParallelSequence</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="21" />
        </Step>
        <Step Type="Assign" Name="SuccessorParallelSequence" ID="30">
          <Properties>
            <Property Name="StateVariableName">
              <Value>OperationSuccessors.SuccessorParallelSequence</Value>
            </Property>
            <Property Name="NewValue">SuccessorsToken.SuccessorParallelSequence</Property>
          </Properties>
        </Step>
        <Step Type="Search" Name="Operations" ID="31">
          <Properties>
            <Property Name="CollectionType">TableRows</Property>
            <Property Name="EntityType">SequenceEntity</Property>
            <Property Name="TableName">Processes</Property>
            <Property Name="Limit">Infinity</Property>
            <Property Name="CopyOverTableRowReferences">False</Property>
            <Property Name="SetTableRowConflictResolution">Abort</Property>
          </Properties>
          <Exit Name="Found" Type="Alternate" NextID="28" />
        </Step>
      </Steps>
    </Process>
    <Process Name="MTRServer_TaskReady" BeginStepID="4" Category="MTRServer">
      <Properties />
      <Steps>
        <Step Type="Assign" Name="VehicleDriver" ID="2">
          <Properties>
            <Property Name="StateVariableName">
              <Value>ModelEntity.VehicleDriver</Value>
            </Property>
            <Property Name="NewValue">Operations.VehicleDriver</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="3" />
        </Step>
        <Step Type="Execute" Name="Phases.PhaseReadyProcess" ID="3">
          <Properties>
            <Property Name="ProcessName">
              <Value>Phases.PhaseReadyProcess</Value>
            </Property>
          </Properties>
        </Step>
        <Step Type="Assign" Name="PhaseKey" ID="4">
          <Properties>
            <Property Name="StateVariableName">
              <Value>ModelEntity.PhaseKey</Value>
            </Property>
            <Property Name="NewValue">Phases.PhaseKey</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="2" />
        </Step>
      </Steps>
    </Process>
    <Process Name="MTRWorker_RideStationContentsChange" BeginStepID="2" Category="MTRWorker">
      <Properties />
      <Steps>
        <Step Type="Fire" Name="Employees.DwellUntilEvent" ID="2">
          <Properties>
            <Property Name="EventName">Employees.DwellUntilEvent</Property>
          </Properties>
        </Step>
      </Steps>
    </Process>
    <Process Name="MTRVehicle_AssignDriver" BeginStepID="3" Category="MTRVehicle">
      <Properties />
      <Steps>
        <Step Type="Assign" Name="Driver" ID="2">
          <Properties>
            <Property Name="StateVariableName">
              <Value>MTRVehicle.Driver</Value>
            </Property>
            <Property Name="NewValue">ModelEntity.VehicleDriver</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="4" />
        </Step>
        <Step Type="Decide" Name="Is.ModelEntity" ID="3">
          <Properties>
            <Property Name="DecideType">ConditionBased</Property>
            <Property Name="ConditionOrProbability">Token.AssociatedObject.Is.ModelEntity</Property>
          </Properties>
          <Exit Name="True" Type="Primary" NextID="9" />
        </Step>
        <Step Type="Assign" Name="PhaseKey" ID="4">
          <Properties>
            <Property Name="StateVariableName">
              <Value>MTRVehicle.PhaseKey</Value>
            </Property>
            <Property Name="NewValue">ModelEntity.PhaseKey</Property>
          </Properties>
        </Step>
        <Step Type="Decide" Name="Check Empty VehicleDriver" ID="5">
          <Properties>
            <Property Name="DecideType">ConditionBased</Property>
            <Property Name="ConditionOrProbability">ModelEntity.VehicleDriver != Nothing</Property>
          </Properties>
          <Exit Name="True" Type="Primary" NextID="7" />
          <Exit Name="False" Type="Alternate" NextID="10" />
        </Step>
        <Step Type="Decide" Name="Check ResourceState of CarrierVehicle" ID="6">
          <Properties>
            <Property Name="DecideType">ConditionBased</Property>
            <Property Name="ConditionOrProbability">MTRVehicle.Location.Parent.Node.AssociatedObject != ModelEntity.Location.Parent</Property>
          </Properties>
          <Exit Name="True" Type="Primary" NextID="8" />
        </Step>
        <Step Type="Assign" Name="T OperatorRequired" ID="7">
          <Properties>
            <Property Name="StateVariableName">
              <Value>MTRVehicle.OperatorRequired</Value>
            </Property>
            <Property Name="NewValue">True</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="2" />
        </Step>
        <Step Type="Assign" Name="F OperatorRequired" ID="8">
          <Properties>
            <Property Name="StateVariableName">
              <Value>MTRVehicle.OperatorRequired</Value>
            </Property>
            <Property Name="NewValue">False</Property>
          </Properties>
        </Step>
        <Step Type="Assign" Name="AssignedVehicle" ID="9">
          <Properties>
            <Property Name="StateVariableName">
              <Value>ModelEntity.AssignedVehicle</Value>
            </Property>
            <Property Name="NewValue">MTRVehicle</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="5" />
        </Step>
        <Step Type="Decide" Name="Is.Node" ID="10">
          <Properties>
            <Property Name="DecideType">ConditionBased</Property>
            <Property Name="ConditionOrProbability">Is.Node</Property>
          </Properties>
          <Exit Name="True" Type="Primary" NextID="6" />
          <Exit Name="False" Type="Alternate" NextID="11" />
        </Step>
        <Step Type="Decide" Name="Check ResourceState of CarrierVehicle" ID="11">
          <Properties>
            <Property Name="DecideType">ConditionBased</Property>
            <Property Name="ConditionOrProbability">MTRVehicle.Location.Parent != ModelEntity.Location.Parent</Property>
          </Properties>
          <Exit Name="True" Type="Primary" NextID="8" />
        </Step>
      </Steps>
    </Process>
    <Process Name="MTRVehicle_RideStationContentsChange" BeginStepID="2" Category="MTRVehicle">
      <Properties />
      <Steps>
        <Step Type="Decide" Name="At FillingLineF" ID="2">
          <Properties>
            <Property Name="DecideType">ConditionBased</Property>
            <Property Name="ConditionOrProbability">MTRVehicle.Location.Parent.Name == "Output@FillingLineF - R156"</Property>
          </Properties>
          <Exit Name="True" Type="Primary" NextID="4" />
          <Exit Name="False" Type="Alternate" NextID="3" />
        </Step>
        <Step Type="Fire" Name="Equipment.DwellUntilEvent" ID="3">
          <Properties>
            <Property Name="EventName">Equipment.DwellUntilEvent</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="5" />
        </Step>
        <Step Type="Decide" Name="NumberWaiting &gt;= InitialRideCapacity" ID="4">
          <Properties>
            <Property Name="DecideType">ConditionBased</Property>
            <Property Name="ConditionOrProbability">MTRVehicle.RideStation.Contents.NumberWaiting &gt;= MTRVehicle.InitialRideCapacity</Property>
          </Properties>
          <Exit Name="True" Type="Primary" NextID="3" />
        </Step>
        <Step Type="Decide" Name="NumberWaiting == 0" ID="5">
          <Properties>
            <Property Name="DecideType">ConditionBased</Property>
            <Property Name="ConditionOrProbability">MTRVehicle.RideStation.Contents.NumberWaiting == 0</Property>
          </Properties>
          <Exit Name="True" Type="Primary" NextID="6" />
        </Step>
        <Step Type="Assign" Name="&quot;&quot; PhaseKey" ID="6">
          <Properties>
            <Property Name="StateVariableName">
              <Value>MTRVehicle.PhaseKey</Value>
            </Property>
            <Property Name="NewValue">String.Empty</Property>
          </Properties>
        </Step>
      </Steps>
    </Process>
    <Process Name="MTRWorker_Allocated" BeginStepID="3" Category="MTRWorker">
      <Properties />
      <Steps>
        <Step Type="Assign" Name="PhaseKey" ID="2">
          <Properties>
            <Property Name="StateVariableName">
              <Value>MTRWorker.PhaseKey</Value>
            </Property>
            <Property Name="NewValue">ModelEntity.PhaseKey</Property>
          </Properties>
        </Step>
        <Step Type="Decide" Name="Is.ModelEntity" ID="3">
          <Properties>
            <Property Name="DecideType">ConditionBased</Property>
            <Property Name="ConditionOrProbability">Is.ModelEntity</Property>
          </Properties>
          <Exit Name="True" Type="Primary" NextID="2" />
          <Exit Name="False" Type="Alternate" NextID="4" />
        </Step>
        <Step Type="Assign" Name="PhaseKey" ID="4">
          <Properties>
            <Property Name="StateVariableName">
              <Value>MTRWorker.PhaseKey</Value>
            </Property>
            <Property Name="NewValue">MTRVehicle.PhaseKey</Property>
          </Properties>
        </Step>
      </Steps>
    </Process>
    <Process Name="MTRWorker_Released" BeginStepID="2" Category="MTRWorker">
      <Properties />
      <Steps>
        <Step Type="Assign" Name="&quot;&quot; PhaseKey" ID="2">
          <Properties>
            <Property Name="StateVariableName">
              <Value>MTRWorker.PhaseKey</Value>
            </Property>
            <Property Name="NewValue">String.Empty</Property>
          </Properties>
        </Step>
      </Steps>
    </Process>
    <Process Name="MTRVehicle_DriverReleased" BeginStepID="2" Category="MTRVehicle">
      <Properties />
      <Steps>
        <Step Type="Assign" Name="&quot;&quot; PhaseKey" ID="2">
          <Properties>
            <Property Name="StateVariableName">
              <Value>MTRVehicle.PhaseKey</Value>
            </Property>
            <Property Name="NewValue">String.Empty</Property>
          </Properties>
        </Step>
      </Steps>
    </Process>
    <Process Name="MTRVehicle_Allocated" BeginStepID="2" Category="MTRVehicle">
      <Properties />
      <Steps>
        <Step Type="Decide" Name="Is.ModelEntity" ID="2">
          <Properties>
            <Property Name="DecideType">ConditionBased</Property>
            <Property Name="ConditionOrProbability">Token.AssociatedObject.Is.ModelEntity</Property>
          </Properties>
          <Exit Name="True" Type="Primary" NextID="3" />
        </Step>
        <Step Type="Assign" Name="PhaseKey" ID="3">
          <Properties>
            <Property Name="StateVariableName">
              <Value>MTRVehicle.PhaseKey</Value>
            </Property>
            <Property Name="NewValue">ModelEntity.PhaseKey</Property>
          </Properties>
        </Step>
      </Steps>
    </Process>
    <Process Name="MTRVehicle_Released" BeginStepID="2" Category="MTRVehicle">
      <Properties />
      <Steps>
        <Step Type="Decide" Name="Is.ModelEntity" ID="2">
          <Properties>
            <Property Name="DecideType">ConditionBased</Property>
            <Property Name="ConditionOrProbability">Token.AssociatedObject.Is.ModelEntity</Property>
          </Properties>
          <Exit Name="True" Type="Primary" NextID="3" />
        </Step>
        <Step Type="Assign" Name="&quot;&quot; PhaseKey" ID="3">
          <Properties>
            <Property Name="StateVariableName">
              <Value>MTRVehicle.PhaseKey</Value>
            </Property>
            <Property Name="NewValue">String.Empty</Property>
          </Properties>
        </Step>
      </Steps>
    </Process>
    <Process Name="MTRServer_OnConsumed" BeginStepID="7" Category="MTRServer">
      <Properties>
        <Property Name="TokenClassName">CustomToken</Property>
      </Properties>
      <Steps>
        <Step Type="Search" Name="InventoryLocations" ID="2">
          <Properties>
            <Property Name="CollectionType">TableRows</Property>
            <Property Name="TableName">InventoryLocations</Property>
            <Property Name="MatchCondition">InventoryLocations.InventoryName == Token.MaterialOrderDetail.SourceInventory</Property>
            <Property Name="SaveIndexFound">
              <Value>CustomToken.RowNumber</Value>
            </Property>
          </Properties>
          <Exit Name="Original" Type="Primary" NextID="16" />
          <Exit Name="Found" Type="Alternate" NextID="3" />
        </Step>
        <Step Type="Assign" Name="EntityName" ID="3">
          <Properties>
            <Property Name="StateVariableName">
              <Value>InventoryLocations.EntityName</Value>
            </Property>
            <Property Name="NewValue">CustomToken.CurrentEntity.Name</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="4" />
        </Step>
        <Step Type="Assign" Name="DisplayEntityName" ID="4">
          <Properties>
            <Property Name="StateVariableName">
              <Value>InventoryLocations.EntityDisplayName</Value>
            </Property>
            <Property Name="NewValue">CustomToken.CurrentEntity.DisplayName</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="6" />
        </Step>
        <Step Type="Assign" Name="CurrentQuantity" ID="5">
          <Properties>
            <Property Name="StateVariableName">
              <Value>InventoryLocations.CurrentQuantity</Value>
            </Property>
            <Property Name="NewValue">Token.MaterialOrderDetail.Quantity</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="12" />
        </Step>
        <Step Type="Assign" Name="MOId" ID="6">
          <Properties>
            <Property Name="StateVariableName">
              <Value>InventoryLocations.MOId</Value>
            </Property>
            <Property Name="NewValue">CustomToken.CurrentEntity.ModelEntity.MOId</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="18" />
        </Step>
        <Step Type="Assign" Name="CurrentEntity" ID="7">
          <Properties>
            <Property Name="StateVariableName">
              <Value>CustomToken.CurrentEntity</Value>
            </Property>
            <Property Name="NewValue">ModelEntity</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="15" />
        </Step>
        <Step Type="Assign" Name="Entity" ID="8">
          <Properties>
            <Property Name="StateVariableName">
              <Value>InventoryLocations.Entity</Value>
            </Property>
            <Property Name="NewValue">CustomToken.CurrentEntity.ModelEntity.SourceEntity</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="5" />
        </Step>
        <Step Type="Decide" Name="F FromManufacturingOrder" ID="9">
          <Properties>
            <Property Name="DecideType">ConditionBased</Property>
            <Property Name="ConditionOrProbability">ModelEntity.FromManufacturingOrder == False</Property>
          </Properties>
          <Exit Name="True" Type="Primary" NextID="8" />
          <Exit Name="False" Type="Alternate" NextID="10" />
        </Step>
        <Step Type="Assign" Name="Entity" ID="10">
          <Properties>
            <Property Name="StateVariableName">
              <Value>InventoryLocations.Entity</Value>
            </Property>
            <Property Name="NewValue">CustomToken.CurrentEntity</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="5" />
        </Step>
        <Step Type="Assign" Name="LastUpdateHour" ID="11">
          <Properties>
            <Property Name="StateVariableName">
              <Value>InventoryLocations.LastUpdateHour</Value>
            </Property>
            <Property Name="NewValue">TimeNow</Property>
          </Properties>
        </Step>
        <Step Type="Assign" Name="AccumulatedConsumptionQuantity" ID="12">
          <Properties>
            <Property Name="StateVariableName">
              <Value>InventoryLocations.AccumulatedConsumptionQuantity</Value>
            </Property>
            <Property Name="NewValue">InventoryLocations.AccumulatedConsumptionQuantity + Token.MaterialOrderDetail.Quantity</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="11" />
        </Step>
        <Step Type="Search" Name="BillOfMaterials" ID="13">
          <Properties>
            <Property Name="CollectionType">TableRows</Property>
            <Property Name="TableName">BillOfMaterials</Property>
            <Property Name="MatchCondition">BillOfMaterials.ComponentMaterial == Token.MaterialOrderDetail.Material &amp;&amp; BillOfMaterials.InventoryObject == Token.MaterialOrderDetail.SourceSiteObject</Property>
          </Properties>
          <Exit Name="Original" Type="Primary" NextID="2" />
          <Exit Name="Found" Type="Alternate" NextID="14" />
        </Step>
        <Step Type="Assign" Name="StageMaterialLocation" ID="14">
          <Properties>
            <Property Name="StateVariableName">
              <Value>CustomToken.CurrentEntity.ModelEntity.StageMaterialLocation</Value>
            </Property>
            <Property Name="NewValue">BillOfMaterials.StageMaterialLocation</Property>
          </Properties>
        </Step>
        <Step Type="Assign" Name="NULL StageMaterialLocation" ID="15">
          <Properties>
            <Property Name="StateVariableName">
              <Value>CustomToken.CurrentEntity.ModelEntity.StageMaterialLocation</Value>
            </Property>
            <Property Name="NewValue">Nothing</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="13" />
        </Step>
        <Step Type="Decide" Name="StageMaterialLocation != Nothing" ID="16">
          <Properties>
            <Property Name="DecideType">ConditionBased</Property>
            <Property Name="ConditionOrProbability">CustomToken.CurrentEntity.ModelEntity.StageMaterialLocation != Nothing</Property>
          </Properties>
          <Exit Name="True" Type="Primary" NextID="17" />
        </Step>
        <Step Type="Execute" Name="MTRServer_StageMaterials" ID="17">
          <Properties>
            <Property Name="ProcessName">
              <Value>MTRServer_StageMaterials</Value>
            </Property>
          </Properties>
        </Step>
        <Step Type="Assign" Name="SOId" ID="18">
          <Properties>
            <Property Name="StateVariableName">
              <Value>InventoryLocations.SOId</Value>
            </Property>
            <Property Name="NewValue">CustomToken.CurrentEntity.ModelEntity.SOId</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="9" />
        </Step>
      </Steps>
    </Process>
    <Process Name="MTRServer_TaskFinished" BeginStepID="2" Category="MTRServer">
      <Properties>
        <Property Name="TokenClassName">CustomToken</Property>
      </Properties>
      <Steps>
        <Step Type="Execute" Name="CheckSetLocationOrPhaseEntiyFinished" ID="2">
          <Properties>
            <Property Name="ProcessName">
              <Value>CheckSetLocationOrPhaseEntiyFinished</Value>
            </Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="3" />
        </Step>
        <Step Type="Execute" Name="Phases.PhaseFinishedProcess" ID="3">
          <Properties>
            <Property Name="ProcessName">
              <Value>Phases.PhaseFinishedProcess</Value>
            </Property>
          </Properties>
        </Step>
      </Steps>
    </Process>
    <Process Name="MTRServer_TaskStarting" BeginStepID="2" Category="MTRServer">
      <Properties>
        <Property Name="TokenClassName">CustomToken</Property>
      </Properties>
      <Steps>
        <Step Type="Execute" Name="Phases.PhaseStartingProcess" ID="2">
          <Properties>
            <Property Name="ProcessName">
              <Value>Phases.PhaseStartingProcess</Value>
            </Property>
          </Properties>
        </Step>
      </Steps>
    </Process>
    <Process Name="MTRServer_OnProduced" BeginStepID="2" Category="MTRServer">
      <Properties>
        <Property Name="TokenClassName">CustomToken</Property>
      </Properties>
      <Steps>
        <Step Type="Assign" Name="CurrentEntity" ID="2">
          <Properties>
            <Property Name="StateVariableName">
              <Value>CustomToken.CurrentEntity</Value>
            </Property>
            <Property Name="NewValue">ModelEntity</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="12" />
        </Step>
        <Step Type="Search" Name="InventoryLocations" ID="3">
          <Properties>
            <Property Name="CollectionType">TableRows</Property>
            <Property Name="TableName">InventoryLocations</Property>
            <Property Name="MatchCondition">InventoryLocations.InventoryName == Token.MaterialOrderDetail.DestinationInventory</Property>
            <Property Name="SaveIndexFound">
              <Value>CustomToken.RowNumber</Value>
            </Property>
          </Properties>
          <Exit Name="Original" Type="Primary" NextID="15" />
          <Exit Name="Found" Type="Alternate" NextID="4" />
        </Step>
        <Step Type="Assign" Name="EntityName" ID="4">
          <Properties>
            <Property Name="StateVariableName">
              <Value>InventoryLocations.EntityName</Value>
            </Property>
            <Property Name="NewValue">CustomToken.CurrentEntity.Name</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="5" />
        </Step>
        <Step Type="Assign" Name="DisplayEntityName" ID="5">
          <Properties>
            <Property Name="StateVariableName">
              <Value>InventoryLocations.EntityDisplayName</Value>
            </Property>
            <Property Name="NewValue">CustomToken.CurrentEntity.DisplayName</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="6" />
        </Step>
        <Step Type="Assign" Name="MOId" ID="6">
          <Properties>
            <Property Name="StateVariableName">
              <Value>InventoryLocations.MOId</Value>
            </Property>
            <Property Name="NewValue">CustomToken.CurrentEntity.ModelEntity.MOId</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="17" />
        </Step>
        <Step Type="Assign" Name="CurrentQuantity" ID="7">
          <Properties>
            <Property Name="StateVariableName">
              <Value>InventoryLocations.CurrentQuantity</Value>
            </Property>
            <Property Name="NewValue">Token.MaterialOrderDetail.Quantity</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="11" />
        </Step>
        <Step Type="Decide" Name="F FromManufacturingOrder" ID="8">
          <Properties>
            <Property Name="DecideType">ConditionBased</Property>
            <Property Name="ConditionOrProbability">ModelEntity.FromManufacturingOrder == False</Property>
          </Properties>
          <Exit Name="True" Type="Primary" NextID="10" />
          <Exit Name="False" Type="Alternate" NextID="9" />
        </Step>
        <Step Type="Assign" Name="Entity" ID="9">
          <Properties>
            <Property Name="StateVariableName">
              <Value>InventoryLocations.Entity</Value>
            </Property>
            <Property Name="NewValue">CustomToken.CurrentEntity</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="7" />
        </Step>
        <Step Type="Assign" Name="Entity" ID="10">
          <Properties>
            <Property Name="StateVariableName">
              <Value>InventoryLocations.Entity</Value>
            </Property>
            <Property Name="NewValue">CustomToken.CurrentEntity.ModelEntity.SourceEntity</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="7" />
        </Step>
        <Step Type="Assign" Name="LastUpdateHour" ID="11">
          <Properties>
            <Property Name="StateVariableName">
              <Value>InventoryLocations.LastUpdateHour</Value>
            </Property>
            <Property Name="NewValue">TimeNow</Property>
          </Properties>
        </Step>
        <Step Type="Assign" Name="NULL StageMaterialLocation" ID="12">
          <Properties>
            <Property Name="StateVariableName">
              <Value>CustomToken.CurrentEntity.ModelEntity.StageMaterialLocation</Value>
            </Property>
            <Property Name="NewValue">Nothing</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="13" />
        </Step>
        <Step Type="Search" Name="BillOfMaterials" ID="13">
          <Properties>
            <Property Name="CollectionType">TableRows</Property>
            <Property Name="TableName">BillOfMaterials</Property>
            <Property Name="MatchCondition">BillOfMaterials.ComponentMaterial == Token.MaterialOrderDetail.Material &amp;&amp; BillOfMaterials.InventoryObject == Token.MaterialOrderDetail.SourceSiteObject</Property>
          </Properties>
          <Exit Name="Original" Type="Primary" NextID="3" />
          <Exit Name="Found" Type="Alternate" NextID="14" />
        </Step>
        <Step Type="Assign" Name="StageMaterialLocation" ID="14">
          <Properties>
            <Property Name="StateVariableName">
              <Value>CustomToken.CurrentEntity.ModelEntity.StageMaterialLocation</Value>
            </Property>
            <Property Name="NewValue">BillOfMaterials.StageMaterialLocation</Property>
          </Properties>
        </Step>
        <Step Type="Decide" Name="StageMaterialLocation != Nothing" ID="15">
          <Properties>
            <Property Name="DecideType">ConditionBased</Property>
            <Property Name="ConditionOrProbability">CustomToken.CurrentEntity.ModelEntity.StageMaterialLocation != Nothing</Property>
          </Properties>
          <Exit Name="True" Type="Primary" NextID="16" />
        </Step>
        <Step Type="Execute" Name="MTRServer_StageMaterials" ID="16">
          <Properties>
            <Property Name="ProcessName">
              <Value>MTRServer_StageMaterials</Value>
            </Property>
          </Properties>
        </Step>
        <Step Type="Assign" Name="SOId" ID="17">
          <Properties>
            <Property Name="StateVariableName">
              <Value>InventoryLocations.SOId</Value>
            </Property>
            <Property Name="NewValue">CustomToken.CurrentEntity.ModelEntity.SOId</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="18" />
        </Step>
        <Step Type="Assign" Name="LastBikeForSO" ID="18">
          <Properties>
            <Property Name="StateVariableName">
              <Value>InventoryLocations.LastBikeForSO</Value>
            </Property>
            <Property Name="NewValue">CustomToken.CurrentEntity.ModelEntity.LastBikeForSO</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="8" />
        </Step>
      </Steps>
    </Process>
    <Process Name="zComponentOrder_Create" BeginStepID="2" Category="Inventory">
      <Properties>
        <Property Name="TokenClassName">CustomToken</Property>
      </Properties>
      <Steps>
        <Step Type="Create" Name="ComponentOrder" ID="2">
          <Properties>
            <Property Name="EntityType">ComponentOrderEntity</Property>
          </Properties>
          <Exit Name="Created" Type="Alternate" NextID="7" />
        </Step>
        <Step Type="Transfer" Name="ParallelRouteController" ID="3">
          <Properties>
            <Property Name="NodeName">Input@OperationController</Property>
          </Properties>
        </Step>
        <Step Type="Assign" Name="DisplayString" ID="4">
          <Properties>
            <Property Name="StateVariableName">
              <Value>ModelEntity.DisplayString</Value>
            </Property>
            <Property Name="NewValue">ComponentOrders.COId</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="5" />
        </Step>
        <Step Type="Assign" Name="DueDate" ID="5">
          <Properties>
            <Property Name="StateVariableName">
              <Value>ModelEntity.DueDate</Value>
            </Property>
            <Property Name="NewValue">ComponentOrders.DueDate</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="3" />
        </Step>
        <Step Type="Assign" Name="Priority" ID="6">
          <Properties>
            <Property Name="StateVariableName">
              <Value>ModelEntity.Priority</Value>
            </Property>
            <Property Name="NewValue">ComponentOrders.Priority</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="15" />
        </Step>
        <Step Type="SetRow" Name="ComponentOrder" ID="7">
          <Properties>
            <Property Name="TableName">ComponentOrders</Property>
            <Property Name="RowNumber">ComponentOrders.COId.RowForKey(CustomToken.AOId)</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="9" />
        </Step>
        <Step Type="SetRow" Name="Materials" ID="8">
          <Properties>
            <Property Name="TableName">Materials</Property>
            <Property Name="RowNumber">Materials.MaterialName.RowForKey(InventoryLocations.MaterialName.Material.Name)</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="13" />
        </Step>
        <Step Type="Assign" Name="F FromManufacturingOrder" ID="9">
          <Properties>
            <Property Name="StateVariableName">
              <Value>ModelEntity.FromManufacturingOrder</Value>
            </Property>
            <Property Name="NewValue">False</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="10" />
        </Step>
        <Step Type="Assign" Name="MOId" ID="10">
          <Properties>
            <Property Name="StateVariableName">
              <Value>ModelEntity.MOId</Value>
            </Property>
            <Property Name="NewValue">ComponentOrders.MOId</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="14" />
        </Step>
        <Step Type="Assign" Name="TriggeringAOId" ID="11">
          <Properties>
            <Property Name="StateVariableName">
              <Value>ModelEntity.TriggeringCOId</Value>
            </Property>
            <Property Name="NewValue">ComponentOrders.TriggeringOrder</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="6" />
        </Step>
        <Step Type="Assign" Name="SourceEntity" ID="12">
          <Properties>
            <Property Name="StateVariableName">
              <Value>ModelEntity.SourceEntity</Value>
            </Property>
            <Property Name="NewValue">ComponentOrders.SourceEntity</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="11" />
        </Step>
        <Step Type="Assign" Name="CurrentMaterial" ID="13">
          <Properties>
            <Property Name="StateVariableName">
              <Value>ModelEntity.CurrentMaterial</Value>
            </Property>
            <Property Name="NewValue">InventoryLocations.MaterialName</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="16" />
        </Step>
        <Step Type="Assign" Name="SOId" ID="14">
          <Properties>
            <Property Name="StateVariableName">
              <Value>ModelEntity.SOId</Value>
            </Property>
            <Property Name="NewValue">ComponentOrders.SOId</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="12" />
        </Step>
        <Step Type="Assign" Name="InventoryLocation" ID="15">
          <Properties>
            <Property Name="StateVariableName">
              <Value>ModelEntity.InventoryLocation</Value>
            </Property>
            <Property Name="NewValue">InventoryLocations.InventoryName</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="8" />
        </Step>
        <Step Type="Assign" Name="MaterialClass" ID="16">
          <Properties>
            <Property Name="StateVariableName">
              <Value>ModelEntity.MaterialClass</Value>
            </Property>
            <Property Name="NewValue">Materials[Materials.MaterialName.RowForKey(InventoryLocations.MaterialName)].MaterialClass</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="4" />
        </Step>
      </Steps>
    </Process>
    <Process Name="zComponentOrders_Populate" BeginStepID="6" Category="Inventory">
      <Properties>
        <Property Name="TokenClassName">CustomToken</Property>
      </Properties>
      <Steps>
        <Step Type="Assign" Name="Priority" ID="2">
          <Properties>
            <Property Name="StateVariableName">
              <Value>ComponentOrders.Priority</Value>
            </Property>
            <Property Name="NewValue">Materials[Materials.MaterialName.RowForKey(InventoryLocations.MaterialName.Material.Name)].Priority</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="5" />
        </Step>
        <Step Type="Assign" Name="DueDate" ID="3">
          <Properties>
            <Property Name="StateVariableName">
              <Value>ComponentOrders.DueDate</Value>
            </Property>
            <Property Name="NewValue">TimeNow + Materials[Materials.MaterialName.RowForKey(InventoryLocations.MaterialName.Material.Name)].LeadTime</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="2" />
        </Step>
        <Step Type="Assign" Name="ReleaseDate" ID="4">
          <Properties>
            <Property Name="StateVariableName">
              <Value>ComponentOrders.ReleaseDate</Value>
            </Property>
            <Property Name="NewValue">TimeNow</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="3" />
        </Step>
        <Step Type="Assign" Name="RowNumber" ID="5">
          <Properties>
            <Property Name="StateVariableName">
              <Value>ComponentOrders.RowNumber</Value>
            </Property>
            <Property Name="NewValue">CONumber</Property>
          </Properties>
        </Step>
        <Step Type="Assign" Name="MOId" ID="6">
          <Properties>
            <Property Name="StateVariableName">
              <Value>ComponentOrders.MOId</Value>
            </Property>
            <Property Name="NewValue">InventoryLocations.MOId</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="8" />
        </Step>
        <Step Type="Assign" Name="TriggeringAOId" ID="7">
          <Properties>
            <Property Name="StateVariableName">
              <Value>ComponentOrders.TriggeringOrder</Value>
            </Property>
            <Property Name="NewValue">InventoryLocations.EntityDisplayName</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="4" />
        </Step>
        <Step Type="Assign" Name="SourceEntity" ID="8">
          <Properties>
            <Property Name="StateVariableName">
              <Value>ComponentOrders.SourceEntity</Value>
            </Property>
            <Property Name="NewValue">InventoryLocations.Entity</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="7" />
        </Step>
      </Steps>
    </Process>
    <Process Name="Inventory_OnProduced" BeginStepID="11" Category="Inventory">
      <Properties>
        <Property Name="TokenClassName">CustomToken</Property>
      </Properties>
      <Steps>
        <Step Type="Assign" Name="AONumber++" ID="2">
          <Properties>
            <Property Name="StateVariableName">
              <Value>CONumber</Value>
            </Property>
            <Property Name="NewValue">CONumber + 1</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="7" />
        </Step>
        <Step Type="AddRow" Name="ComponentOrders" ID="3">
          <Properties>
            <Property Name="ObjectType">Token</Property>
            <Property Name="TableName">ComponentOrders</Property>
            <Property Name="KeyColumnValue">CustomToken.AOId</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="18" />
        </Step>
        <Step Type="Assign" Name="Quantity" ID="4">
          <Properties>
            <Property Name="StateVariableName">
              <Value>ComponentOrders.Quantity</Value>
            </Property>
            <Property Name="NewValue">InventoryLocations.ReorderQuantity</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="9" />
        </Step>
        <Step Type="Decide" Name="QuantityProduced &gt; PreviousQtyProduced" ID="5">
          <Properties>
            <Property Name="DecideType">ConditionBased</Property>
            <Property Name="ConditionOrProbability">InventoryLocations.InventoryName.Inventory.QuantityProduced &gt; InventoryLocations.PreviousQtyProduced</Property>
          </Properties>
          <Exit Name="True" Type="Primary" NextID="13" />
        </Step>
        <Step Type="SetRow" Name="InventoryLocations" ID="6">
          <Properties>
            <Property Name="ObjectType">Token</Property>
            <Property Name="TableName">InventoryLocations</Property>
            <Property Name="RowNumber">InventoryLocations.InventoryName.RowForKey(InventoryLocations.InventoryName.Inventory.Name)</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="30" />
        </Step>
        <Step Type="Assign" Name="AOId" ID="7">
          <Properties>
            <Property Name="StateVariableName">
              <Value>CustomToken.AOId</Value>
            </Property>
            <Property Name="NewValue">InventoryLocations.InventoryName.Inventory.Name + "-" + String.FromReal(CONumber)</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="3" />
        </Step>
        <Step Type="Delay" Name="Epsilon" ID="8">
          <Properties>
            <Property Name="DelayTime">Math.Epsilon</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="26" />
        </Step>
        <Step Type="Execute" Name="ComponentOrders_Populate" ID="9">
          <Properties>
            <Property Name="ProcessName">
              <Value>zComponentOrders_Populate</Value>
            </Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="21" />
        </Step>
        <Step Type="Execute" Name="ComponentOrders_Create" ID="10">
          <Properties>
            <Property Name="ProcessName">
              <Value>zComponentOrder_Create</Value>
            </Property>
          </Properties>
        </Step>
        <Step Type="Decide" Name="ReviewPeriod == Timer" ID="11">
          <Properties>
            <Property Name="DecideType">ConditionBased</Property>
            <Property Name="ConditionOrProbability">InventoryLocations.ReviewPeriod == Enum.InventoryReviewPeriod.Timer</Property>
          </Properties>
          <Exit Name="True" Type="Primary" NextID="12" />
          <Exit Name="False" Type="Alternate" NextID="5" />
        </Step>
        <Step Type="Decide" Name="TimeNow == TimerTriggeredHour" ID="12">
          <Properties>
            <Property Name="DecideType">ConditionBased</Property>
            <Property Name="ConditionOrProbability">TimeNow == InventoryLocations.TimerTriggeredHour</Property>
          </Properties>
          <Exit Name="True" Type="Primary" NextID="5" />
        </Step>
        <Step Type="Assign" Name="RemainderQuantity" ID="13">
          <Properties>
            <Property Name="StateVariableName">
              <Value>CustomToken.RemainderQuantity</Value>
            </Property>
            <Property Name="NewValue">Math.Remainder(InventoryLocations.InventoryName.Inventory.QuantityInStock, InventoryLocations.ReorderQuantity)</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="8" />
        </Step>
        <Step Type="Decide" Name="RemainderQuantity == 0" ID="14">
          <Properties>
            <Property Name="DecideType">ConditionBased</Property>
            <Property Name="ConditionOrProbability">CustomToken.RemainderQuantity == 0</Property>
          </Properties>
          <Exit Name="True" Type="Primary" NextID="25" />
          <Exit Name="False" Type="Alternate" NextID="24" />
        </Step>
        <Step Type="Decide" Name="NO PalletInventoryLocationsName" ID="15">
          <Properties>
            <Property Name="DecideType">ConditionBased</Property>
            <Property Name="ConditionOrProbability">String.Length( InventoryLocations.PalletInventoryLocationName ) == 0</Property>
          </Properties>
          <Exit Name="True" Type="Primary" NextID="6" />
          <Exit Name="False" Type="Alternate" NextID="16" />
        </Step>
        <Step Type="SetRow" Name="InventoryLocations" ID="16">
          <Properties>
            <Property Name="ObjectType">Token</Property>
            <Property Name="TableName">InventoryLocations</Property>
            <Property Name="RowNumber">InventoryLocations.InventoryName.RowForKey(InventoryLocations.PalletInventoryLocationName)</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="17" />
        </Step>
        <Step Type="Assign" Name="IsPalletOrder" ID="17">
          <Properties>
            <Property Name="StateVariableName">
              <Value>CustomToken.IsPalletOrder</Value>
            </Property>
            <Property Name="NewValue">True</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="30" />
        </Step>
        <Step Type="Assign" Name="IsPalletOrder" ID="18">
          <Properties>
            <Property Name="StateVariableName">
              <Value>ComponentOrders.IsPalletOrder</Value>
            </Property>
            <Property Name="NewValue">CustomToken.IsPalletOrder</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="28" />
        </Step>
        <Step Type="Assign" Name="MOId" ID="19">
          <Properties>
            <Property Name="StateVariableName">
              <Value>CustomToken.MOId</Value>
            </Property>
            <Property Name="NewValue">InventoryLocations.MOId</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="22" />
        </Step>
        <Step Type="Assign" Name="MOId" ID="20">
          <Properties>
            <Property Name="StateVariableName">
              <Value>ComponentOrders.MOId</Value>
            </Property>
            <Property Name="NewValue">CustomToken.MOId</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="23" />
        </Step>
        <Step Type="Decide" Name="IsPalletOrde" ID="21">
          <Properties>
            <Property Name="DecideType">ConditionBased</Property>
            <Property Name="ConditionOrProbability">CustomToken.IsPalletOrder</Property>
          </Properties>
          <Exit Name="True" Type="Primary" NextID="20" />
          <Exit Name="False" Type="Alternate" NextID="10" />
        </Step>
        <Step Type="Assign" Name="SOId" ID="22">
          <Properties>
            <Property Name="StateVariableName">
              <Value>CustomToken.SOId</Value>
            </Property>
            <Property Name="NewValue">InventoryLocations.SOId</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="15" />
        </Step>
        <Step Type="Assign" Name="SOId" ID="23">
          <Properties>
            <Property Name="StateVariableName">
              <Value>ComponentOrders.SOId</Value>
            </Property>
            <Property Name="NewValue">CustomToken.SOId</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="10" />
        </Step>
        <Step Type="Decide" Name="LastBikeForSO" ID="24">
          <Properties>
            <Property Name="DecideType">ConditionBased</Property>
            <Property Name="ConditionOrProbability">CustomToken.LastBikeForSO == True</Property>
          </Properties>
          <Exit Name="True" Type="Primary" NextID="25" />
        </Step>
        <Step Type="Assign" Name="PreviousQtyProduced" ID="25">
          <Properties>
            <Property Name="StateVariableName">
              <Value>InventoryLocations.PreviousQtyProduced</Value>
            </Property>
            <Property Name="NewValue">InventoryLocations.InventoryName.Inventory.QuantityProduced</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="19" />
        </Step>
        <Step Type="Assign" Name="LastBikeForSO" ID="26">
          <Properties>
            <Property Name="StateVariableName">
              <Value>CustomToken.LastBikeForSO</Value>
            </Property>
            <Property Name="NewValue">InventoryLocations.LastBikeForSO</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="27" />
        </Step>
        <Step Type="Assign" Name="F LastBikeForSO" ID="27">
          <Properties>
            <Property Name="StateVariableName">
              <Value>InventoryLocations.LastBikeForSO</Value>
            </Property>
            <Property Name="NewValue">False</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="14" />
        </Step>
        <Step Type="Assign" Name="LastBikeForSO" ID="28">
          <Properties>
            <Property Name="StateVariableName">
              <Value>ComponentOrders.LastBikeForSO</Value>
            </Property>
            <Property Name="NewValue">CustomToken.LastBikeForSO</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="4" />
        </Step>
        <Step Type="SetRow" Name="Processes" ID="29">
          <Properties>
            <Property Name="ObjectType">Token</Property>
            <Property Name="TableName">Processes</Property>
            <Property Name="RowNumber">Processes.ProcessName.RowForKey(CustomToken.ProcessName )</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="2" />
        </Step>
        <Step Type="Assign" Name="ProcessName" Color="f79646" ID="30">
          <Properties>
            <Property Name="StateVariableName">
              <Value>CustomToken.ProcessName</Value>
            </Property>
            <Property Name="NewValue">InventoryLocationsToProcesses[1].ProcessName</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="29" />
        </Step>
      </Steps>
    </Process>
    <Process Name="Inventory_OnReplenishmentOrder" BeginStepID="11" Category="Inventory">
      <Properties>
        <Property Name="TokenClassName">CustomToken</Property>
      </Properties>
      <Steps>
        <Step Type="Assign" Name="Quantity" ID="2">
          <Properties>
            <Property Name="StateVariableName">
              <Value>ComponentOrders.Quantity</Value>
            </Property>
            <Property Name="NewValue">Token.MaterialOrderDetail.Quantity</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="14" />
        </Step>
        <Step Type="SetRow" Name="InventoryLocations" ID="3">
          <Properties>
            <Property Name="ObjectType">Token</Property>
            <Property Name="TableName">InventoryLocations</Property>
            <Property Name="RowNumber">InventoryLocations.InventoryName.RowForKey(InventoryLocations.InventoryName.Inventory.Name)</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="15" />
        </Step>
        <Step Type="AddRow" Name="ComponentOrders" ID="4">
          <Properties>
            <Property Name="ObjectType">Token</Property>
            <Property Name="TableName">ComponentOrders</Property>
            <Property Name="KeyColumnValue">CustomToken.AOId</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="9" />
        </Step>
        <Step Type="Assign" Name="AOId" ID="5">
          <Properties>
            <Property Name="StateVariableName">
              <Value>CustomToken.AOId</Value>
            </Property>
            <Property Name="NewValue">InventoryLocations.InventoryName.Inventory.Name + "-" + String.FromReal(CONumber)</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="4" />
        </Step>
        <Step Type="Assign" Name="AONumber++" ID="6">
          <Properties>
            <Property Name="StateVariableName">
              <Value>CONumber</Value>
            </Property>
            <Property Name="NewValue">CONumber + 1</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="5" />
        </Step>
        <Step Type="Execute" Name="ComponentOrders_Populate" ID="7">
          <Properties>
            <Property Name="ProcessName">
              <Value>zComponentOrders_Populate</Value>
            </Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="8" />
        </Step>
        <Step Type="Execute" Name="ComponentOrders_Create" ID="8">
          <Properties>
            <Property Name="ProcessName">
              <Value>zComponentOrder_Create</Value>
            </Property>
          </Properties>
        </Step>
        <Step Type="Decide" Name="CustomReorderCondition" ID="9">
          <Properties>
            <Property Name="DecideType">ConditionBased</Property>
            <Property Name="ConditionOrProbability">InventoryLocations.ReplenishmentPolicy == "Custom Reorder Condition"</Property>
          </Properties>
          <Exit Name="True" Type="Primary" NextID="10" />
          <Exit Name="False" Type="Alternate" NextID="2" />
        </Step>
        <Step Type="Assign" Name="Quantity" ID="10">
          <Properties>
            <Property Name="StateVariableName">
              <Value>ComponentOrders.Quantity</Value>
            </Property>
            <Property Name="NewValue">InventoryLocations.AccumulatedConsumptionQuantity</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="14" />
        </Step>
        <Step Type="Decide" Name="ReviewPeriod == Continuous" ID="11">
          <Properties>
            <Property Name="DecideType">ConditionBased</Property>
            <Property Name="ConditionOrProbability">InventoryLocations.ReviewPeriod == Enum.InventoryReviewPeriod.Continuous</Property>
          </Properties>
          <Exit Name="True" Type="Primary" NextID="12" />
        </Step>
        <Step Type="Decide" Name="CustomReorderCondition" ID="12">
          <Properties>
            <Property Name="DecideType">ConditionBased</Property>
            <Property Name="ConditionOrProbability">InventoryLocations.ReplenishmentPolicy == "Custom Reorder Condition"</Property>
          </Properties>
          <Exit Name="True" Type="Primary" NextID="13" />
          <Exit Name="False" Type="Alternate" NextID="3" />
        </Step>
        <Step Type="Decide" Name="CRQ &gt; 0" ID="13">
          <Properties>
            <Property Name="DecideType">ConditionBased</Property>
            <Property Name="ConditionOrProbability">InventoryLocations.AccumulatedConsumptionQuantity &gt; 0</Property>
          </Properties>
          <Exit Name="True" Type="Primary" NextID="3" />
        </Step>
        <Step Type="Assign" Name="- AccumulatedConsumptionQuantity" ID="14">
          <Properties>
            <Property Name="StateVariableName">
              <Value>InventoryLocations.AccumulatedConsumptionQuantity</Value>
            </Property>
            <Property Name="NewValue">InventoryLocations.AccumulatedConsumptionQuantity - ComponentOrders.Quantity</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="7" />
        </Step>
        <Step Type="Assign" Name="ProcessName" Color="f79646" ID="15">
          <Properties>
            <Property Name="StateVariableName">
              <Value>CustomToken.ProcessName</Value>
            </Property>
            <Property Name="NewValue">InventoryLocationsToProcesses[1].ProcessName</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="16" />
        </Step>
        <Step Type="SetRow" Name="Processes" ID="16">
          <Properties>
            <Property Name="ObjectType">Token</Property>
            <Property Name="TableName">Processes</Property>
            <Property Name="RowNumber">Processes.ProcessName.RowForKey(CustomToken.ProcessName )</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="6" />
        </Step>
      </Steps>
    </Process>
    <Process Name="EveryHourOnTheHourProcess" BeginStepID="7" Category="Timers">
      <Properties>
        <Property Name="TriggeringEventName">EveryHourOnTheHour.Event</Property>
      </Properties>
      <Steps>
        <Step Type="AddRow" Name="RunInfo" ID="2">
          <Properties>
            <Property Name="TableName">RunInfo</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="4" />
        </Step>
        <Step Type="Assign" Name="RunInfo.RealTimeDuration" ID="3">
          <Properties>
            <Property Name="StateVariableName">
              <Value>RunInfo.RealTimeDuration</Value>
            </Property>
            <Property Name="NewValue">CurrentDateTime - PrevDateTime</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="5" />
        </Step>
        <Step Type="Assign" Name="RunInfo.TimeNowDateTime" ID="4">
          <Properties>
            <Property Name="StateVariableName">
              <Value>RunInfo.TimeNowDateTime</Value>
            </Property>
            <Property Name="NewValue">TimeNow</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="6" />
        </Step>
        <Step Type="Assign" Name="PrevDateTime" ID="5">
          <Properties>
            <Property Name="StateVariableName">
              <Value>PrevDateTime</Value>
            </Property>
            <Property Name="NewValue">CurrentDateTime</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="8" />
        </Step>
        <Step Type="Assign" Name="RunInfo.TimeNow" ID="6">
          <Properties>
            <Property Name="StateVariableName">
              <Value>RunInfo.TimeNow</Value>
            </Property>
            <Property Name="NewValue">TimeNow</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="3" />
        </Step>
        <Step Type="Assign" Name="CurrentDateTime" ID="7">
          <Properties>
            <Property Name="StateVariableName">
              <Value>CurrentDateTime</Value>
            </Property>
            <Property Name="NewValue">DateTime.SystemNow</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="2" />
        </Step>
        <Step Type="Execute" Name="CheckInventoryLocationsProduces" ID="8">
          <Properties>
            <Property Name="ProcessName">
              <Value>ChecklInventoryLocationsProduces</Value>
              <InputParameters>
                <Properties>
                  <Property Name="EventTimer">
                    <Value>EveryHourOnTheHour</Value>
                  </Property>
                </Properties>
              </InputParameters>
            </Property>
          </Properties>
        </Step>
      </Steps>
    </Process>
    <Process Name="EveryDayAtMidnightProcess" BeginStepID="2" Category="Timers">
      <Properties>
        <Property Name="TriggeringEventName">EveryDayAtMidnight.Event</Property>
      </Properties>
      <Steps>
        <Step Type="Execute" Name="CheckInventoryLocationsProduces" ID="2">
          <Properties>
            <Property Name="ProcessName">
              <Value>ChecklInventoryLocationsProduces</Value>
              <InputParameters>
                <Properties>
                  <Property Name="EventTimer">
                    <Value>EveryDayAtMidnight</Value>
                  </Property>
                </Properties>
              </InputParameters>
            </Property>
          </Properties>
        </Step>
      </Steps>
    </Process>
    <Process Name="ChecklInventoryLocationsProduces" BeginStepID="2" Category="Inventory">
      <Properties>
        <Property Name="TokenClassName">CustomToken</Property>
        <Property Name="InputArguments">
          <Rows>
            <Properties>
              <Property Name="InputArgumentName">EventTimer</Property>
              <Property Name="InputArgumentStateVariableName">
                <Value>CustomToken.EventTimer</Value>
              </Property>
            </Properties>
          </Rows>
        </Property>
      </Properties>
      <Steps>
        <Step Type="Search" Name="InventoryLocations" ID="2">
          <Properties>
            <Property Name="CollectionType">TableRows</Property>
            <Property Name="TableName">InventoryLocations</Property>
            <Property Name="MatchCondition">InventoryLocations.ReviewTimer == CustomToken.EventTimer &amp;&amp; InventoryLocations.OnProducedProcess != Nothing</Property>
            <Property Name="Limit">Infinity</Property>
          </Properties>
          <Exit Name="Found" Type="Alternate" NextID="4" />
        </Step>
        <Step Type="Execute" Name="MonitorProcess" ID="3">
          <Properties>
            <Property Name="ProcessName">
              <Value>InventoryLocations.OnProducedProcess</Value>
            </Property>
          </Properties>
        </Step>
        <Step Type="Assign" Name="TimerTriggeredHour" ID="4">
          <Properties>
            <Property Name="StateVariableName">
              <Value>InventoryLocations.TimerTriggeredHour</Value>
            </Property>
            <Property Name="NewValue">TimeNow</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="3" />
        </Step>
      </Steps>
    </Process>
    <Process Name="MTRVehicle_Failed" BeginStepID="2" Category="MTRVehicle">
      <Properties>
        <Property Name="TokenClassName">CustomToken</Property>
      </Properties>
      <Steps>
        <Step Type="Seize" Name="Worker" ID="2">
          <Properties>
            <Property Name="ResourceSeizes">
              <Rows>
                <Properties>
                  <Property Name="ResourceType">FromList</Property>
                  <Property Name="ResourceName">Workers</Property>
                  <Property Name="ResourceListName">Employees.ResourceName</Property>
                </Properties>
              </Rows>
            </Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="7" />
        </Step>
        <Step Type="Search" Name="Workers" ID="3">
          <Properties>
            <Property Name="EntityType">CustomToken.Worker</Property>
            <Property Name="MatchCondition">Candidate.MTRWorker.ResourceOwners.Contains(MTRVehicle)</Property>
            <Property Name="TokenWaitAction">WaitUntilNewTokenProcessingCompleted</Property>
          </Properties>
          <Exit Name="Found" Type="Alternate" NextID="4" />
        </Step>
        <Step Type="Transfer" Name="FreeSpace" ID="4">
          <Properties>
            <Property Name="FromType">Any</Property>
            <Property Name="ToType">FreeSpace</Property>
            <Property Name="FacilityName">MTRSite</Property>
          </Properties>
          <Exit Name="OK" Type="Primary" NextID="5" />
        </Step>
        <Step Type="EndTransfer" Name="EndTransfer1" ID="5">
          <Properties />
          <Exit Name="Exit" Type="Primary" NextID="6" />
        </Step>
        <Step Type="Travel" Name="Failed" ID="6">
          <Properties>
            <Property Name="SteeringBehavior" BehaviorGuid="2b2ac6d5-73de-4ac8-bfc8-8b0ea2fdbe1e">
              <Value>Direct To Destination</Value>
              <Properties>
                <Property Name="DestinationType">AbsoluteCoordinates</Property>
                <Property Name="XLocation">MTRVehicle.Location.X</Property>
                <Property Name="ZLocation">MTRVehicle.Location.Z</Property>
                <Property Name="MaximumMovementRate">MTRWorker.DesiredSpeed</Property>
              </Properties>
            </Property>
          </Properties>
        </Step>
        <Step Type="Search" Name="Employees" ID="7">
          <Properties>
            <Property Name="CollectionType">TableRows</Property>
            <Property Name="EntityType">Workers</Property>
            <Property Name="TableName">Employees</Property>
            <Property Name="Limit">Infinity</Property>
            <Property Name="TokenWaitAction">WaitUntilNewTokenProcessingCompleted</Property>
          </Properties>
          <Exit Name="Found" Type="Alternate" NextID="8" />
        </Step>
        <Step Type="Assign" Name="Worker" ID="8">
          <Properties>
            <Property Name="StateVariableName">
              <Value>CustomToken.Worker</Value>
            </Property>
            <Property Name="NewValue">Employees.ResourceName.MTRWorker.Population.FirstItem</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="3" />
        </Step>
      </Steps>
    </Process>
    <Process Name="SOSource_Stochastic_Exited" BeginStepID="4" Category="SOSource">
      <Properties />
      <Steps>
        <Step Type="AddRow" Name="SalesOrdersOutput" ID="2">
          <Properties>
            <Property Name="TableName">SalesOrdersOutput</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="3" />
        </Step>
        <Step Type="Assign" Name="SOId" ID="3">
          <Properties>
            <Property Name="StateVariableName">
              <Value>SalesOrdersOutput.SOId</Value>
            </Property>
            <Property Name="NewValue">"Order" + Math.If(SONumber &lt; 10, "000" + String.FromReal(SONumber), SONumber &lt; 100, "00" + String.FromReal(SONumber), SONumber &lt; 1000, "0" + String.FromReal(SONumber), String.FromReal(SONumber))</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="8" />
        </Step>
        <Step Type="Assign" Name="SONumber" ID="4">
          <Properties>
            <Property Name="StateVariableName">
              <Value>SONumber</Value>
            </Property>
            <Property Name="NewValue">SONumber + 1</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="2" />
        </Step>
        <Step Type="Assign" Name="MaterialName" ID="5">
          <Properties>
            <Property Name="StateVariableName">
              <Value>SalesOrdersOutput.MaterialName</Value>
            </Property>
            <Property Name="NewValue">SalesOrders.MaterialName.Name</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="9" />
        </Step>
        <Step Type="Assign" Name="ReleaseDate" ID="6">
          <Properties>
            <Property Name="StateVariableName">
              <Value>SalesOrdersOutput.ReleaseDate</Value>
            </Property>
            <Property Name="NewValue">ModelEntity.TimeCreated</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="7" />
        </Step>
        <Step Type="Assign" Name="DueDate" ID="7">
          <Properties>
            <Property Name="StateVariableName">
              <Value>SalesOrdersOutput.DueDate</Value>
            </Property>
            <Property Name="NewValue">ModelEntity.DueDate</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="10" />
        </Step>
        <Step Type="Assign" Name="Customer" ID="8">
          <Properties>
            <Property Name="StateVariableName">
              <Value>SalesOrdersOutput.Customer</Value>
            </Property>
            <Property Name="NewValue">SalesOrders.Customer</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="5" />
        </Step>
        <Step Type="Assign" Name="SiteObjectName" ID="9">
          <Properties>
            <Property Name="StateVariableName">
              <Value>SalesOrdersOutput.SiteObjectName</Value>
            </Property>
            <Property Name="NewValue">SalesOrders.SiteObjectName.Name</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="6" />
        </Step>
        <Step Type="Assign" Name="Priority" ID="10">
          <Properties>
            <Property Name="StateVariableName">
              <Value>SalesOrdersOutput.Priority</Value>
            </Property>
            <Property Name="NewValue">ModelEntity.Priority</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="11" />
        </Step>
        <Step Type="Assign" Name="Quantity" ID="11">
          <Properties>
            <Property Name="StateVariableName">
              <Value>SalesOrdersOutput.Quantity</Value>
            </Property>
            <Property Name="NewValue">SalesOrders.Quantity</Property>
          </Properties>
        </Step>
      </Steps>
    </Process>
    <Process Name="MTRVehicle_FindClosestStartNode" BeginStepID="3" Category="MTRVehicle">
      <Properties>
        <Property Name="TokenClassName">CustomToken</Property>
      </Properties>
      <Steps>
        <Step Type="Assign" Name="ClosestStartNode" ID="2">
          <Properties>
            <Property Name="StateVariableName">
              <Value>CustomToken.AssignedVehicle.MTRVehicle.ClosestStartNode</Value>
            </Property>
            <Property Name="NewValue">Link.StartingNode</Property>
          </Properties>
        </Step>
        <Step Type="Assign" Name="AssignedVehicle" ID="3">
          <Properties>
            <Property Name="StateVariableName">
              <Value>CustomToken.AssignedVehicle</Value>
            </Property>
            <Property Name="NewValue">MTRVehicle</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="4" />
        </Step>
        <Step Type="Search" Name="ClosestLink" ID="4">
          <Properties>
            <Property Name="CollectionType">NetworkLinks</Property>
            <Property Name="NetworkName">
              <Value>Main</Value>
            </Property>
            <Property Name="SearchType">MinimizeExpression</Property>
            <Property Name="SearchExpression">Candidate.Link.StartingNode.DirectDistanceTo.Object(CustomToken.AssignedVehicle)</Property>
          </Properties>
          <Exit Name="Found" Type="Alternate" NextID="2" />
        </Step>
      </Steps>
    </Process>
    <Process Name="MTRVehicle_EvaluatingTransportRequest" BeginStepID="4" Category="MTRVehicle">
      <Properties />
      <Steps>
        <Step Type="Decide" Name="T ChargeRequired" ID="2">
          <Properties>
            <Property Name="DecideType">ConditionBased</Property>
            <Property Name="ConditionOrProbability">MTRVehicle.ChargeRequired == True</Property>
          </Properties>
          <Exit Name="True" Type="Primary" NextID="3" />
        </Step>
        <Step Type="Assign" Name="F ReturnValue" ID="3">
          <Properties>
            <Property Name="StateVariableName">
              <Value>Token.ReturnValue</Value>
            </Property>
            <Property Name="NewValue">False</Property>
          </Properties>
        </Step>
        <Step Type="Decide" Name="CurrentNode != MTRVehicle.DestinationNode" ID="4">
          <Properties>
            <Property Name="DecideType">ConditionBased</Property>
            <Property Name="ConditionOrProbability">ModelEntity.CurrentNode != MTRVehicle.CurrentNode</Property>
          </Properties>
          <Exit Name="True" Type="Primary" NextID="2" />
        </Step>
      </Steps>
    </Process>
    <Process Name="SOSource_Deterministic_Exited" BeginStepID="2" Category="SOSource">
      <Properties />
      <Steps>
        <Step Type="AddRow" Name="SalesOrdersOutput" ID="2">
          <Properties>
            <Property Name="TableName">SalesOrdersOutput</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="3" />
        </Step>
        <Step Type="Assign" Name="SOId" ID="3">
          <Properties>
            <Property Name="StateVariableName">
              <Value>SalesOrdersOutput.SOId</Value>
            </Property>
            <Property Name="NewValue">SalesOrders.SOId</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="6" />
        </Step>
        <Step Type="Assign" Name="ReleaseDate" ID="4">
          <Properties>
            <Property Name="StateVariableName">
              <Value>SalesOrdersOutput.ReleaseDate</Value>
            </Property>
            <Property Name="NewValue">ModelEntity.TimeCreated</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="5" />
        </Step>
        <Step Type="Assign" Name="DueDate" ID="5">
          <Properties>
            <Property Name="StateVariableName">
              <Value>SalesOrdersOutput.DueDate</Value>
            </Property>
            <Property Name="NewValue">ModelEntity.DueDate</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="10" />
        </Step>
        <Step Type="Assign" Name="Customer" ID="6">
          <Properties>
            <Property Name="StateVariableName">
              <Value>SalesOrdersOutput.Customer</Value>
            </Property>
            <Property Name="NewValue">SalesOrders.Customer</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="8" />
        </Step>
        <Step Type="Assign" Name="SiteObjectName" ID="7">
          <Properties>
            <Property Name="StateVariableName">
              <Value>SalesOrdersOutput.SiteObjectName</Value>
            </Property>
            <Property Name="NewValue">SalesOrders.SiteObjectName.Name</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="4" />
        </Step>
        <Step Type="Assign" Name="MaterialName" ID="8">
          <Properties>
            <Property Name="StateVariableName">
              <Value>SalesOrdersOutput.MaterialName</Value>
            </Property>
            <Property Name="NewValue">SalesOrders.MaterialName.Name</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="7" />
        </Step>
        <Step Type="Assign" Name="Quantity" ID="9">
          <Properties>
            <Property Name="StateVariableName">
              <Value>SalesOrdersOutput.Quantity</Value>
            </Property>
            <Property Name="NewValue">SalesOrders.Quantity</Property>
          </Properties>
        </Step>
        <Step Type="Assign" Name="Priority" ID="10">
          <Properties>
            <Property Name="StateVariableName">
              <Value>SalesOrdersOutput.Priority</Value>
            </Property>
            <Property Name="NewValue">ModelEntity.Priority</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="9" />
        </Step>
      </Steps>
    </Process>
    <Process Name="SOSource_RealTime_Exited" BeginStepID="2" Category="SOSource">
      <Properties />
      <Steps>
        <Step Type="AddRow" Name="SalesOrdersOutput" ID="2">
          <Properties>
            <Property Name="TableName">SalesOrdersOutput</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="3" />
        </Step>
        <Step Type="Assign" Name="SOId" ID="3">
          <Properties>
            <Property Name="StateVariableName">
              <Value>SalesOrdersOutput.SOId</Value>
            </Property>
            <Property Name="NewValue">SalesOrdersRealTime.SOId</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="7" />
        </Step>
        <Step Type="Assign" Name="MaterialName" ID="4">
          <Properties>
            <Property Name="StateVariableName">
              <Value>SalesOrdersOutput.MaterialName</Value>
            </Property>
            <Property Name="NewValue">SalesOrdersRealTime.MaterialName</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="8" />
        </Step>
        <Step Type="Assign" Name="ReleaseDate" ID="5">
          <Properties>
            <Property Name="StateVariableName">
              <Value>SalesOrdersOutput.ReleaseDate</Value>
            </Property>
            <Property Name="NewValue">ModelEntity.TimeCreated</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="6" />
        </Step>
        <Step Type="Assign" Name="DueDate" ID="6">
          <Properties>
            <Property Name="StateVariableName">
              <Value>SalesOrdersOutput.DueDate</Value>
            </Property>
            <Property Name="NewValue">ModelEntity.DueDate</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="9" />
        </Step>
        <Step Type="Assign" Name="Customer" ID="7">
          <Properties>
            <Property Name="StateVariableName">
              <Value>SalesOrdersOutput.Customer</Value>
            </Property>
            <Property Name="NewValue">SalesOrdersRealTime.Customer</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="4" />
        </Step>
        <Step Type="Assign" Name="SiteObjectName" ID="8">
          <Properties>
            <Property Name="StateVariableName">
              <Value>SalesOrdersOutput.SiteObjectName</Value>
            </Property>
            <Property Name="NewValue">SalesOrdersRealTime.SiteObjectName</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="5" />
        </Step>
        <Step Type="Assign" Name="Priority" ID="9">
          <Properties>
            <Property Name="StateVariableName">
              <Value>SalesOrdersOutput.Priority</Value>
            </Property>
            <Property Name="NewValue">ModelEntity.Priority</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="10" />
        </Step>
        <Step Type="Assign" Name="Quantity" ID="10">
          <Properties>
            <Property Name="StateVariableName">
              <Value>SalesOrdersOutput.Quantity</Value>
            </Property>
            <Property Name="NewValue">SalesOrdersRealTime.Quantity</Property>
          </Properties>
        </Step>
      </Steps>
    </Process>
    <Process Name="ChargeNode_Exited" BeginStepID="3" Category="ChargeNode Add-On Processes">
      <Properties />
      <Steps>
        <Step Type="Assign" Name="ChargedCount" ID="2">
          <Properties>
            <Property Name="StateVariableName">
              <Value>ChargedCount</Value>
            </Property>
            <Property Name="NewValue">ChargedCount + 1</Property>
          </Properties>
        </Step>
        <Step Type="Decide" Name="Is.MTRVehicle" ID="3">
          <Properties>
            <Property Name="DecideType">ConditionBased</Property>
            <Property Name="ConditionOrProbability">Is.MTRVehicle</Property>
          </Properties>
          <Exit Name="True" Type="Primary" NextID="4" />
        </Step>
        <Step Type="Decide" Name="F Is Parked" ID="4">
          <Properties>
            <Property Name="DecideType">ConditionBased</Property>
            <Property Name="ConditionOrProbability">MTRVehicle.IsParked == False</Property>
          </Properties>
          <Exit Name="True" Type="Primary" NextID="2" />
        </Step>
      </Steps>
    </Process>
    <Process Name="MTRServer_BeforeProcessing" BeginStepID="3" Category="MTRServer">
      <Properties>
        <Property Name="TokenClassName">CustomToken</Property>
      </Properties>
      <Steps>
        <Step Type="Execute" Name="Resources.BeforeProcessingProcess" ID="2">
          <Properties>
            <Property Name="ProcessName">
              <Value>Resources.BeforeProcessingProcess</Value>
            </Property>
          </Properties>
        </Step>
        <Step Type="Decide" Name="FromManufacturingOrder" ID="3">
          <Properties>
            <Property Name="DecideType">ConditionBased</Property>
            <Property Name="ConditionOrProbability">ModelEntity.FromManufacturingOrder == True</Property>
          </Properties>
          <Exit Name="True" Type="Primary" NextID="5" />
          <Exit Name="False" Type="Alternate" NextID="2" />
        </Step>
        <Step Type="Assign" Name="T HasStarted" ID="4">
          <Properties>
            <Property Name="StateVariableName">
              <Value>ManufacturingOrders.HasStarted</Value>
            </Property>
            <Property Name="NewValue">True</Property>
          </Properties>
        </Step>
        <Step Type="Create" Name="Token" ID="5">
          <Properties>
            <Property Name="CreateType">NewToken</Property>
          </Properties>
          <Exit Name="Original" Type="Primary" NextID="2" />
          <Exit Name="Created" Type="Alternate" NextID="6" />
        </Step>
        <Step Type="SetRow" Name="ManufacturingOrders" ID="6">
          <Properties>
            <Property Name="ObjectType">Token</Property>
            <Property Name="TableName">ManufacturingOrders</Property>
            <Property Name="RowNumber">ModelEntity.RowNumber</Property>
            <Property Name="ClearAllTableReferencesFirst">True</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="4" />
        </Step>
      </Steps>
    </Process>
    <Process Name="MTRVehicle_Repaired" BeginStepID="6" Category="MTRVehicle">
      <Properties>
        <Property Name="TokenClassName">CustomToken</Property>
      </Properties>
      <Steps>
        <Step Type="Search" Name="Workers" ID="2">
          <Properties>
            <Property Name="EntityType">CustomToken.Worker</Property>
            <Property Name="MatchCondition">Candidate.Worker.ResourceOwners.Contains(MTRVehicle)</Property>
          </Properties>
          <Exit Name="Found" Type="Alternate" NextID="4" />
        </Step>
        <Step Type="Release" Name="Worker" ID="3">
          <Properties>
            <Property Name="OwnerType">SpecificObject</Property>
            <Property Name="OwnerObject">
              <Value>CustomToken.AssignedVehicle</Value>
            </Property>
            <Property Name="ResourceReleases">
              <Rows>
                <Properties>
                  <Property Name="ResourceName">MTRWorker</Property>
                </Properties>
              </Rows>
            </Property>
          </Properties>
        </Step>
        <Step Type="Travel" Name="HomeNode" ID="4">
          <Properties>
            <Property Name="SteeringBehavior" BehaviorGuid="2b2ac6d5-73de-4ac8-bfc8-8b0ea2fdbe1e">
              <Value>Direct To Destination</Value>
              <Properties>
                <Property Name="DestinationObject">MTRWorker.HomeNode</Property>
                <Property Name="MaximumMovementRate">MTRWorker.DesiredSpeed</Property>
              </Properties>
            </Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="5" />
        </Step>
        <Step Type="Transfer" Name="WorkerHome" ID="5">
          <Properties>
            <Property Name="NodeName">MTRWorker.HomeNode</Property>
          </Properties>
          <Exit Name="OK" Type="Primary" NextID="3" />
        </Step>
        <Step Type="Assign" Name="AssignedVehicle" ID="6">
          <Properties>
            <Property Name="StateVariableName">
              <Value>CustomToken.AssignedVehicle</Value>
            </Property>
            <Property Name="NewValue">MTRVehicle</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="7" />
        </Step>
        <Step Type="Search" Name="Employees" ID="7">
          <Properties>
            <Property Name="CollectionType">TableRows</Property>
            <Property Name="EntityType">Workers</Property>
            <Property Name="TableName">Employees</Property>
            <Property Name="Limit">Infinity</Property>
            <Property Name="TokenWaitAction">WaitUntilNewTokenProcessingCompleted</Property>
          </Properties>
          <Exit Name="Found" Type="Alternate" NextID="8" />
        </Step>
        <Step Type="Assign" Name="Worker" ID="8">
          <Properties>
            <Property Name="StateVariableName">
              <Value>CustomToken.Worker</Value>
            </Property>
            <Property Name="NewValue">Employees.ResourceName.MTRWorker.Population.FirstItem</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="2" />
        </Step>
      </Steps>
    </Process>
    <Process Name="MTRTransferNode_Entered" BeginStepID="5" Category="MTRTransferNode">
      <Properties>
        <Property Name="TokenClassName">CustomToken</Property>
      </Properties>
      <Steps>
        <Step Type="Execute" Name="PhaseFinished" ID="2">
          <Properties>
            <Property Name="ProcessName">
              <Value>PhaseFinished</Value>
            </Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="6" />
        </Step>
        <Step Type="Decide" Name="Is.OperationEntity" ID="3">
          <Properties>
            <Property Name="DecideType">ConditionBased</Property>
            <Property Name="ConditionOrProbability">Is.OperationEntity == True</Property>
          </Properties>
          <Exit Name="True" Type="Primary" NextID="4" />
        </Step>
        <Step Type="Decide" Name="New Location?" ID="4">
          <Properties>
            <Property Name="DecideType">ConditionBased</Property>
            <Property Name="ConditionOrProbability">ModelEntity.Location.Parent != Operations.ResourceName</Property>
          </Properties>
          <Exit Name="True" Type="Primary" NextID="2" />
        </Step>
        <Step Type="Assign" Name="CurrentEntity" ID="5">
          <Properties>
            <Property Name="StateVariableName">
              <Value>CustomToken.CurrentEntity</Value>
            </Property>
            <Property Name="NewValue">ModelEntity</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="3" />
        </Step>
        <Step Type="Delay" Name="Epsilon" ID="6">
          <Properties>
            <Property Name="DelayTime">Math.Epsilon</Property>
          </Properties>
        </Step>
      </Steps>
    </Process>
    <Process Name="MTRServer_StageMaterials" BeginStepID="9" Category="MTRServer">
      <Properties>
        <Property Name="TokenClassName">CustomToken</Property>
      </Properties>
      <Steps>
        <Step Type="Assign" Name="AONumber++" ID="2">
          <Properties>
            <Property Name="StateVariableName">
              <Value>CONumber</Value>
            </Property>
            <Property Name="NewValue">CONumber + 1</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="6" />
        </Step>
        <Step Type="AddRow" Name="ComponentOrders" ID="3">
          <Properties>
            <Property Name="ObjectType">Token</Property>
            <Property Name="TableName">ComponentOrders</Property>
            <Property Name="KeyColumnValue">CustomToken.AOId</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="4" />
        </Step>
        <Step Type="Assign" Name="Quantity" ID="4">
          <Properties>
            <Property Name="StateVariableName">
              <Value>ComponentOrders.Quantity</Value>
            </Property>
            <Property Name="NewValue">Token.MaterialOrderDetail.Quantity</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="7" />
        </Step>
        <Step Type="SetRow" Name="InventoryLocations" ID="5">
          <Properties>
            <Property Name="ObjectType">Token</Property>
            <Property Name="TableName">InventoryLocations</Property>
            <Property Name="RowNumber">CustomToken.RowNumber</Property>
            <Property Name="ClearAllTableReferencesFirst">True</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="14" />
        </Step>
        <Step Type="Assign" Name="AOId" ID="6">
          <Properties>
            <Property Name="StateVariableName">
              <Value>CustomToken.AOId</Value>
            </Property>
            <Property Name="NewValue">InventoryLocations.InventoryName.Inventory.Name + "-" + String.FromReal(CONumber)</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="3" />
        </Step>
        <Step Type="Execute" Name="ComponentOrders_Populate" ID="7">
          <Properties>
            <Property Name="ProcessName">
              <Value>zComponentOrders_Populate</Value>
            </Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="8" />
        </Step>
        <Step Type="Execute" Name="ComponentOrders_Create" ID="8">
          <Properties>
            <Property Name="ProcessName">
              <Value>zComponentOrder_Create</Value>
            </Property>
          </Properties>
        </Step>
        <Step Type="Search" Name="InventoryLocations" ID="9">
          <Properties>
            <Property Name="CollectionType">TableRows</Property>
            <Property Name="TableName">InventoryLocations</Property>
            <Property Name="SearchRelatedRowsOnly">False</Property>
            <Property Name="MatchCondition">InventoryLocations.MaterialName == Token.MaterialOrderDetail.Material &amp;&amp; InventoryLocations.SiteObjectName == CustomToken.CurrentEntity.ModelEntity.StageMaterialLocation</Property>
            <Property Name="SaveIndexFound">
              <Value>CustomToken.RowNumber</Value>
            </Property>
          </Properties>
          <Exit Name="Original" Type="Primary" NextID="10" />
        </Step>
        <Step Type="Decide" Name="RowNumber&gt; 0" ID="10">
          <Properties>
            <Property Name="DecideType">ConditionBased</Property>
            <Property Name="ConditionOrProbability">CustomToken.RowNumber&gt; 0</Property>
          </Properties>
          <Exit Name="True" Type="Primary" NextID="5" />
        </Step>
        <Step Type="Assign" Name="EntityName" ID="11">
          <Properties>
            <Property Name="StateVariableName">
              <Value>InventoryLocations.EntityName</Value>
            </Property>
            <Property Name="NewValue">CustomToken.CurrentEntity.Name</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="12" />
        </Step>
        <Step Type="Assign" Name="DisplayEntityName" ID="12">
          <Properties>
            <Property Name="StateVariableName">
              <Value>InventoryLocations.EntityDisplayName</Value>
            </Property>
            <Property Name="NewValue">CustomToken.CurrentEntity.DisplayName</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="13" />
        </Step>
        <Step Type="Assign" Name="MOId" ID="13">
          <Properties>
            <Property Name="StateVariableName">
              <Value>InventoryLocations.MOId</Value>
            </Property>
            <Property Name="NewValue">CustomToken.CurrentEntity.ModelEntity.MOId</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="2" />
        </Step>
        <Step Type="Assign" Name="ProcessName" Color="f79646" ID="14">
          <Properties>
            <Property Name="StateVariableName">
              <Value>CustomToken.ProcessName</Value>
            </Property>
            <Property Name="NewValue">InventoryLocationsToProcesses[1].ProcessName</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="15" />
        </Step>
        <Step Type="SetRow" Name="Processes" ID="15">
          <Properties>
            <Property Name="ObjectType">Token</Property>
            <Property Name="TableName">Processes</Property>
            <Property Name="RowNumber">Processes.ProcessName.RowForKey(CustomToken.ProcessName )</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="11" />
        </Step>
      </Steps>
    </Process>
    <Process Name="ComponentOrdersDestroy_Entered" BeginStepID="3" Category="ComponentOrdersDestroy Add-On Processes">
      <Properties />
      <Steps>
        <Step Type="Assign" Name="ShipDate" ID="2">
          <Properties>
            <Property Name="StateVariableName">
              <Value>SalesOrders[SalesOrders.SOId.RowForKey(ModelEntity.SOId)].ShipDate</Value>
            </Property>
            <Property Name="NewValue">TimeNow</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="4" />
        </Step>
        <Step Type="Decide" Name="IsPalletOrder" ID="3">
          <Properties>
            <Property Name="DecideType">ConditionBased</Property>
            <Property Name="ConditionOrProbability">ComponentOrders.LastBikeForSO</Property>
          </Properties>
          <Exit Name="True" Type="Primary" NextID="2" />
        </Step>
        <Step Type="Assign" Name="ProductionCost" ID="4">
          <Properties>
            <Property Name="StateVariableName">
              <Value>SalesOrders[SalesOrders.SOId.RowForKey(ModelEntity.SOId)].ProductionCost</Value>
            </Property>
            <Property Name="NewValue" Units="USD">Entity.Cost</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="6" />
        </Step>
        <Step Type="Assign" Name="LateOrders" ID="5">
          <Properties>
            <Property Name="StateVariableName">
              <Value>LateOrders</Value>
            </Property>
            <Property Name="NewValue">Math.If( TimeNow&gt; SalesOrders[SalesOrders.SOId.RowForKey(ModelEntity.SOId)].DueDate, LateOrders + 1, LateOrders)</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="7" />
        </Step>
        <Step Type="Assign" Name="OnTimeOrders" ID="6">
          <Properties>
            <Property Name="StateVariableName">
              <Value>OnTimeOrders</Value>
            </Property>
            <Property Name="NewValue">Math.If( TimeNow &lt;= SalesOrders[SalesOrders.SOId.RowForKey(ModelEntity.SOId)].DueDate, OnTimeOrders + 1, OnTimeOrders)</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="5" />
        </Step>
        <Step Type="Assign" Name="TotalCompleted" ID="7">
          <Properties>
            <Property Name="StateVariableName">
              <Value>TotalCompleted</Value>
            </Property>
            <Property Name="NewValue">TotalCompleted + 1</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="10" />
        </Step>
        <Step Type="Decide" Name="DueDate &lt; TimeNow" ID="8">
          <Properties>
            <Property Name="DecideType">ConditionBased</Property>
            <Property Name="ConditionOrProbability">SalesOrders[SalesOrders.SOId.RowForKey(ModelEntity.SOId)].DueDate &lt; TimeNow</Property>
          </Properties>
          <Exit Name="True" Type="Primary" NextID="9" />
        </Step>
        <Step Type="Tally" Name="Tardiness" ID="9">
          <Properties>
            <Property Name="TallyStatisticName">
              <Value>Tardiness</Value>
            </Property>
            <Property Name="ValueExpression">TimeNow - SalesOrders[SalesOrders.SOId.RowForKey(ModelEntity.SOId)].DueDate</Property>
          </Properties>
        </Step>
        <Step Type="Tally" Name="Lateness" ID="10">
          <Properties>
            <Property Name="TallyStatisticName">
              <Value>Lateness</Value>
            </Property>
            <Property Name="ValueExpression">TimeNow - SalesOrders[SalesOrders.SOId.RowForKey(ModelEntity.SOId)].DueDate</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="11" />
        </Step>
        <Step Type="Tally" Name="TimeInSystem" ID="11">
          <Properties>
            <Property Name="TallyStatisticName">
              <Value>TimeInSystem</Value>
            </Property>
            <Property Name="ValueExpression">TimeNow - SalesOrders[SalesOrders.SOId.RowForKey(ModelEntity.SOId)].AdjustedReleaseDate</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="8" />
        </Step>
      </Steps>
    </Process>
    <Process Name="MTRVehicle_RunInitialize" BeginStepID="2" Category="MTRVehicle">
      <Properties />
      <Steps>
        <Step Type="Assign" Name="Picture" ID="2">
          <Properties>
            <Property Name="StateVariableName">
              <Value>MTRVehicle.Picture</Value>
            </Property>
            <Property Name="NewValue">Equipment.Picture</Property>
          </Properties>
        </Step>
      </Steps>
    </Process>
    <Process Name="MTRWorker_RunInitialize" BeginStepID="2" Category="MTRVehicle">
      <Properties>
        <Property Name="TokenClassName">CustomToken</Property>
      </Properties>
      <Steps>
        <Step Type="Assign" Name="Picture" ID="2">
          <Properties>
            <Property Name="StateVariableName">
              <Value>MTRWorker.Picture</Value>
            </Property>
            <Property Name="NewValue">Employees.Picture</Property>
          </Properties>
        </Step>
      </Steps>
    </Process>
    <Process Name="MTRVehicle_EnteredNode" BeginStepID="9" Category="MTRVehicle">
      <Properties>
        <Property Name="TokenClassName">CustomToken</Property>
        <Property Name="AllowStepTrace">False</Property>
      </Properties>
      <Steps>
        <Step Type="Decide" Name="ParkToLoadUnload == True &amp;&amp; MTRVehicle.IsParked == False" ID="2">
          <Properties>
            <Property Name="DecideType">ConditionBased</Property>
            <Property Name="ConditionOrProbability">MTRVehicle.ParkToLoadUnload == True &amp;&amp; MTRVehicle.IsParked == False</Property>
          </Properties>
          <Exit Name="True" Type="Primary" NextID="11" />
          <Exit Name="False" Type="Alternate" NextID="10" />
        </Step>
        <Step Type="Decide" Name="CurrentNode == DestinationNode" ID="3">
          <Properties>
            <Property Name="DecideType">ConditionBased</Property>
            <Property Name="ConditionOrProbability">MTRVehicle.CurrentNode == MTRVehicle.DestinationNode</Property>
          </Properties>
          <Exit Name="True" Type="Primary" NextID="12" />
          <Exit Name="False" Type="Alternate" NextID="10" />
        </Step>
        <Step Type="Decide" Name="NumberWaiting &gt; 0" ID="4">
          <Properties>
            <Property Name="DecideType">ConditionBased</Property>
            <Property Name="ConditionOrProbability">MTRVehicle.RideStation.Contents.NumberWaiting &gt; 0</Property>
          </Properties>
          <Exit Name="True" Type="Primary" NextID="7" />
          <Exit Name="False" Type="Alternate" NextID="5" />
        </Step>
        <Step Type="Assign" Name="&quot;NONE&quot; ColorStr" ID="5">
          <Properties>
            <Property Name="StateVariableName">
              <Value>CustomToken.ColorStr</Value>
            </Property>
            <Property Name="NewValue">"NONE"</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="3" />
        </Step>
        <Step Type="Assign" Name="&quot;RED&quot; ColorStr" ID="6">
          <Properties>
            <Property Name="StateVariableName">
              <Value>CustomToken.ColorStr</Value>
            </Property>
            <Property Name="NewValue">"RED"</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="3" />
        </Step>
        <Step Type="Decide" Name="Picture == 0" ID="7">
          <Properties>
            <Property Name="DecideType">ConditionBased</Property>
            <Property Name="ConditionOrProbability">MTRVehicle.RideStation.Contents.FirstItem.ModelEntity.Picture == 0</Property>
          </Properties>
          <Exit Name="True" Type="Primary" NextID="6" />
          <Exit Name="False" Type="Alternate" NextID="8" />
        </Step>
        <Step Type="Assign" Name="&quot;BLUE&quot; ColorStr" ID="8">
          <Properties>
            <Property Name="StateVariableName">
              <Value>CustomToken.ColorStr</Value>
            </Property>
            <Property Name="NewValue">"BLUE"</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="3" />
        </Step>
        <Step Type="Decide" Name="Is RealTime" ID="9">
          <Properties>
            <Property Name="DecideType">ConditionBased</Property>
            <Property Name="ConditionOrProbability">ModelRunMode == List.ModelRunModeList.RealTime</Property>
          </Properties>
          <Exit Name="True" Type="Primary" NextID="4" />
        </Step>
        <Step Type="Assign" Name="GO Command" ID="10">
          <Properties>
            <Property Name="StateVariableName">
              <Value>CustomToken.Command</Value>
            </Property>
            <Property Name="NewValue">"GO"</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="13" />
        </Step>
        <Step Type="Assign" Name="STOP Command" ID="11">
          <Properties>
            <Property Name="StateVariableName">
              <Value>CustomToken.Command</Value>
            </Property>
            <Property Name="NewValue">"STOP"</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="13" />
        </Step>
        <Step Type="Decide" Name="NumberWaiting &gt; 0" ID="12">
          <Properties>
            <Property Name="DecideType">ConditionBased</Property>
            <Property Name="ConditionOrProbability">MTRVehicle.RideStation.Contents.NumberWaiting &gt; 0</Property>
          </Properties>
          <Exit Name="True" Type="Primary" NextID="2" />
          <Exit Name="False" Type="Alternate" NextID="11" />
        </Step>
        <Step Type="Assign" Name="JSONString Command" ID="13">
          <Properties>
            <Property Name="StateVariableName">
              <Value>CustomToken.JSONStringCommandTemplate</Value>
            </Property>
            <Property Name="NewValue">String.RegEx.Replace(CustomToken.JSONStringCommandTemplate, "COMMANDTEMPLATE", CustomToken.Command)</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="14" />
        </Step>
        <Step Type="Assign" Name="JSONString Color" ID="14">
          <Properties>
            <Property Name="StateVariableName">
              <Value>CustomToken.JSONStringCommandTemplate</Value>
            </Property>
            <Property Name="NewValue">String.RegEx.Replace(CustomToken.JSONStringCommandTemplate, "COLORTEMPLATE", CustomToken.ColorStr)</Property>
          </Properties>
        </Step>
      </Steps>
    </Process>
    <Process Name="MTRVehicle_Unloaded" BeginStepID="3" Category="MTRVehicle">
      <Properties>
        <Property Name="TokenClassName">CustomToken</Property>
        <Property Name="AllowStepTrace">False</Property>
      </Properties>
      <Steps>
        <Step Type="Assign" Name="JSONString Command" ID="2">
          <Properties>
            <Property Name="StateVariableName">
              <Value>CustomToken.JSONStringCommandTemplate</Value>
            </Property>
            <Property Name="NewValue">String.RegEx.Replace(CustomToken.JSONStringCommandTemplate, "COMMANDTEMPLATE", CustomToken.Command)</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="6" />
        </Step>
        <Step Type="Decide" Name="Is RealTime" ID="3">
          <Properties>
            <Property Name="DecideType">ConditionBased</Property>
            <Property Name="ConditionOrProbability">ModelRunMode == List.ModelRunModeList.RealTime</Property>
          </Properties>
          <Exit Name="True" Type="Primary" NextID="5" />
        </Step>
        <Step Type="Assign" Name="STOP Command" ID="4">
          <Properties>
            <Property Name="StateVariableName">
              <Value>CustomToken.Command</Value>
            </Property>
            <Property Name="NewValue">"STOP"</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="2" />
        </Step>
        <Step Type="Assign" Name="&quot;NONE&quot; ColorStr" ID="5">
          <Properties>
            <Property Name="StateVariableName">
              <Value>CustomToken.ColorStr</Value>
            </Property>
            <Property Name="NewValue">"NONE"</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="4" />
        </Step>
        <Step Type="Assign" Name="JSONString Color" ID="6">
          <Properties>
            <Property Name="StateVariableName">
              <Value>CustomToken.JSONStringCommandTemplate</Value>
            </Property>
            <Property Name="NewValue">String.RegEx.Replace(CustomToken.JSONStringCommandTemplate, "COLORTEMPLATE", CustomToken.ColorStr)</Property>
          </Properties>
        </Step>
      </Steps>
    </Process>
    <Process Name="AllocateMaterialRealTime" BeginStepID="35" Category="Allocate">
      <Properties>
        <Property Name="TokenClassName">CustomToken</Property>
        <Property Name="AllowStepTrace">False</Property>
      </Properties>
      <Steps>
        <Step Type="Assign" Name="SOId" ID="2">
          <Properties>
            <Property Name="StateVariableName">
              <Value>CustomToken.SOId</Value>
            </Property>
            <Property Name="NewValue">SalesOrdersRealTime.SOId</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="41" />
        </Step>
        <Step Type="Assign" Name="MaterialName" ID="3">
          <Properties>
            <Property Name="StateVariableName">
              <Value>CustomToken.Material</Value>
            </Property>
            <Property Name="NewValue">Materials[Materials.MaterialName.RowForKey(SalesOrdersRealTime.MaterialName )].MaterialName</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="25" />
        </Step>
        <Step Type="Assign" Name="Quantity" ID="4">
          <Properties>
            <Property Name="StateVariableName">
              <Value>CustomToken.Quantity</Value>
            </Property>
            <Property Name="NewValue">SalesOrdersRealTime.Quantity</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="15" />
        </Step>
        <Step Type="Search" Name="ManufacturingOrders" ID="5">
          <Properties>
            <Property Name="CollectionType">TableRows</Property>
            <Property Name="TableName">ManufacturingOrders</Property>
            <Property Name="SearchRelatedRowsOnly">False</Property>
            <Property Name="MatchCondition">ManufacturingOrders.SOEntityID == CustomToken.CurrentEntity.ID</Property>
            <Property Name="Limit">Infinity</Property>
          </Properties>
          <Exit Name="Found" Type="Alternate" NextID="6" />
        </Step>
        <Step Type="Create" Name="MFGOrder" ID="6">
          <Properties>
            <Property Name="EntityType">ManufacturingOrderEntity</Property>
          </Properties>
          <Exit Name="Created" Type="Alternate" NextID="29" />
        </Step>
        <Step Type="Transfer" Name="ParallelRouteController" ID="7">
          <Properties>
            <Property Name="NodeName">Input@OperationController</Property>
          </Properties>
        </Step>
        <Step Type="Decide" Name="Is WIP" ID="8">
          <Properties>
            <Property Name="DecideType">ConditionBased</Property>
            <Property Name="ConditionOrProbability">SalesOrdersRealTime.OrderStatus == List.OrderStatus.WIP</Property>
          </Properties>
          <Exit Name="True" Type="Primary" NextID="10" />
          <Exit Name="False" Type="Alternate" NextID="21" />
        </Step>
        <Step Type="Search" Name="WorkInProcess" ID="9">
          <Properties>
            <Property Name="CollectionType">TableRows</Property>
            <Property Name="TableName">WorkInProcess</Property>
            <Property Name="MatchCondition">WorkInProcess.MOId == CustomToken.MOId</Property>
            <Property Name="SaveIndexFound">
              <Value>CustomToken.RowNumber</Value>
            </Property>
          </Properties>
          <Exit Name="Original" Type="Primary" NextID="12" />
        </Step>
        <Step Type="Assign" Name="MOId" ID="10">
          <Properties>
            <Property Name="StateVariableName">
              <Value>CustomToken.MOId</Value>
            </Property>
            <Property Name="NewValue">ManufacturingOrders.MOId</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="9" />
        </Step>
        <Step Type="SetRow" Name="WorkInProcess" ID="11">
          <Properties>
            <Property Name="TableName">WorkInProcess</Property>
            <Property Name="RowNumber">CustomToken.RowNumber</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="13" />
        </Step>
        <Step Type="Decide" Name="RowNumber" ID="12">
          <Properties>
            <Property Name="DecideType">ConditionBased</Property>
            <Property Name="ConditionOrProbability">CustomToken.RowNumber &gt; 0</Property>
          </Properties>
          <Exit Name="True" Type="Primary" NextID="14" />
          <Exit Name="False" Type="Alternate" NextID="21" />
        </Step>
        <Step Type="SetRow" Name="Routings" ID="13">
          <Properties>
            <Property Name="TableName">Operations</Property>
            <Property Name="RowNumber">WorkInProcess.CurrentSequenceNumber / 10 - 1</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="21" />
        </Step>
        <Step Type="Assign" Name="T HasWIP" ID="14">
          <Properties>
            <Property Name="StateVariableName">
              <Value>ManufacturingOrders.HasWIP</Value>
            </Property>
            <Property Name="NewValue">True</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="11" />
        </Step>
        <Step Type="Create" Name="Token" ID="15">
          <Properties>
            <Property Name="CreateType">NewToken</Property>
            <Property Name="NumberToCreate">Math.Ceiling( CustomToken.Quantity )</Property>
          </Properties>
          <Exit Name="Original" Type="Primary" NextID="37" />
          <Exit Name="Created" Type="Alternate" NextID="24" />
        </Step>
        <Step Type="SetRow" Name="InventoryLocations" ID="16">
          <Properties>
            <Property Name="ObjectType">Token</Property>
            <Property Name="TableName">InventoryLocations</Property>
            <Property Name="RowNumber">CustomToken.RowNumber</Property>
            <Property Name="ClearAllTableReferencesFirst">True</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="43" />
        </Step>
        <Step Type="Assign" Name="RowNumber" ID="17">
          <Properties>
            <Property Name="StateVariableName">
              <Value>CustomToken.RowNumber</Value>
            </Property>
            <Property Name="NewValue">SalesOrdersRealTime.RowNumber.RowForKey(CustomToken.CurrentEntity.ModelEntity.RowNumber)</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="18" />
        </Step>
        <Step Type="SetRow" Name="SalesOrdersRealTime" ID="18">
          <Properties>
            <Property Name="ObjectType">Token</Property>
            <Property Name="TableName">SalesOrdersRealTime</Property>
            <Property Name="RowNumber">CustomToken.RowNumber</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="27" />
        </Step>
        <Step Type="AddRow" Name="ManufacturingOrders" ID="19">
          <Properties>
            <Property Name="ObjectType">Token</Property>
            <Property Name="TableName">ManufacturingOrders</Property>
            <Property Name="KeyColumnValue">CustomToken.SOId + " - " + CustomToken.Material.Name + "- BatchNumber:" + String.FromReal(ModelEntity.MORowCount) </Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="20" />
        </Step>
        <Step Type="Assign" Name="SOId" ID="20">
          <Properties>
            <Property Name="StateVariableName">
              <Value>ManufacturingOrders.SOId</Value>
            </Property>
            <Property Name="NewValue">SalesOrdersRealTime.SOId</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="38" />
        </Step>
        <Step Type="Assign" Name="MOIdBOMLevel" ID="21">
          <Properties>
            <Property Name="StateVariableName">
              <Value>ModelEntity.MOIdBOMLevel</Value>
            </Property>
            <Property Name="NewValue">ManufacturingOrders.MOId + " - " + String.FromReal(ManufacturingOrders.BOMLevel) </Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="7" />
        </Step>
        <Step Type="Assign" Name="DisplayString" ID="22">
          <Properties>
            <Property Name="StateVariableName">
              <Value>ModelEntity.DisplayString</Value>
            </Property>
            <Property Name="NewValue">ManufacturingOrders.MOId</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="23" />
        </Step>
        <Step Type="Assign" Name="DueDate" ID="23">
          <Properties>
            <Property Name="StateVariableName">
              <Value>ModelEntity.DueDate</Value>
            </Property>
            <Property Name="NewValue">CustomToken.CurrentEntity.ModelEntity.DueDate</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="32" />
        </Step>
        <Step Type="Search" Name="InventoryLocations" ID="24">
          <Properties>
            <Property Name="CollectionType">TableRows</Property>
            <Property Name="TableName">InventoryLocations</Property>
            <Property Name="SearchRelatedRowsOnly">False</Property>
            <Property Name="MatchCondition">InventoryLocations.MaterialName == CustomToken.Material &amp;&amp; InventoryLocations.SiteObjectName == CustomToken.Resource</Property>
            <Property Name="SaveIndexFound">
              <Value>CustomToken.RowNumber</Value>
            </Property>
          </Properties>
          <Exit Name="Original" Type="Primary" NextID="26" />
        </Step>
        <Step Type="Assign" Name="Resource" ID="25">
          <Properties>
            <Property Name="StateVariableName">
              <Value>CustomToken.Resource</Value>
            </Property>
            <Property Name="NewValue">Resources[Resources.ResourceName.RowForKey(SalesOrdersRealTime.SiteObjectName )].ResourceName</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="4" />
        </Step>
        <Step Type="Decide" Name="RowNumber &gt; 0" ID="26">
          <Properties>
            <Property Name="DecideType">ConditionBased</Property>
            <Property Name="ConditionOrProbability">CustomToken.RowNumber &gt; 0</Property>
          </Properties>
          <Exit Name="True" Type="Primary" NextID="16" />
        </Step>
        <Step Type="Assign" Name="ManufacturingOrder Row Count" ID="27">
          <Properties>
            <Property Name="StateVariableName">
              <Value>ModelEntity.MORowCount</Value>
            </Property>
            <Property Name="NewValue">ModelEntity.MORowCount +1</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="33" />
        </Step>
        <Step Type="Assign" Name="MOId" ID="28">
          <Properties>
            <Property Name="StateVariableName">
              <Value>ModelEntity.MOId</Value>
            </Property>
            <Property Name="NewValue">ManufacturingOrders.MOId</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="22" />
        </Step>
        <Step Type="Assign" Name="T FromManufacturingOrder" ID="29">
          <Properties>
            <Property Name="StateVariableName">
              <Value>ModelEntity.FromManufacturingOrder</Value>
            </Property>
            <Property Name="NewValue">True</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="42" />
        </Step>
        <Step Type="Assign" Name="RowNumber" ID="30">
          <Properties>
            <Property Name="StateVariableName">
              <Value>ManufacturingOrders.RowNumber</Value>
            </Property>
            <Property Name="NewValue">MONumber</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="36" />
        </Step>
        <Step Type="Assign" Name="MONumber++" ID="31">
          <Properties>
            <Property Name="StateVariableName">
              <Value>MONumber</Value>
            </Property>
            <Property Name="NewValue">MONumber + 1</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="30" />
        </Step>
        <Step Type="Assign" Name="Material" ID="32">
          <Properties>
            <Property Name="StateVariableName">
              <Value>ModelEntity.CurrentMaterial</Value>
            </Property>
            <Property Name="NewValue">InventoryLocations.MaterialName</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="39" />
        </Step>
        <Step Type="Decide" Name="T RandomnessDisable" ID="33">
          <Properties>
            <Property Name="DecideType">ConditionBased</Property>
            <Property Name="ConditionOrProbability">Run.RandomnessDisabled == True &amp;&amp; ModelRunMode == List.ModelRunModeList.Scheduling</Property>
          </Properties>
          <Exit Name="True" Type="Primary" NextID="19" />
          <Exit Name="False" Type="Alternate" NextID="34" />
        </Step>
        <Step Type="AddRow" Name="ManufacturingOrders" ID="34">
          <Properties>
            <Property Name="ObjectType">Token</Property>
            <Property Name="TableName">ManufacturingOrders</Property>
            <Property Name="KeyColumnValue">CustomToken.SOId + " - " + CustomToken.Material.Name + "- BatchNumber:" + String.FromReal(ModelEntity.MORowCount) + "- Random SO Entity ID:" + String.FromReal( CustomToken.CurrentEntity.ID )</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="20" />
        </Step>
        <Step Type="Assign" Name="CurrentEntity" ID="35">
          <Properties>
            <Property Name="StateVariableName">
              <Value>CustomToken.CurrentEntity</Value>
            </Property>
            <Property Name="NewValue">ModelEntity</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="2" />
        </Step>
        <Step Type="Assign" Name="SOEntityID" ID="36">
          <Properties>
            <Property Name="StateVariableName">
              <Value>ManufacturingOrders.SOEntityID</Value>
            </Property>
            <Property Name="NewValue">CustomToken.CurrentEntity.ID</Property>
          </Properties>
        </Step>
        <Step Type="Assign" Name="SOEntityID" ID="37">
          <Properties>
            <Property Name="StateVariableName">
              <Value>SalesOrdersRealTime.SOEntityID</Value>
            </Property>
            <Property Name="NewValue">CustomToken.CurrentEntity.ID</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="5" />
        </Step>
        <Step Type="Assign" Name="Quantity" ID="38">
          <Properties>
            <Property Name="StateVariableName">
              <Value>ManufacturingOrders.Quantity</Value>
            </Property>
            <Property Name="NewValue">CustomToken.Quantity</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="31" />
        </Step>
        <Step Type="Assign" Name="Material Class" ID="39">
          <Properties>
            <Property Name="StateVariableName">
              <Value>ModelEntity.MaterialClass</Value>
            </Property>
            <Property Name="NewValue">Materials[Materials.MaterialName.RowForKey(ModelEntity.CurrentMaterial.Name )].MaterialClass</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="8" />
        </Step>
        <Step Type="Assign" Name="SOId" ID="40">
          <Properties>
            <Property Name="StateVariableName">
              <Value>ModelEntity.SOId</Value>
            </Property>
            <Property Name="NewValue">ManufacturingOrders.SOId</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="28" />
        </Step>
        <Step Type="Assign" Name="RowNumber" ID="41">
          <Properties>
            <Property Name="StateVariableName">
              <Value>CustomToken.RowNumber</Value>
            </Property>
            <Property Name="NewValue">ModelEntity.RowNumber</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="3" />
        </Step>
        <Step Type="Assign" Name="RowNumber" ID="42">
          <Properties>
            <Property Name="StateVariableName">
              <Value>ModelEntity.RowNumber</Value>
            </Property>
            <Property Name="NewValue">ManufacturingOrders.RowNumber</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="40" />
        </Step>
        <Step Type="Assign" Name="ProcessName" Color="f79646" ID="43">
          <Properties>
            <Property Name="StateVariableName">
              <Value>CustomToken.ProcessName</Value>
            </Property>
            <Property Name="NewValue">InventoryLocationsToProcesses[1].ProcessName</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="44" />
        </Step>
        <Step Type="SetRow" Name="Processes" ID="44">
          <Properties>
            <Property Name="ObjectType">Token</Property>
            <Property Name="TableName">Processes</Property>
            <Property Name="RowNumber">Processes.ProcessName.RowForKey(CustomToken.ProcessName )</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="17" />
        </Step>
      </Steps>
    </Process>
    <Process Name="OnRunEndingProcess" BeginStepID="2" Category="OnRun">
      <Properties>
        <Property Name="TokenClassName">CustomToken</Property>
      </Properties>
      <Steps>
        <Step Type="Assign" Name="TotalIncomplete" ID="2">
          <Properties>
            <Property Name="StateVariableName">
              <Value>TotalIncomplete</Value>
            </Property>
            <Property Name="NewValue">TotalStarted - TotalCompleted</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="3" />
        </Step>
        <Step Type="Decide" Name="Scheduling Mode" ID="3">
          <Properties>
            <Property Name="DecideType">ConditionBased</Property>
            <Property Name="ConditionOrProbability">ModelRunMode == List.ModelRunModeList.Scheduling</Property>
          </Properties>
          <Exit Name="True" Type="Primary" NextID="6" />
        </Step>
        <Step Type="Assign" Name="ROW JSONStringDispatchList" ID="4">
          <Properties>
            <Property Name="StateVariableName">
              <Value>JSONStringDispatchList</Value>
            </Property>
            <Property Name="NewValue">JSONStringDispatchList + CustomToken.JSONStringDispatchListRow</Property>
          </Properties>
        </Step>
        <Step Type="Assign" Name="BEGIN JSONStringDispatchList" ID="5">
          <Properties>
            <Property Name="StateVariableName">
              <Value>JSONStringDispatchList</Value>
            </Property>
            <Property Name="NewValue">"{ ""d"": ["</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="7" />
        </Step>
        <Step Type="Decide" Name="ARC &gt; 0" ID="6">
          <Properties>
            <Property Name="DecideType">ConditionBased</Property>
            <Property Name="ConditionOrProbability">SalesOrdersOutput.AvailableRowCount &gt; 0</Property>
          </Properties>
          <Exit Name="True" Type="Primary" NextID="5" />
        </Step>
        <Step Type="Search" Name="SalesOrdersOutput" ID="7">
          <Properties>
            <Property Name="CollectionType">TableRows</Property>
            <Property Name="TableName">SalesOrdersOutput</Property>
            <Property Name="Limit">Infinity</Property>
          </Properties>
          <Exit Name="Original" Type="Primary" NextID="14" />
          <Exit Name="Found" Type="Alternate" NextID="13" />
        </Step>
        <Step Type="Decide" Name="SOORowNumber &gt; 0" ID="8">
          <Properties>
            <Property Name="DecideType">ConditionBased</Property>
            <Property Name="ConditionOrProbability">SOORowNumber &gt; 1</Property>
          </Properties>
          <Exit Name="True" Type="Primary" NextID="9" />
          <Exit Name="False" Type="Alternate" NextID="11" />
        </Step>
        <Step Type="Assign" Name="COMMA JSONStringDispatchList" ID="9">
          <Properties>
            <Property Name="StateVariableName">
              <Value>JSONStringDispatchList</Value>
            </Property>
            <Property Name="NewValue">JSONStringDispatchList + ","</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="11" />
        </Step>
        <Step Type="Assign" Name="SOID JSONStringDispatchList" ID="10">
          <Properties>
            <Property Name="StateVariableName">
              <Value>CustomToken.JSONStringDispatchListRow</Value>
            </Property>
            <Property Name="NewValue">String.RegEx.Replace(CustomToken.JSONStringDispatchListRow, "SOIDTEMPLATE", SalesOrdersOutput.SOId )</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="12" />
        </Step>
        <Step Type="Assign" Name="JSONSDLRow" ID="11">
          <Properties>
            <Property Name="StateVariableName">
              <Value>CustomToken.JSONStringDispatchListRow</Value>
            </Property>
            <Property Name="NewValue">CustomToken.JSONStringDispatchListRowTemplate</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="10" />
        </Step>
        <Step Type="Assign" Name="CUSTOMER JSONStringDispatchList" ID="12">
          <Properties>
            <Property Name="StateVariableName">
              <Value>CustomToken.JSONStringDispatchListRow</Value>
            </Property>
            <Property Name="NewValue">String.RegEx.Replace(CustomToken.JSONStringDispatchListRow, "CUSTOMERTEMPLATE", SalesOrdersOutput.Customer )</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="15" />
        </Step>
        <Step Type="Assign" Name="SOORowNumber++" ID="13">
          <Properties>
            <Property Name="StateVariableName">
              <Value>SOORowNumber</Value>
            </Property>
            <Property Name="NewValue">SOORowNumber + 1</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="8" />
        </Step>
        <Step Type="Assign" Name="END JSONStringDispatchList" ID="14">
          <Properties>
            <Property Name="StateVariableName">
              <Value>JSONStringDispatchList</Value>
            </Property>
            <Property Name="NewValue">JSONStringDispatchList + "]}"</Property>
          </Properties>
        </Step>
        <Step Type="Assign" Name="MATERIALNAME JSONStringDispatchList" ID="15">
          <Properties>
            <Property Name="StateVariableName">
              <Value>CustomToken.JSONStringDispatchListRow</Value>
            </Property>
            <Property Name="NewValue">String.RegEx.Replace(CustomToken.JSONStringDispatchListRow, "MATERIALNAMETEMPLATE", SalesOrdersOutput.MaterialName )</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="16" />
        </Step>
        <Step Type="Assign" Name="SITEOBJECTNAME JSONStringDispatchList" ID="16">
          <Properties>
            <Property Name="StateVariableName">
              <Value>CustomToken.JSONStringDispatchListRow</Value>
            </Property>
            <Property Name="NewValue">String.RegEx.Replace(CustomToken.JSONStringDispatchListRow, "SITEOBJECTNAMETEMPLATE", SalesOrdersOutput.SiteObjectName )</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="17" />
        </Step>
        <Step Type="Assign" Name="RELEASEDATE JSONStringDispatchList" ID="17">
          <Properties>
            <Property Name="StateVariableName">
              <Value>CustomToken.JSONStringDispatchListRow</Value>
            </Property>
            <Property Name="NewValue">String.RegEx.Replace(CustomToken.JSONStringDispatchListRow, "RELEASEDATETEMPLATE", DateTime.ToString( SalesOrdersOutput.ReleaseDate) )</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="18" />
        </Step>
        <Step Type="Assign" Name="DUEDATE JSONStringDispatchList" ID="18">
          <Properties>
            <Property Name="StateVariableName">
              <Value>CustomToken.JSONStringDispatchListRow</Value>
            </Property>
            <Property Name="NewValue">String.RegEx.Replace(CustomToken.JSONStringDispatchListRow, "DUEDATETEMPLATE", DateTime.ToString( SalesOrdersOutput.DueDate ) )</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="19" />
        </Step>
        <Step Type="Assign" Name="PRIORITY JSONStringDispatchList" ID="19">
          <Properties>
            <Property Name="StateVariableName">
              <Value>CustomToken.JSONStringDispatchListRow</Value>
            </Property>
            <Property Name="NewValue">String.RegEx.Replace(CustomToken.JSONStringDispatchListRow, "PRIORITYTEMPLATE", String.FromReal(SalesOrdersOutput.Priority) )</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="20" />
        </Step>
        <Step Type="Assign" Name="QUANTITY JSONStringDispatchList" ID="20">
          <Properties>
            <Property Name="StateVariableName">
              <Value>CustomToken.JSONStringDispatchListRow</Value>
            </Property>
            <Property Name="NewValue">String.RegEx.Replace(CustomToken.JSONStringDispatchListRow, "QUANTITYTEMPLATE", String.FromReal(SalesOrdersOutput.Quantity))</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="4" />
        </Step>
      </Steps>
    </Process>
    <Process Name="OnRunInitializedProcess" BeginStepID="6" Category="OnRun" Description="Initialize ManufacturingOrders table, then iterate through each Materials row and its associated MaterialLots row to sum total quantity involved. If it’s a ManufacturingMaterial then create that quantity of MfgOrders and send to Stock. Otherwise create that quantity of PurchaseOrders and send to Receiving.">
      <Properties>
        <Property Name="TokenClassName">CustomToken</Property>
      </Properties>
      <Steps>
        <Step Type="Search" Name="SalesOrders" Description="Search all rows in SalesOrders table to add row number to each row." ID="2">
          <Properties>
            <Property Name="CollectionType">TableRows</Property>
            <Property Name="EntityType">DefaultEntity</Property>
            <Property Name="TableName">SalesOrders</Property>
            <Property Name="Limit">Infinity</Property>
            <Property Name="CopyOverTableRowReferences">False</Property>
            <Property Name="SetTableRowConflictResolution">Abort</Property>
          </Properties>
          <Exit Name="Original" Type="Primary" NextID="19" />
          <Exit Name="Found" Type="Alternate" NextID="3" />
        </Step>
        <Step Type="Assign" Name="CurrentRowNumber" ID="3">
          <Properties>
            <Property Name="StateVariableName">
              <Value>CurrentRowNumber</Value>
            </Property>
            <Property Name="NewValue">CurrentRowNumber + 1</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="4" />
        </Step>
        <Step Type="Assign" Name="ManufacturingOrders.RowNumber" ID="4">
          <Properties>
            <Property Name="StateVariableName">
              <Value>SalesOrders.RowNumber</Value>
            </Property>
            <Property Name="NewValue">CurrentRowNumber</Property>
          </Properties>
        </Step>
        <Step Type="Execute" Name="PopulateImmediateSuccessorTasksTable" ID="5">
          <Properties>
            <Property Name="ProcessName">
              <Value>PopulateImmediateSuccessorSequences</Value>
            </Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="12" />
        </Step>
        <Step Type="Assign" Name="PrevDateTime" ID="6">
          <Properties>
            <Property Name="StateVariableName">
              <Value>PrevDateTime</Value>
            </Property>
            <Property Name="NewValue">DateTime.SystemNow</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="5" />
        </Step>
        <Step Type="Search" Name="Materials" ID="7">
          <Properties>
            <Property Name="CollectionType">TableRows</Property>
            <Property Name="EntityType">DefaultEntity</Property>
            <Property Name="TableName">Materials</Property>
            <Property Name="Limit">Infinity</Property>
            <Property Name="SetTableRowConflictResolution">Abort</Property>
          </Properties>
          <Exit Name="Original" Type="Primary" NextID="2" />
          <Exit Name="Found" Type="Alternate" NextID="8" />
        </Step>
        <Step Type="Search" Name="PressCapabilityAndTimes" ID="8">
          <Properties>
            <Property Name="CollectionType">TableRows</Property>
            <Property Name="EntityType">DefaultEntity</Property>
            <Property Name="TableName">WorkCellCapabilities</Property>
            <Property Name="Limit">Infinity</Property>
            <Property Name="SetTableRowConflictResolution">Abort</Property>
          </Properties>
          <Exit Name="Found" Type="Alternate" NextID="9" />
        </Step>
        <Step Type="Decide" Name="Len == 0" ID="9">
          <Properties>
            <Property Name="DecideType">ConditionBased</Property>
            <Property Name="ConditionOrProbability">String.Length( Materials.ValidWorkCellResources ) == 0</Property>
          </Properties>
          <Exit Name="True" Type="Primary" NextID="10" />
          <Exit Name="False" Type="Alternate" NextID="11" />
        </Step>
        <Step Type="Assign" Name="ValidPressResources" ID="10">
          <Properties>
            <Property Name="StateVariableName">
              <Value>Materials.ValidWorkCellResources</Value>
            </Property>
            <Property Name="NewValue">WorkCellCapabilities.WorkCell.Object.Name</Property>
          </Properties>
        </Step>
        <Step Type="Assign" Name="ValidPressResources" ID="11">
          <Properties>
            <Property Name="StateVariableName">
              <Value>Materials.ValidWorkCellResources</Value>
            </Property>
            <Property Name="NewValue">Materials.ValidWorkCellResources + "|" + WorkCellCapabilities.WorkCell.Object.Name</Property>
          </Properties>
        </Step>
        <Step Type="Search" Name="Resources" ID="12">
          <Properties>
            <Property Name="CollectionType">TableRows</Property>
            <Property Name="EntityType">DefaultEntity</Property>
            <Property Name="TableName">Resources</Property>
            <Property Name="Limit">Infinity</Property>
            <Property Name="SetTableRowConflictResolution">Abort</Property>
          </Properties>
          <Exit Name="Original" Type="Primary" NextID="15" />
          <Exit Name="Found" Type="Alternate" NextID="13" />
        </Step>
        <Step Type="Decide" Name="Is.MTRServer" ID="13">
          <Properties>
            <Property Name="DecideType">ConditionBased</Property>
            <Property Name="ConditionOrProbability">Resources.ResourceName.Is.MTRServer == True</Property>
          </Properties>
          <Exit Name="True" Type="Primary" NextID="14" />
        </Step>
        <Step Type="Assign" Name="RoutingResource" ID="14">
          <Properties>
            <Property Name="StateVariableName">
              <Value>Resources.ResourceName.MTRServer.RoutingResource</Value>
            </Property>
            <Property Name="NewValue">Resources.ResourceName</Property>
          </Properties>
        </Step>
        <Step Type="Search" Name="Resources" ID="15">
          <Properties>
            <Property Name="CollectionType">TableRows</Property>
            <Property Name="EntityType">DefaultEntity</Property>
            <Property Name="TableName">RoutingDestinations</Property>
            <Property Name="Limit">Infinity</Property>
            <Property Name="SetTableRowConflictResolution">Abort</Property>
          </Properties>
          <Exit Name="Original" Type="Primary" NextID="7" />
          <Exit Name="Found" Type="Alternate" NextID="18" />
        </Step>
        <Step Type="Decide" Name="Is.MTRServer" ID="16">
          <Properties>
            <Property Name="DecideType">ConditionBased</Property>
            <Property Name="ConditionOrProbability">RoutingDestinations.Node.Node.AssociatedObject.Is.MTRServer == True</Property>
          </Properties>
          <Exit Name="True" Type="Primary" NextID="17" />
        </Step>
        <Step Type="Assign" Name="RoutingResource" ID="17">
          <Properties>
            <Property Name="StateVariableName">
              <Value>RoutingDestinations.Node.Node.AssociatedObject.MTRServer.RoutingResource</Value>
            </Property>
            <Property Name="NewValue">RoutingDestinations.ResourceName</Property>
          </Properties>
        </Step>
        <Step Type="Decide" Name="AssociatedObject != Nothing" ID="18">
          <Properties>
            <Property Name="DecideType">ConditionBased</Property>
            <Property Name="ConditionOrProbability">RoutingDestinations.Node.Node.AssociatedObject != Nothing</Property>
          </Properties>
          <Exit Name="True" Type="Primary" NextID="16" />
        </Step>
        <Step Type="Decide" Name="Realtime" ID="19">
          <Properties>
            <Property Name="DecideType">ConditionBased</Property>
            <Property Name="ConditionOrProbability">ModelRunMode == List.ModelRunModeList.RealTime</Property>
          </Properties>
          <Exit Name="True" Type="Primary" NextID="26" />
        </Step>
        <Step Type="Assign" Name="DelaySeconds" ID="20">
          <Properties>
            <Property Name="StateVariableName">
              <Value>DelaySeconds</Value>
            </Property>
            <Property Name="NewValue">3600 * (TimeNow - DateTime.SystemNow)</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="21" />
        </Step>
        <Step Type="Decide" Name="DelaySeconds &gt; 0" ID="21">
          <Properties>
            <Property Name="DecideType">ConditionBased</Property>
            <Property Name="ConditionOrProbability">DelaySeconds &gt; 0</Property>
          </Properties>
          <Exit Name="True" Type="Primary" NextID="22" />
          <Exit Name="False" Type="Alternate" NextID="23" />
        </Step>
        <Step Type="0ed90338-8a10-417e-9731-b05adf18f3da" ReadableType="RealtimeDelay" Name="Seconds" ID="22">
          <Properties>
            <Property Name="Seconds">DelaySeconds</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="23" />
        </Step>
        <Step Type="Delay" Name="0.1 s" ID="23">
          <Properties>
            <Property Name="DelayTime" Units="Seconds">0.1</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="20" />
        </Step>
        <Step Type="Assign" Name="BatteryCharge" ID="24">
          <Properties>
            <Property Name="StateVariableName">
              <Value>InitialBatteryCharge.BatteryCharge</Value>
            </Property>
            <Property Name="NewValue">String.ToReal( InitialResourceTagValues[1].v )</Property>
          </Properties>
          <Exit Name="Exit" Type="Primary" NextID="25" />
        </Step>
        <Step Type="Assign" Name="BatteryCharge" ID="25">
          <Properties>
            <Property Name="StateVariableName">
              <Value>CustomToken.BatteryCharge</Value>
            </Property>
            <Property Name="NewValue">InitialBatteryCharge.BatteryCharge</Property>
          </Properties>
        </Step>
        <Step Type="Search" Name="InitialBatteryCharge" Description="Search all rows in SalesOrders table to add row number to each row." ID="26">
          <Properties>
            <Property Name="CollectionType">TableRows</Property>
            <Property Name="EntityType">DefaultEntity</Property>
            <Property Name="TableName">InitialBatteryCharge</Property>
            <Property Name="CopyOverTableRowReferences">False</Property>
            <Property Name="SetTableRowConflictResolution">Abort</Property>
          </Properties>
          <Exit Name="Original" Type="Primary" NextID="20" />
          <Exit Name="Found" Type="Alternate" NextID="24" />
        </Step>
      </Steps>
    </Process>
  </Processes>
  <Objects>
    <Fixed Name="SOSource_Deterministic" Type="Source" Location="-99 5.55111512312578E-16 -9" YawDeg="90" Size="1.49711911473274 1.02344522701085 0.999999706897704" Scope="Public">
      <AssociatedNodes>
        <Node Name="Output@SOSource_Deterministic" Type="TransferNode" Location="-97.75 5.55111512312578E-16 -9" YawDeg="90" Scope="Public" RotationChangesLocation="False">
          <Properties>
            <Property Name="InitialCost" Units="USD">0.0</Property>
            <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
            <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="DynamicSelectionRule">
              <Value>None</Value>
            </Property>
            <Property Name="RouteRequestDynamicSelectionRule">
              <Value>None</Value>
            </Property>
          </Properties>
          <Graphics EditsLocked="True" ExternallyVisible="True" />
        </Node>
      </AssociatedNodes>
      <Properties>
        <Property Name="InitialCost" Units="USD">0.0</Property>
        <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
        <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="DynamicSelectionRule">
          <Value>None</Value>
        </Property>
        <Property Name="EntityType">SalesOrderEntity</Property>
        <Property Name="ArrivalMode">Arrival Table</Property>
        <Property Name="ArrivalTimeProperty">SalesOrders.AdjustedReleaseDate</Property>
        <Property Name="EntitiesPerArrival">ModelRunMode == List.ModelRunModeList.Scheduling &amp;&amp; SalesOrders.Enabled &amp;&amp; (Run.RandomnessDisabled == True || Run.ScenarioName == "Analysis" || AlwaysDeterministicSource == True)</Property>
        <Property Name="MaximumArrivals">MaximumArrivals</Property>
        <Property Name="AssignmentsBeforeExiting">
          <Rows>
            <Properties>
              <Property Name="AssignmentsBeforeExitingStateVariableName">
                <Value>TotalStarted</Value>
              </Property>
              <Property Name="AssignmentsBeforeExitingNewValue">TotalStarted + 1</Property>
            </Properties>
            <Properties>
              <Property Name="AssignmentsBeforeExitingStateVariableName">
                <Value>ModelEntity.DisplayString</Value>
              </Property>
              <Property Name="AssignmentsBeforeExitingNewValue">SalesOrders.SOId</Property>
            </Properties>
            <Properties>
              <Property Name="AssignmentsBeforeExitingStateVariableName">
                <Value>ModelEntity.DueDate</Value>
              </Property>
              <Property Name="AssignmentsBeforeExitingNewValue">SalesOrders.DueDate</Property>
            </Properties>
            <Properties>
              <Property Name="AssignmentsBeforeExitingStateVariableName">
                <Value>ModelEntity.Priority</Value>
              </Property>
              <Property Name="AssignmentsBeforeExitingNewValue">SalesOrders.Priority</Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="TableRowReferenceOnCreatedEntityTableName">Operations</Property>
        <Property Name="TableRowReferenceOnCreatedEntityRowNumber">1</Property>
        <Property Name="ExitedAddOnProcess">
          <Value>SOSource_Deterministic_Exited</Value>
        </Property>
        <Property Name="CapitalCost" Units="USD">0.0</Property>
        <Property Name="OutputBufferCostPerUse" Units="USD">0.0</Property>
        <Property Name="OutputBufferHoldingCostRate" Units="USD per Hour">0.0</Property>
      </Properties>
      <Graphics EditsLocked="True" ExternallyVisible="True">
        <SymbolInstances>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
          </SymbolInstance>
        </SymbolInstances>
        <AttachedObjects IndexList="0">
          <Queue Queue="OutputBuffer.Contents" ExternallyVisible="True" Locked="True" RotationChangesLocation="False" RotationChangesOrientation="False">
            <Points>
              <Point Location="-98 -6.66133814775094E-16 -8.5" />
              <Point Location="-95 -6.66133814775094E-16 -8.5" />
            </Points>
          </Queue>
        </AttachedObjects>
      </Graphics>
    </Fixed>
    <Fixed Name="SOAllocateMaterial" Type="Server" Location="-90 0 -7" YawDeg="90" Size="2.08920814597344 0.999103702764571 1.000000367302" Scope="Public">
      <AssociatedNodes>
        <Node Name="Input@SOAllocateMaterial" Type="BasicNode1" Location="-91.25 0 -7" YawDeg="90" Scope="Public" RotationChangesLocation="False">
          <Properties>
            <Property Name="InitialCost" Units="USD">0.0</Property>
            <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
            <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="DynamicSelectionRule">
              <Value>None</Value>
            </Property>
            <Property Name="SequenceExpectedOperationTime">Math.If(Entity.CanTransferInAndOutOfObjects, Node.AssociatedObject.Server.ProcessingTime, 0.0)</Property>
          </Properties>
          <Graphics EditsLocked="True" ExternallyVisible="True" />
        </Node>
        <Node Name="Output@SOAllocateMaterial" Type="TransferNode1" Location="-88.5 0 -7" YawDeg="90" Scope="Public" RotationChangesLocation="False">
          <Properties>
            <Property Name="InitialCost" Units="USD">0.0</Property>
            <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
            <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="DynamicSelectionRule">
              <Value>None</Value>
            </Property>
            <Property Name="DestinationType">None (Destroy Entity)</Property>
            <Property Name="RouteRequestDynamicSelectionRule">
              <Value>None</Value>
            </Property>
          </Properties>
          <Graphics EditsLocked="True" ExternallyVisible="True" />
        </Node>
      </AssociatedNodes>
      <IndexedSizes>
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
      </IndexedSizes>
      <Properties>
        <Property Name="InitialCost" Units="USD">0.0</Property>
        <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
        <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="DynamicSelectionRule" RuleGuid="60f74791-6ccc-453b-8da7-946990d495d5">
          <Value>Standard Dispatching Rule</Value>
          <Properties>
            <Property Name="IsRepeatGroup">True</Property>
            <Property Name="DispatchingRules">
              <Value>DispatchingRules</Value>
              <Rows>
                <Properties>
                  <Property Name="RepeatingDispatchingRule">DispatchingRules.DispatchingRule</Property>
                  <Property Name="RepeatingAttributeValueExpression">DispatchingRules.AttributeValueExpression</Property>
                  <Property Name="RepeatingCampaignValueExpression">DispatchingRules.CampaignValueExpression</Property>
                </Properties>
              </Rows>
            </Property>
          </Properties>
        </Property>
        <Property Name="ProcessType">Task Sequence</Property>
        <Property Name="ProcessingTasks">
          <Rows>
            <Properties>
              <Property Name="TaskName">Allocate</Property>
              <Property Name="TaskProcessType">Process Name</Property>
              <Property Name="TaskProcessName">
                <Value>AllocateMaterial</Value>
              </Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="CapitalCost" Units="USD">0.0</Property>
        <Property Name="InputBufferCostPerUse" Units="USD">0.0</Property>
        <Property Name="InputBufferHoldingCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="OutputBufferCostPerUse" Units="USD">0.0</Property>
        <Property Name="OutputBufferHoldingCostRate" Units="USD per Hour">0.0</Property>
      </Properties>
      <Graphics ExternallyVisible="True">
        <SymbolInstances CurrentSymbolIndex="0" CurrentSymbolExpression="Server.ResourceState">
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
            <Decorations>
              <Decoration SurfacePath="0,0" SurfaceId="0" DynamicPath="True">
                <MaterialRef Id="fa8f3036-4a2f-4f3d-b58e-447132dddbe4" />
              </Decoration>
            </Decorations>
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
            <Decorations>
              <Decoration SurfacePath="0,0" SurfaceId="0" DynamicPath="True">
                <MaterialRef Id="3e512fac-dbf4-454b-87f0-07011785b12d" />
              </Decoration>
            </Decorations>
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
            <Decorations>
              <Decoration SurfacePath="0,0" SurfaceId="0" DynamicPath="True">
                <MaterialRef Id="b8694fc4-ed9f-472d-a213-528e19df875f" />
              </Decoration>
            </Decorations>
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
            <Decorations>
              <Decoration SurfacePath="0,0" SurfaceId="0" DynamicPath="True">
                <MaterialRef Id="b37926ba-6cf5-4eb8-b34a-4894529aa2f9" />
              </Decoration>
            </Decorations>
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
            <Decorations>
              <Decoration SurfacePath="0,0" SurfaceId="0" DynamicPath="True">
                <MaterialRef Id="6d2b775b-2879-4185-9fa5-553c3a66f1e3" />
              </Decoration>
            </Decorations>
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
            <Decorations>
              <Decoration SurfacePath="0,0" SurfaceId="0" DynamicPath="True">
                <MaterialRef Id="671457c8-e750-4659-9599-4baba5d569c8" />
              </Decoration>
            </Decorations>
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
            <Decorations>
              <Decoration SurfacePath="0,0" SurfaceId="0" DynamicPath="True">
                <MaterialRef Id="7ae8401c-e129-47af-9d34-081d03f87894" />
              </Decoration>
            </Decorations>
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
            <Decorations>
              <Decoration SurfacePath="0,0" SurfaceId="0" DynamicPath="True">
                <MaterialRef Id="fee9cfe9-3283-4314-abc1-372cf338bf81" />
              </Decoration>
            </Decorations>
          </SymbolInstance>
        </SymbolInstances>
        <AttachedObjects IndexList="1 2 3">
          <Queue Queue="InputBuffer.Contents" ExternallyVisible="True" Locked="True" RotationChangesLocation="False" RotationChangesOrientation="False">
            <Points>
              <Point Location="-91 0 -6.5" />
              <Point Location="-94 0 -6.5" />
            </Points>
          </Queue>
          <Queue Queue="OutputBuffer.Contents" ExternallyVisible="True" Locked="True" RotationChangesLocation="False" RotationChangesOrientation="False">
            <Points>
              <Point Location="-89 0 -6.5" />
              <Point Location="-86 0 -6.5" />
            </Points>
          </Queue>
          <Queue Queue="Processing.Contents" ExternallyVisible="True" Locked="True" RotationChangesLocation="False" RotationChangesOrientation="False">
            <Points>
              <Point Location="-91 0 -8" />
              <Point Location="-89 0 -8" />
            </Points>
          </Queue>
        </AttachedObjects>
      </Graphics>
    </Fixed>
    <Fixed Name="SalesOrdersShip" Type="Sink" Location="-72.8774082583679 0 -2.06359379930748" YawDeg="90" Size="1.5049811730262 1.02881997857009 1.00000033977415" Scope="Public">
      <AssociatedNodes>
        <Node Name="Input@SalesOrdersShip" Type="BasicNode" Location="-73.8774082583679 0 -2.06359379930748" YawDeg="90" Scope="Public" RotationChangesLocation="False">
          <Properties>
            <Property Name="InitialCost" Units="USD">0.0</Property>
            <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
            <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="DynamicSelectionRule">
              <Value>None</Value>
            </Property>
          </Properties>
          <Graphics EditsLocked="True" ExternallyVisible="True" />
        </Node>
      </AssociatedNodes>
      <Properties>
        <Property Name="InitialCost" Units="USD">0.0</Property>
        <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
        <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="DynamicSelectionRule">
          <Value>None</Value>
        </Property>
        <Property Name="CapitalCost" Units="USD">0.0</Property>
        <Property Name="InputBufferCostPerUse" Units="USD">0.0</Property>
        <Property Name="InputBufferHoldingCostRate" Units="USD per Hour">0.0</Property>
      </Properties>
      <Graphics EditsLocked="True" ExternallyVisible="True">
        <SymbolInstances>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
          </SymbolInstance>
        </SymbolInstances>
        <AttachedObjects IndexList="4">
          <Queue Queue="InputBuffer.Contents" ExternallyVisible="True" Locked="True" RotationChangesLocation="False" RotationChangesOrientation="False">
            <Points>
              <Point Location="-73.8774082583679 0 -1.56359379930748" />
              <Point Location="-76.8774082583679 0 -1.56359379930748" />
            </Points>
          </Queue>
        </AttachedObjects>
      </Graphics>
    </Fixed>
    <Entity Name="ManufacturingOrderEntity" Type="ModelEntity" Location="-102 0 7" YawDeg="90" Size="0.5 0.5 0.25" Scope="Public">
      <Properties>
        <Property Name="InitialCost" Units="USD">0.0</Property>
        <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
        <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="DynamicSelectionRule">
          <Value>None</Value>
        </Property>
      </Properties>
      <Graphics>
        <SymbolInstances CurrentAnimationExpression="ModelEntity.Animation">
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
            <FlowDecoration>
              <MaterialRef Id="69b67927-df2f-45f0-9261-e6142cdfafbf" />
            </FlowDecoration>
            <DefaultFlowDecoration>
              <MaterialRef Id="69b67927-df2f-45f0-9261-e6142cdfafbf" />
            </DefaultFlowDecoration>
          </SymbolInstance>
        </SymbolInstances>
      </Graphics>
    </Entity>
    <Entity Name="SalesOrderEntity" Type="ModelEntity" Location="-102 0 2.75" YawDeg="90" Size="0.5 0.5 0.25" Scope="Public">
      <Properties>
        <Property Name="InitialCost" Units="USD">0.0</Property>
        <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
        <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="DynamicSelectionRule">
          <Value>None</Value>
        </Property>
        <Property Name="LogXZObservations">0.0</Property>
      </Properties>
      <Graphics EditsLocked="True" ExternallyVisible="True">
        <SymbolInstances CurrentAnimationExpression="ModelEntity.Animation">
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
            <FlowDecoration>
              <MaterialRef Id="69b67927-df2f-45f0-9261-e6142cdfafbf" />
            </FlowDecoration>
            <DefaultFlowDecoration>
              <MaterialRef Id="69b67927-df2f-45f0-9261-e6142cdfafbf" />
            </DefaultFlowDecoration>
          </SymbolInstance>
        </SymbolInstances>
      </Graphics>
    </Entity>
    <Fixed Name="OperationController" Type="Server" Location="-87.9067968996538 -3.33066907387547E-16 -1.97123022837602" YawDeg="90" Size="2.08920814597344 0.999103702764571 1.000000367302" Scope="Public">
      <AssociatedNodes>
        <Node Name="Input@OperationController" Type="BasicNode1" Location="-89.4067968996538 -3.33066907387547E-16 -1.97123022837602" YawDeg="90" Scope="Public" RotationChangesLocation="False">
          <Properties>
            <Property Name="InitialCost" Units="USD">0.0</Property>
            <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
            <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="DynamicSelectionRule">
              <Value>None</Value>
            </Property>
            <Property Name="SequenceExpectedOperationTime">Math.If(Entity.CanTransferInAndOutOfObjects, Node.AssociatedObject.Server.ProcessingTime, 0.0)</Property>
          </Properties>
          <Graphics EditsLocked="True" ExternallyVisible="True" />
        </Node>
        <Node Name="Output@OperationController" Type="TransferNode1" Location="-86.4067968996538 -3.33066907387547E-16 -1.97123022837602" YawDeg="90" Scope="Public" RotationChangesLocation="False">
          <Properties>
            <Property Name="InitialCost" Units="USD">0.0</Property>
            <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
            <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="DynamicSelectionRule">
              <Value>None</Value>
            </Property>
            <Property Name="DestinationType">Select From List</Property>
            <Property Name="DestinationNodeListName">SinkInputs</Property>
            <Property Name="DestinationSelectionCondition">Math.If(ModelEntity.FromManufacturingOrder, Math.If(ModelRunMode == List.ModelRunModeList.Scheduling, Candidate.Node == Input@SalesOrdersShip, Candidate.Node == Input@SalesOrdersRealTimeShip), Candidate.Node == Input@ComponentOrdersDestroy)</Property>
            <Property Name="RouteRequestDynamicSelectionRule">
              <Value>None</Value>
            </Property>
          </Properties>
          <Graphics EditsLocked="True" ExternallyVisible="True" />
        </Node>
      </AssociatedNodes>
      <IndexedSizes>
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
      </IndexedSizes>
      <Properties>
        <Property Name="InitialCost" Units="USD">0.0</Property>
        <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
        <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="LogResourceUsage">LogController</Property>
        <Property Name="DisplayCategory">zzControllers</Property>
        <Property Name="InitialCapacity">Infinity</Property>
        <Property Name="DynamicSelectionRule">
          <Value>None</Value>
        </Property>
        <Property Name="ProcessType">Task Sequence</Property>
        <Property Name="ProcessingTasks">
          <Value>Operations</Value>
          <Rows>
            <Properties>
              <Property Name="TaskSequenceNumber">Operations.SequenceNumber</Property>
              <Property Name="TaskName">Operations.OperationName</Property>
              <Property Name="TaskProcessType">Process Name</Property>
              <Property Name="TaskProcessName">
                <Value>OperationController_TaskProcessName</Value>
              </Property>
              <Property Name="TaskAutoCancelTrigger">None</Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="CapitalCost" Units="USD">0.0</Property>
        <Property Name="InputBufferCostPerUse" Units="USD">0.0</Property>
        <Property Name="InputBufferHoldingCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="OutputBufferCostPerUse" Units="USD">0.0</Property>
        <Property Name="OutputBufferHoldingCostRate" Units="USD per Hour">0.0</Property>
      </Properties>
      <Graphics EditsLocked="True" ExternallyVisible="True">
        <SymbolInstances CurrentSymbolIndex="0" CurrentSymbolExpression="Server.ResourceState">
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
            <Decorations>
              <Decoration SurfacePath="0,0" SurfaceId="0" DynamicPath="True">
                <MaterialRef Id="185ebe99-3a61-4af9-bb19-b0f4704ed636" />
              </Decoration>
            </Decorations>
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
            <Decorations>
              <Decoration SurfacePath="0,0" SurfaceId="0" DynamicPath="True">
                <MaterialRef Id="b4b21e96-936c-4fc7-a7a9-d76bf023de69" />
              </Decoration>
            </Decorations>
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
            <Decorations>
              <Decoration SurfacePath="0,0" SurfaceId="0" DynamicPath="True">
                <MaterialRef Id="308b5496-1af0-431c-a131-3b9d150e87f3" />
              </Decoration>
            </Decorations>
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
            <Decorations>
              <Decoration SurfacePath="0,0" SurfaceId="0" DynamicPath="True">
                <MaterialRef Id="d45f8e6e-c629-4680-a090-d72758ac8be8" />
              </Decoration>
            </Decorations>
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
            <Decorations>
              <Decoration SurfacePath="0,0" SurfaceId="0" DynamicPath="True">
                <MaterialRef Id="73b81d73-5246-4fe6-8def-19fbd7ea0925" />
              </Decoration>
            </Decorations>
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
            <Decorations>
              <Decoration SurfacePath="0,0" SurfaceId="0" DynamicPath="True">
                <MaterialRef Id="6af4091a-ba19-4e83-ba75-570095c85d75" />
              </Decoration>
            </Decorations>
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
            <Decorations>
              <Decoration SurfacePath="0,0" SurfaceId="0" DynamicPath="True">
                <MaterialRef Id="a647b56d-ac57-4fc5-bb81-71e38de28e26" />
              </Decoration>
            </Decorations>
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
            <Decorations>
              <Decoration SurfacePath="0,0" SurfaceId="0" DynamicPath="True">
                <MaterialRef Id="9789d220-614f-46c3-aff2-2c21fc9e6955" />
              </Decoration>
            </Decorations>
          </SymbolInstance>
        </SymbolInstances>
        <AttachedObjects IndexList="5 6 7">
          <Queue Queue="InputBuffer.Contents" ExternallyVisible="True" Locked="True" RotationChangesLocation="False" RotationChangesOrientation="False">
            <Points>
              <Point Location="-88.9067968996538 -3.33066907387547E-16 -1.47123022837602" />
              <Point Location="-91.9067968996538 -3.33066907387547E-16 -1.47123022837602" />
            </Points>
          </Queue>
          <Queue Queue="OutputBuffer.Contents" ExternallyVisible="True" Locked="True" RotationChangesLocation="False" RotationChangesOrientation="False">
            <Points>
              <Point Location="-86.9067968996538 -3.33066907387547E-16 -1.47123022837602" />
              <Point Location="-83.9067968996538 -3.33066907387547E-16 -1.47123022837602" />
            </Points>
          </Queue>
          <Queue Queue="Processing.Contents" ExternallyVisible="True" Locked="True" RotationChangesLocation="False" RotationChangesOrientation="False">
            <Points>
              <Point Location="-88.9067968996538 -3.33066907387547E-16 -2.97123022837602" />
              <Point Location="-72 0 -3" />
            </Points>
          </Queue>
        </AttachedObjects>
      </Graphics>
    </Fixed>
    <Entity Name="ComponentOrderEntity" Type="ModelEntity" Location="-86 0 3" YawDeg="90" Size="0.5 0.5 0.25" Scope="Public">
      <Properties>
        <Property Name="InitialCost" Units="USD">0.0</Property>
        <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
        <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="DynamicSelectionRule">
          <Value>None</Value>
        </Property>
        <Property Name="InitialPriority">ComponentOrders.Priority</Property>
        <Property Name="LogXZObservations">0.0</Property>
      </Properties>
      <Graphics EditsLocked="True">
        <SymbolInstances CurrentAnimationExpression="ModelEntity.Animation">
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
            <FlowDecoration>
              <MaterialRef Id="69b67927-df2f-45f0-9261-e6142cdfafbf" />
            </FlowDecoration>
            <DefaultFlowDecoration>
              <MaterialRef Id="69b67927-df2f-45f0-9261-e6142cdfafbf" />
            </DefaultFlowDecoration>
          </SymbolInstance>
        </SymbolInstances>
      </Graphics>
    </Entity>
    <Fixed Name="ComponentOrdersDestroy" Type="Sink" Location="-74.5 -4.44089209850063E-16 2" YawDeg="90" Size="1.5049811730262 1.02881997857009 1.00000033977415" Scope="Public">
      <AssociatedNodes>
        <Node Name="Input@ComponentOrdersDestroy" Type="BasicNode" Location="-75.7133278351568 -4.44089209850063E-16 2" YawDeg="90" Scope="Public" RotationChangesLocation="False">
          <Properties>
            <Property Name="InitialCost" Units="USD">0.0</Property>
            <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
            <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="DynamicSelectionRule">
              <Value>None</Value>
            </Property>
          </Properties>
          <Graphics EditsLocked="True" ExternallyVisible="True" />
        </Node>
      </AssociatedNodes>
      <Properties>
        <Property Name="InitialCost" Units="USD">0.0</Property>
        <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
        <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="DynamicSelectionRule">
          <Value>None</Value>
        </Property>
        <Property Name="AssignmentsOnEntering">
          <Rows>
            <Properties>
              <Property Name="AssignmentsOnEnteringStateVariableName">
                <Value>ComponentOrders.CompletedFlag</Value>
              </Property>
              <Property Name="AssignmentsOnEnteringNewValue">True</Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="EnteredAddOnProcess">
          <Value>ComponentOrdersDestroy_Entered</Value>
        </Property>
        <Property Name="CapitalCost" Units="USD">0.0</Property>
        <Property Name="InputBufferCostPerUse" Units="USD">0.0</Property>
        <Property Name="InputBufferHoldingCostRate" Units="USD per Hour">0.0</Property>
      </Properties>
      <Graphics EditsLocked="True" ExternallyVisible="True">
        <SymbolInstances>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
          </SymbolInstance>
        </SymbolInstances>
        <AttachedObjects IndexList="8">
          <Queue Queue="InputBuffer.Contents" ExternallyVisible="True" Locked="True" RotationChangesLocation="False" RotationChangesOrientation="False">
            <Points>
              <Point Location="-75.5 0 2.5" />
              <Point Location="-78.5 0 2.5" />
            </Points>
          </Queue>
        </AttachedObjects>
      </Graphics>
    </Fixed>
    <Entity Name="OperationEntity" Type="ModelEntity" Location="-86 0 6.5" YawDeg="90" Size="0.5 0.5 0.25" Scope="Public">
      <IndexedSizes>
        <IndexedSize Size="0.5 0.5 0.25" YawDeg="90" />
        <IndexedSize Size="0.5 0.5 0.25" YawDeg="90" />
        <IndexedSize Size="0.5 0.5 0.25" YawDeg="90" />
      </IndexedSizes>
      <Properties>
        <Property Name="InitialCost" Units="USD">0.0</Property>
        <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
        <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="DynamicSelectionRule">
          <Value>None</Value>
        </Property>
      </Properties>
      <Graphics EditsLocked="True" ExternallyVisible="True">
        <SymbolInstances CurrentAnimationExpression="ModelEntity.Animation" InformationTextExpression="ModelEntity.DisplayString" CurrentSymbolIndex="0" CurrentSymbolExpression="ModelEntity.Picture">
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
            <Decorations>
              <Decoration SurfacePath="0" SurfaceId="0">
                <MaterialRef Id="ca618df7-0e1d-4123-9070-95acfb3a019f" />
              </Decoration>
              <Decoration SurfacePath="0" SurfaceId="1">
                <MaterialRef Id="ca618df7-0e1d-4123-9070-95acfb3a019f" />
              </Decoration>
            </Decorations>
            <FlowDecoration>
              <MaterialRef Id="ca618df7-0e1d-4123-9070-95acfb3a019f" />
            </FlowDecoration>
            <DefaultFlowDecoration>
              <MaterialRef Id="69b67927-df2f-45f0-9261-e6142cdfafbf" />
            </DefaultFlowDecoration>
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
            <Decorations>
              <Decoration SurfacePath="0" SurfaceId="0">
                <MaterialRef Id="608b8a6e-b239-47a0-8665-a1bfc4cd70e6" />
              </Decoration>
              <Decoration SurfacePath="0" SurfaceId="1">
                <MaterialRef Id="608b8a6e-b239-47a0-8665-a1bfc4cd70e6" />
              </Decoration>
            </Decorations>
            <FlowDecoration>
              <MaterialRef Id="608b8a6e-b239-47a0-8665-a1bfc4cd70e6" />
            </FlowDecoration>
            <DefaultFlowDecoration>
              <MaterialRef Id="69b67927-df2f-45f0-9261-e6142cdfafbf" />
            </DefaultFlowDecoration>
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
            <Decorations>
              <Decoration SurfacePath="0" SurfaceId="0">
                <MaterialRef Id="9fdd600b-cd6e-48eb-8a5c-b42323f5a030" />
              </Decoration>
              <Decoration SurfacePath="0" SurfaceId="1">
                <MaterialRef Id="9fdd600b-cd6e-48eb-8a5c-b42323f5a030" />
              </Decoration>
            </Decorations>
            <FlowDecoration>
              <MaterialRef Id="9fdd600b-cd6e-48eb-8a5c-b42323f5a030" />
            </FlowDecoration>
            <DefaultFlowDecoration>
              <MaterialRef Id="69b67927-df2f-45f0-9261-e6142cdfafbf" />
            </DefaultFlowDecoration>
          </SymbolInstance>
        </SymbolInstances>
      </Graphics>
    </Entity>
    <Fixed Name="SOSource_Stochastic" Type="Source" Location="-99 -6.66133814775094E-16 -4" YawDeg="90" Size="1.49711911473274 1.02344522701085 0.999999706897704" Scope="Public">
      <AssociatedNodes>
        <Node Name="Output@SOSource_Stochastic" Type="TransferNode" Location="-97.75 -6.66133814775094E-16 -4" YawDeg="90" Scope="Public" RotationChangesLocation="False">
          <Properties>
            <Property Name="InitialCost" Units="USD">0.0</Property>
            <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
            <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="DynamicSelectionRule">
              <Value>None</Value>
            </Property>
            <Property Name="RouteRequestDynamicSelectionRule">
              <Value>None</Value>
            </Property>
          </Properties>
          <Graphics EditsLocked="True" ExternallyVisible="True" />
        </Node>
      </AssociatedNodes>
      <Properties>
        <Property Name="InitialCost" Units="USD">0.0</Property>
        <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
        <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="DynamicSelectionRule">
          <Value>None</Value>
        </Property>
        <Property Name="EntityType">SalesOrderEntity</Property>
        <Property Name="InterarrivalTime" Units="Hours">SOSource_Stochastic_InterarrivalTime</Property>
        <Property Name="ArrivalTimeProperty">SalesOrders.AdjustedReleaseDate</Property>
        <Property Name="EntitiesPerArrival">ModelRunMode == List.ModelRunModeList.Scheduling &amp;&amp; Run.RandomnessDisabled == False &amp;&amp;  Run.ScenarioName != "Analysis" &amp;&amp; AlwaysDeterministicSource == False</Property>
        <Property Name="MaximumArrivals">MaximumArrivals</Property>
        <Property Name="AssignmentsBeforeExiting">
          <Rows>
            <Properties>
              <Property Name="AssignmentsBeforeExitingStateVariableName">
                <Value>TotalStarted</Value>
              </Property>
              <Property Name="AssignmentsBeforeExitingNewValue">TotalStarted + 1</Property>
            </Properties>
            <Properties>
              <Property Name="AssignmentsBeforeExitingStateVariableName">
                <Value>ModelEntity.DisplayString</Value>
              </Property>
              <Property Name="AssignmentsBeforeExitingNewValue">SalesOrders.SOId</Property>
            </Properties>
            <Properties>
              <Property Name="AssignmentsBeforeExitingStateVariableName">
                <Value>ModelEntity.DueDate</Value>
              </Property>
              <Property Name="AssignmentsBeforeExitingNewValue">TimeNow + (SalesOrders.DueDate - SalesOrders.ReleaseDate)</Property>
            </Properties>
            <Properties>
              <Property Name="AssignmentsBeforeExitingStateVariableName">
                <Value>ModelEntity.Priority</Value>
              </Property>
              <Property Name="AssignmentsBeforeExitingNewValue">SalesOrders.Priority</Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="TableRowReferenceBeforeCreatingEntitiesTableName">SalesOrders</Property>
        <Property Name="TableRowReferenceBeforeCreatingEntitiesRowNumber">SalesOrders.Enabled.RandomRow</Property>
        <Property Name="TableRowReferenceOnCreatedEntityTableName">Operations</Property>
        <Property Name="TableRowReferenceOnCreatedEntityRowNumber">1</Property>
        <Property Name="ExitedAddOnProcess">
          <Value>SOSource_Stochastic_Exited</Value>
        </Property>
        <Property Name="CapitalCost" Units="USD">0.0</Property>
        <Property Name="OutputBufferCostPerUse" Units="USD">0.0</Property>
        <Property Name="OutputBufferHoldingCostRate" Units="USD per Hour">0.0</Property>
      </Properties>
      <Graphics EditsLocked="True" ExternallyVisible="True">
        <SymbolInstances>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
          </SymbolInstance>
        </SymbolInstances>
        <AttachedObjects IndexList="9">
          <Queue Queue="OutputBuffer.Contents" ExternallyVisible="True" Locked="True" RotationChangesLocation="False" RotationChangesOrientation="False">
            <Points>
              <Point Location="-98 -6.66133814775094E-16 -3.5" />
              <Point Location="-95 -6.66133814775094E-16 -3.5" />
            </Points>
          </Queue>
        </AttachedObjects>
      </Graphics>
    </Fixed>
    <Fixed Name="SOSource_RealTime" Type="Source" Location="-70.5 -6.66133814775094E-16 -7.5" YawDeg="90" Size="1.49711911473274 1.02344522701085 0.999999706897704" Scope="Public">
      <AssociatedNodes>
        <Node Name="Output@SOSource_RealTime" Type="TransferNode" Location="-69.25 -6.66133814775094E-16 -7.5" YawDeg="90" Scope="Public" RotationChangesLocation="False">
          <Properties>
            <Property Name="InitialCost" Units="USD">0.0</Property>
            <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
            <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="DynamicSelectionRule">
              <Value>None</Value>
            </Property>
            <Property Name="RouteRequestDynamicSelectionRule">
              <Value>None</Value>
            </Property>
          </Properties>
          <Graphics EditsLocked="True" Layer="Everything" ExternallyVisible="True" />
        </Node>
      </AssociatedNodes>
      <Properties>
        <Property Name="InitialCost" Units="USD">0.0</Property>
        <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
        <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="DynamicSelectionRule">
          <Value>None</Value>
        </Property>
        <Property Name="EntityType">SalesOrderEntity</Property>
        <Property Name="ArrivalMode">On Event</Property>
        <Property Name="InterarrivalTime" Units="Hours">SOSource_Stochastic_InterarrivalTime</Property>
        <Property Name="TriggeringEventName">CreateRealTimeOrder</Property>
        <Property Name="ArrivalTimeProperty">SalesOrders.AdjustedReleaseDate</Property>
        <Property Name="EntitiesPerArrival">ModelRunMode != List.ModelRunModeList.Scheduling</Property>
        <Property Name="MaximumArrivals">MaximumArrivals</Property>
        <Property Name="AssignmentsBeforeExiting">
          <Rows>
            <Properties>
              <Property Name="AssignmentsBeforeExitingStateVariableName">
                <Value>TotalStarted</Value>
              </Property>
              <Property Name="AssignmentsBeforeExitingNewValue">TotalStarted + 1</Property>
            </Properties>
            <Properties>
              <Property Name="AssignmentsBeforeExitingStateVariableName">
                <Value>ModelEntity.RowNumber</Value>
              </Property>
              <Property Name="AssignmentsBeforeExitingNewValue">SalesOrdersRealTime.RowNumber</Property>
            </Properties>
            <Properties>
              <Property Name="AssignmentsBeforeExitingStateVariableName">
                <Value>ModelEntity.DisplayString</Value>
              </Property>
              <Property Name="AssignmentsBeforeExitingNewValue">SalesOrdersRealTime.SOId</Property>
            </Properties>
            <Properties>
              <Property Name="AssignmentsBeforeExitingStateVariableName">
                <Value>ModelEntity.DueDate</Value>
              </Property>
              <Property Name="AssignmentsBeforeExitingNewValue">SalesOrdersRealTime.DueDate</Property>
            </Properties>
            <Properties>
              <Property Name="AssignmentsBeforeExitingStateVariableName">
                <Value>ModelEntity.Priority</Value>
              </Property>
              <Property Name="AssignmentsBeforeExitingNewValue">SalesOrdersRealTime.Priority</Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="TableRowReferenceOnCreatedEntityTableName">SalesOrdersRealTime</Property>
        <Property Name="TableRowReferenceOnCreatedEntityRowNumber">SORTNumber</Property>
        <Property Name="ExitedAddOnProcess">
          <Value>SOSource_RealTime_Exited</Value>
        </Property>
        <Property Name="CapitalCost" Units="USD">0.0</Property>
        <Property Name="OutputBufferCostPerUse" Units="USD">0.0</Property>
        <Property Name="OutputBufferHoldingCostRate" Units="USD per Hour">0.0</Property>
      </Properties>
      <Graphics EditsLocked="True" Layer="Everything" ExternallyVisible="True">
        <SymbolInstances>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
          </SymbolInstance>
        </SymbolInstances>
        <AttachedObjects IndexList="11">
          <Queue Queue="OutputBuffer.Contents" Layer="Everything" ExternallyVisible="True" Locked="True" RotationChangesLocation="False" RotationChangesOrientation="False">
            <Points>
              <Point Location="-69.5 -6.66133814775094E-16 -7" />
              <Point Location="-66.5 -6.66133814775094E-16 -7" />
            </Points>
          </Queue>
        </AttachedObjects>
      </Graphics>
    </Fixed>
    <Fixed Name="SORTAllocateMaterial" Type="Server" Location="-61.5 0 -7.5" YawDeg="90" Size="2.08920814597344 0.999103702764571 1.000000367302" Scope="Public">
      <AssociatedNodes>
        <Node Name="Input@SORTAllocateMaterial" Type="BasicNode1" Location="-62.75 0 -7.5" YawDeg="90" Scope="Public" RotationChangesLocation="False">
          <Properties>
            <Property Name="InitialCost" Units="USD">0.0</Property>
            <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
            <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="DynamicSelectionRule">
              <Value>None</Value>
            </Property>
            <Property Name="SequenceExpectedOperationTime">Math.If(Entity.CanTransferInAndOutOfObjects, Node.AssociatedObject.Server.ProcessingTime, 0.0)</Property>
          </Properties>
          <Graphics EditsLocked="True" Layer="Everything" ExternallyVisible="True" />
        </Node>
        <Node Name="Output@SORTAllocateMaterial" Type="TransferNode1" Location="-60 0 -7.5" YawDeg="90" Scope="Public" RotationChangesLocation="False">
          <Properties>
            <Property Name="InitialCost" Units="USD">0.0</Property>
            <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
            <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="DynamicSelectionRule">
              <Value>None</Value>
            </Property>
            <Property Name="DestinationType">None (Destroy Entity)</Property>
            <Property Name="RouteRequestDynamicSelectionRule">
              <Value>None</Value>
            </Property>
          </Properties>
          <Graphics EditsLocked="True" Layer="Everything" ExternallyVisible="True" />
        </Node>
      </AssociatedNodes>
      <IndexedSizes>
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
      </IndexedSizes>
      <Properties>
        <Property Name="InitialCost" Units="USD">0.0</Property>
        <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
        <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="DynamicSelectionRule" RuleGuid="60f74791-6ccc-453b-8da7-946990d495d5">
          <Value>Standard Dispatching Rule</Value>
          <Properties>
            <Property Name="IsRepeatGroup">True</Property>
            <Property Name="DispatchingRules">
              <Value>DispatchingRules</Value>
              <Rows>
                <Properties>
                  <Property Name="RepeatingDispatchingRule">DispatchingRules.DispatchingRule</Property>
                  <Property Name="RepeatingAttributeValueExpression">DispatchingRules.AttributeValueExpression</Property>
                  <Property Name="RepeatingCampaignValueExpression">DispatchingRules.CampaignValueExpression</Property>
                </Properties>
              </Rows>
            </Property>
          </Properties>
        </Property>
        <Property Name="ProcessType">Task Sequence</Property>
        <Property Name="ProcessingTasks">
          <Rows>
            <Properties>
              <Property Name="TaskName">Allocate</Property>
              <Property Name="TaskProcessType">Process Name</Property>
              <Property Name="TaskProcessName">
                <Value>AllocateMaterialRealTime</Value>
              </Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="CapitalCost" Units="USD">0.0</Property>
        <Property Name="InputBufferCostPerUse" Units="USD">0.0</Property>
        <Property Name="InputBufferHoldingCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="OutputBufferCostPerUse" Units="USD">0.0</Property>
        <Property Name="OutputBufferHoldingCostRate" Units="USD per Hour">0.0</Property>
      </Properties>
      <Graphics EditsLocked="True" Layer="Everything" ExternallyVisible="True">
        <SymbolInstances CurrentSymbolIndex="0" CurrentSymbolExpression="Server.ResourceState">
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
            <Decorations>
              <Decoration SurfacePath="0,0" SurfaceId="0" DynamicPath="True">
                <MaterialRef Id="fa8f3036-4a2f-4f3d-b58e-447132dddbe4" />
              </Decoration>
            </Decorations>
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
            <Decorations>
              <Decoration SurfacePath="0,0" SurfaceId="0" DynamicPath="True">
                <MaterialRef Id="3e512fac-dbf4-454b-87f0-07011785b12d" />
              </Decoration>
            </Decorations>
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
            <Decorations>
              <Decoration SurfacePath="0,0" SurfaceId="0" DynamicPath="True">
                <MaterialRef Id="b8694fc4-ed9f-472d-a213-528e19df875f" />
              </Decoration>
            </Decorations>
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
            <Decorations>
              <Decoration SurfacePath="0,0" SurfaceId="0" DynamicPath="True">
                <MaterialRef Id="b37926ba-6cf5-4eb8-b34a-4894529aa2f9" />
              </Decoration>
            </Decorations>
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
            <Decorations>
              <Decoration SurfacePath="0,0" SurfaceId="0" DynamicPath="True">
                <MaterialRef Id="6d2b775b-2879-4185-9fa5-553c3a66f1e3" />
              </Decoration>
            </Decorations>
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
            <Decorations>
              <Decoration SurfacePath="0,0" SurfaceId="0" DynamicPath="True">
                <MaterialRef Id="671457c8-e750-4659-9599-4baba5d569c8" />
              </Decoration>
            </Decorations>
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
            <Decorations>
              <Decoration SurfacePath="0,0" SurfaceId="0" DynamicPath="True">
                <MaterialRef Id="7ae8401c-e129-47af-9d34-081d03f87894" />
              </Decoration>
            </Decorations>
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
            <Decorations>
              <Decoration SurfacePath="0,0" SurfaceId="0" DynamicPath="True">
                <MaterialRef Id="fee9cfe9-3283-4314-abc1-372cf338bf81" />
              </Decoration>
            </Decorations>
          </SymbolInstance>
        </SymbolInstances>
        <AttachedObjects IndexList="12 13 14">
          <Queue Queue="InputBuffer.Contents" Layer="Everything" ExternallyVisible="True" Locked="True" RotationChangesLocation="False" RotationChangesOrientation="False">
            <Points>
              <Point Location="-62.5 0 -7" />
              <Point Location="-65.5 0 -7" />
            </Points>
          </Queue>
          <Queue Queue="OutputBuffer.Contents" Layer="Everything" ExternallyVisible="True" Locked="True" RotationChangesLocation="False" RotationChangesOrientation="False">
            <Points>
              <Point Location="-60.5 0 -7" />
              <Point Location="-57.5 0 -7" />
            </Points>
          </Queue>
          <Queue Queue="Processing.Contents" Layer="Everything" ExternallyVisible="True" Locked="True" RotationChangesLocation="False" RotationChangesOrientation="False">
            <Points>
              <Point Location="-62.5 0 -8.5" />
              <Point Location="-60.5 0 -8.5" />
            </Points>
          </Queue>
        </AttachedObjects>
      </Graphics>
    </Fixed>
    <Fixed Name="SalesOrdersRealTimeShip" Type="Sink" Location="-62 0 3" YawDeg="90" Size="1.5049811730262 1.02881997857009 1.00000033977415" Scope="Public">
      <AssociatedNodes>
        <Node Name="Input@SalesOrdersRealTimeShip" Type="BasicNode" Location="-63 0 3" YawDeg="90" Scope="Public" RotationChangesLocation="False">
          <Properties>
            <Property Name="InitialCost" Units="USD">0.0</Property>
            <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
            <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="DynamicSelectionRule">
              <Value>None</Value>
            </Property>
            <Property Name="TalliesOnEntering">
              <Rows>
                <Properties>
                  <Property Name="TalliesOnEnteringTallyStatisticName">
                    <Value>Lateness</Value>
                  </Property>
                  <Property Name="TalliesOnEnteringValueExpression">TimeNow - ModelEntity.DueDate</Property>
                </Properties>
                <Properties>
                  <Property Name="TalliesOnEnteringTallyStatisticName">
                    <Value>TimeInSystem</Value>
                  </Property>
                  <Property Name="TalliesOnEnteringValueExpression">TimeNow - ModelEntity.TimeCreated</Property>
                </Properties>
              </Rows>
            </Property>
          </Properties>
          <Graphics EditsLocked="True" Layer="Everything" ExternallyVisible="True" />
        </Node>
      </AssociatedNodes>
      <Properties>
        <Property Name="InitialCost" Units="USD">0.0</Property>
        <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
        <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="DynamicSelectionRule">
          <Value>None</Value>
        </Property>
        <Property Name="AssignmentsOnEntering">
          <Rows>
            <Properties>
              <Property Name="AssignmentsOnEnteringStateVariableName">
                <Value>SalesOrdersRealTime[SalesOrdersRealTime.RowNumber.RowForKey(ModelEntity.RowNumber)].ShipDate</Value>
              </Property>
              <Property Name="AssignmentsOnEnteringNewValue">TimeNow</Property>
            </Properties>
            <Properties>
              <Property Name="AssignmentsOnEnteringStateVariableName">
                <Value>SalesOrdersRealTime[SalesOrdersRealTime.RowNumber.RowForKey(ModelEntity.RowNumber)].ProductionCost</Value>
              </Property>
              <Property Name="AssignmentsOnEnteringNewValue">Entity.Cost</Property>
            </Properties>
            <Properties>
              <Property Name="AssignmentsOnEnteringStateVariableName">
                <Value>OnTimeOrders</Value>
              </Property>
              <Property Name="AssignmentsOnEnteringNewValue">Math.If( TimeNow &lt;= ModelEntity.DueDate, OnTimeOrders + 1, OnTimeOrders)</Property>
            </Properties>
            <Properties>
              <Property Name="AssignmentsOnEnteringStateVariableName">
                <Value>LateOrders</Value>
              </Property>
              <Property Name="AssignmentsOnEnteringNewValue">Math.If( TimeNow&gt; ModelEntity.DueDate, LateOrders + 1, LateOrders)</Property>
            </Properties>
            <Properties>
              <Property Name="AssignmentsOnEnteringStateVariableName">
                <Value>TotalCompleted</Value>
              </Property>
              <Property Name="AssignmentsOnEnteringNewValue">TotalCompleted + 1</Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="CapitalCost" Units="USD">0.0</Property>
        <Property Name="InputBufferCostPerUse" Units="USD">0.0</Property>
        <Property Name="InputBufferHoldingCostRate" Units="USD per Hour">0.0</Property>
      </Properties>
      <Graphics Layer="Everything" ExternallyVisible="True">
        <SymbolInstances>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
          </SymbolInstance>
        </SymbolInstances>
        <AttachedObjects IndexList="15">
          <Queue Queue="InputBuffer.Contents" Layer="Everything" ExternallyVisible="True" Locked="True" RotationChangesLocation="False" RotationChangesOrientation="False">
            <Points>
              <Point Location="-63 0 3.5" />
              <Point Location="-66 0 3.5" />
            </Points>
          </Queue>
        </AttachedObjects>
      </Graphics>
    </Fixed>
    <Fixed Name="LogisticsArea1" Type="MTRServer" Location="0.00912685945749914 0 -1.20823967378693" YawDeg="180" Size="2.08920814597344 0.999103702764571 1.000000367302" Scope="Public">
      <AssociatedNodes>
        <Node Name="Input@LogisticsArea1" Type="BasicNode1" Location="0.00912685945749892 0 -2.70823967378693" YawDeg="180" Scope="Public">
          <Properties>
            <Property Name="InitialCost" Units="USD">0.0</Property>
            <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
            <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="DynamicSelectionRule">
              <Value>None</Value>
            </Property>
            <Property Name="SequenceExpectedOperationTime">Math.If(Entity.CanTransferInAndOutOfObjects, Node.AssociatedObject.Server.ProcessingTime, 0.0)</Property>
          </Properties>
          <Graphics Layer="Everything" ExternallyVisible="True" />
        </Node>
        <Node Name="Output@LogisticsArea1" Type="TransferNode1" Location="0.00912685945749936 0 0.29176032621307" YawDeg="180" Scope="Public">
          <Properties>
            <Property Name="InitialCost" Units="USD">0.0</Property>
            <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
            <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="DynamicSelectionRule">
              <Value>None</Value>
            </Property>
            <Property Name="EntryExemptionCondition">TransferNode.RideOnTransporter &amp;&amp; !Entity.Is.Transporter</Property>
            <Property Name="DestinationType">Specific</Property>
            <Property Name="DestinationNodeName">ModelEntity.ToLocation</Property>
            <Property Name="RouteRequestDynamicSelectionRule">
              <Value>None</Value>
            </Property>
            <Property Name="RideOnTransporter">Conditional</Property>
            <Property Name="RideOnTransporterCondition">ModelEntity.UseVehicle</Property>
            <Property Name="TransporterType">Select From List</Property>
            <Property Name="TransporterName">ModelEntity.Vehicle</Property>
            <Property Name="TransporterListName">Equipment.EquipmentName</Property>
            <Property Name="TransporterReservationMethod">Reserve Best</Property>
            <Property Name="TransporterSelectionGoal">Largest Value</Property>
            <Property Name="TransporterSelectionValueExpression">Candidate.Equipment.EquipmentName.MTRVehicle.Population.FirstItem.MTRVehicle.BatteryRemaining</Property>
            <Property Name="EnteredAddOnProcess">
              <Value>PSOutputNodeChecks</Value>
            </Property>
          </Properties>
          <Graphics Layer="Everything" ExternallyVisible="True" />
        </Node>
      </AssociatedNodes>
      <IndexedSizes>
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="180" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
      </IndexedSizes>
      <Properties>
        <Property Name="InitialCost" Units="USD">0.0</Property>
        <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
        <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="DynamicSelectionRule" RuleGuid="60f74791-6ccc-453b-8da7-946990d495d5">
          <Value>Standard Dispatching Rule</Value>
          <Properties>
            <Property Name="DispatchingRules">
              <Value>DispatchingRules</Value>
              <Rows>
                <Properties />
              </Rows>
            </Property>
          </Properties>
        </Property>
        <Property Name="ProcessingTasks">
          <Value>Phases</Value>
          <Rows>
            <Properties>
              <Property Name="TaskIDNumber">Phases.TaskIDNumber</Property>
              <Property Name="TaskSequenceNumber">Phases.SequenceNumber</Property>
              <Property Name="TaskName">Phases.TaskName</Property>
              <Property Name="TaskBranchType">Conditional</Property>
              <Property Name="TaskConditionOrProbability">Resources.PhaseSelectionExpression</Property>
              <Property Name="TaskProcessingTime">Math.If( Phases.QuantityBasedTaskProcessingTime, Math.If( ModelEntity.FromManufacturingOrder, ManufacturingOrders.Quantity * Phases.TaskProcessingTime, ComponentOrders.Quantity * Phases.TaskProcessingTime), Phases.TaskProcessingTime)</Property>
              <Property Name="TaskProcessName">
                <Value>Phases.TaskProcessName</Value>
              </Property>
              <Property Name="TaskSubmodelEntityCreationMethod">Phases.TaskSubmodelEntityCreationMethod</Property>
              <Property Name="TaskSubmodelEntityType">Phases.TaskSubmodelEntityType</Property>
              <Property Name="TaskSubmodelStartingNode">Phases.TaskSubmodelStartingNode</Property>
              <Property Name="TaskSaveOriginalEntityReference">
                <Value>Phases.TaskSaveOriginalEntityReference</Value>
              </Property>
              <Property Name="TaskChangeoverLogicName">
                <Value>Phases.TaskChangeoverLogicName</Value>
              </Property>
              <Property Name="TaskImmediatePredecessors">Phases.TaskImmediatePredecessors</Property>
              <Property Name="TaskImmediateSuccessors">Phases.TaskImmediateSuccessors</Property>
              <Property Name="TaskAutoCancelTrigger">None</Property>
              <Property Name="TaskResourceRequirementsResourceType">PhaseSecondaryResources.ResourceType</Property>
              <Property Name="TaskResourceRequirementsResourceName">PhaseSecondaryResources.SecondaryResourceName</Property>
              <Property Name="TaskResourceRequirementsResourceListName">PhaseSecondaryResources.SecondaryResourceList</Property>
              <Property Name="TaskResourceRequirementsSelectionValueExpression">Phases.TaskResourceRequirementsSelectionValueExpression</Property>
              <Property Name="TaskResourceRequirementsRequestMove">PhaseSecondaryResources.RequestMove</Property>
              <Property Name="TaskResourceRequirementsDestinationNode">PhaseSecondaryResources.RequestMoveNode</Property>
              <Property Name="TaskResourceRequirementsNumberOfResources">PhaseSecondaryResources.NumberOfSecondaryResources</Property>
              <Property Name="TaskResourceRequirementsSelectionCondition">PhaseSecondaryResources.SecondaryResourceSelectionCondition</Property>
              <Property Name="TaskMaterialRequirementsActionType">BillOfMaterials.MaterialUse</Property>
              <Property Name="TaskMaterialRequirementsMaterialName">
                <Value>BillOfMaterials.ComponentMaterial</Value>
              </Property>
              <Property Name="TaskMaterialRequirementsInventorySiteType">SpecificObject</Property>
              <Property Name="TaskMaterialRequirementsSiteObjectName">BillOfMaterials.InventoryObject</Property>
              <Property Name="TaskMaterialRequirementsQuantity">Math.If(ModelEntity.FromManufacturingOrder, ManufacturingOrders.Quantity * BillOfMaterials.RequiredQuantity, ComponentOrders.Quantity * BillOfMaterials.RequiredQuantity)</Property>
              <Property Name="TaskMaterialRequirementsLotID">Math.If( BillOfMaterials.Pegged == False, String.Empty, Math.If(ModelEntity.FromManufacturingOrder, ManufacturingOrders.MOId,  ComponentOrders.TriggeringOrder ))</Property>
              <Property Name="TaskMaterialRequirementsSkipRequirementCondition">Phases.UseBOM == False || (BillOfMaterials.Picture != List.PictureColor.NONE &amp;&amp; BillOfMaterials.Picture != ModelEntity.Picture) </Property>
              <Property Name="TaskStateAssignmentsTrigger">PhasesStateAssignments.TaskStateAssignmentsTrigger</Property>
              <Property Name="TaskStateAssignmentsStateVariableName">
                <Value>PhasesStateAssignments.StateAssignment</Value>
              </Property>
              <Property Name="TaskStateAssignmentsNewValue">PhasesStateAssignments.StateAssignmentExpression</Property>
              <Property Name="TaskReadyAddOnProcess">
                <Value>MTRServer_TaskReady</Value>
              </Property>
              <Property Name="StartingTaskAddOnProcess">
                <Value>MTRServer_TaskStarting</Value>
              </Property>
              <Property Name="FinishedTaskAddOnProcess">
                <Value>MTRServer_TaskFinished</Value>
              </Property>
              <Property Name="ConsumedMaterialAddOnProcess">
                <Value>MTRServer_OnConsumed</Value>
              </Property>
              <Property Name="ProducedMaterialAddOnProcess">
                <Value>MTRServer_OnProduced</Value>
              </Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="ProcessingLoopbackBranches">
          <Rows>
            <Properties>
              <Property Name="LoopbackFromTaskSequenceNumber">Operations.LoopbackSequenceNumber</Property>
              <Property Name="LoopbackToTaskSequenceNumber">Operations.LoopbackSequenceNumber</Property>
              <Property Name="LoopbackConditionOrProbability">Operations.LoopbackExpression</Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="SeizeConstraintLogic">
          <Rows>
            <Properties>
              <Property Name="SeizeConstraintLogicName">
                <Value>MaterialConstraints</Value>
              </Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="AssignmentsBeforeProcessing">
          <Rows>
            <Properties>
              <Property Name="AssignmentsBeforeProcessingStateVariableName">
                <Value>MTRServer.CurrentDisplayString</Value>
              </Property>
              <Property Name="AssignmentsBeforeProcessingNewValue">ModelEntity.DisplayString</Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="AssignmentsBeforeExiting">
          <Rows>
            <Properties>
              <Property Name="AssignmentsBeforeExitingStateVariableName">
                <Value>MTRServer.CurrentMaterial</Value>
              </Property>
              <Property Name="AssignmentsBeforeExitingNewValue">Math.If(MTRServer.Processing.Contents.NumberWaiting == 0, Nothing, MTRServer.CurrentMaterial)</Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="SecondaryResourcesForProcessing">
          <Value>RunInfo</Value>
          <Rows>
            <Properties />
          </Rows>
        </Property>
        <Property Name="CapitalCost" Units="USD">0.0</Property>
        <Property Name="InputBufferCostPerUse" Units="USD">0.0</Property>
        <Property Name="InputBufferHoldingCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="OutputBufferCostPerUse" Units="USD">0.0</Property>
        <Property Name="OutputBufferHoldingCostRate" Units="USD per Hour">0.0</Property>
      </Properties>
      <Graphics Layer="Everything" ExternallyVisible="True">
        <SymbolInstances CurrentSymbolIndex="0" CurrentSymbolExpression="Server.ResourceState">
          <SymbolInstance Center="0 0 0" Rotation="-1.5707963267948966" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
          </SymbolInstance>
        </SymbolInstances>
        <AttachedObjects IndexList="16 17 18">
          <Queue Queue="InputBuffer.Contents" Layer="Everything" ExternallyVisible="True" RotationChangesLocation="False" RotationChangesOrientation="False">
            <Points>
              <Point Location="-0.990873140542501 0 -0.70823967378693" />
              <Point Location="-1.9908731405425 0 -0.70823967378693" />
            </Points>
          </Queue>
          <Queue Queue="OutputBuffer.Contents" Layer="Everything" ExternallyVisible="True" RotationChangesLocation="False" RotationChangesOrientation="False">
            <Points>
              <Point Location="1.0091268594575 0 -0.70823967378693" />
              <Point Location="2.0091268594575 0 -0.70823967378693" />
            </Points>
          </Queue>
          <Queue Queue="Processing.Contents" Layer="Everything" ExternallyVisible="True" RotationChangesLocation="False" RotationChangesOrientation="False">
            <Points>
              <Point Location="-0.948839960099399 0 -2.21239797346133" />
              <Point Location="1.0511600399006 0 -2.21239797346133" />
            </Points>
          </Queue>
        </AttachedObjects>
      </Graphics>
    </Fixed>
    <Fixed Name="LogisticsArea2" Type="MTRServer" Location="74.0091268594575 0 19.2917603262131" YawDeg="0" Size="2.08920814597344 0.999103702764571 1.000000367302" Scope="Public">
      <AssociatedNodes>
        <Node Name="Input@LogisticsArea2" Type="BasicNode1" Location="74.0091268594575 0 20.7917603262131" YawDeg="0" Scope="Public">
          <Properties>
            <Property Name="InitialCost" Units="USD">0.0</Property>
            <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
            <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="DynamicSelectionRule">
              <Value>None</Value>
            </Property>
            <Property Name="SequenceExpectedOperationTime">Math.If(Entity.CanTransferInAndOutOfObjects, Node.AssociatedObject.Server.ProcessingTime, 0.0)</Property>
          </Properties>
          <Graphics Layer="Everything" ExternallyVisible="True" />
        </Node>
        <Node Name="Output@LogisticsArea2" Type="TransferNode1" Location="74.0091268594575 0 17.7917603262131" YawDeg="0" Scope="Public">
          <Properties>
            <Property Name="InitialCost" Units="USD">0.0</Property>
            <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
            <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="DynamicSelectionRule">
              <Value>None</Value>
            </Property>
            <Property Name="EntryExemptionCondition">TransferNode.RideOnTransporter &amp;&amp; !Entity.Is.Transporter</Property>
            <Property Name="DestinationType">Specific</Property>
            <Property Name="DestinationNodeName">ModelEntity.ToLocation</Property>
            <Property Name="RouteRequestDynamicSelectionRule">
              <Value>None</Value>
            </Property>
            <Property Name="RideOnTransporter">Conditional</Property>
            <Property Name="RideOnTransporterCondition">ModelEntity.UseVehicle</Property>
            <Property Name="TransporterType">Select From List</Property>
            <Property Name="TransporterName">ModelEntity.Vehicle</Property>
            <Property Name="TransporterListName">Equipment.EquipmentName</Property>
            <Property Name="TransporterReservationMethod">Reserve Best</Property>
            <Property Name="TransporterSelectionGoal">Largest Value</Property>
            <Property Name="TransporterSelectionValueExpression">Candidate.Equipment.EquipmentName.MTRVehicle.Population.FirstItem.MTRVehicle.BatteryRemaining</Property>
            <Property Name="EnteredAddOnProcess">
              <Value>PSOutputNodeChecks</Value>
            </Property>
          </Properties>
          <Graphics Layer="Everything" ExternallyVisible="True" />
        </Node>
      </AssociatedNodes>
      <IndexedSizes>
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" />
      </IndexedSizes>
      <Properties>
        <Property Name="InitialCost" Units="USD">0.0</Property>
        <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
        <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="DynamicSelectionRule" RuleGuid="60f74791-6ccc-453b-8da7-946990d495d5">
          <Value>Standard Dispatching Rule</Value>
          <Properties>
            <Property Name="DispatchingRules">
              <Value>DispatchingRules</Value>
              <Rows>
                <Properties />
              </Rows>
            </Property>
          </Properties>
        </Property>
        <Property Name="ProcessingTasks">
          <Value>Phases</Value>
          <Rows>
            <Properties>
              <Property Name="TaskIDNumber">Phases.TaskIDNumber</Property>
              <Property Name="TaskSequenceNumber">Phases.SequenceNumber</Property>
              <Property Name="TaskName">Phases.TaskName</Property>
              <Property Name="TaskBranchType">Conditional</Property>
              <Property Name="TaskConditionOrProbability">Resources.PhaseSelectionExpression</Property>
              <Property Name="TaskProcessingTime">Math.If( Phases.QuantityBasedTaskProcessingTime, Math.If( ModelEntity.FromManufacturingOrder, ManufacturingOrders.Quantity * Phases.TaskProcessingTime, ComponentOrders.Quantity * Phases.TaskProcessingTime), Phases.TaskProcessingTime)</Property>
              <Property Name="TaskProcessName">
                <Value>Phases.TaskProcessName</Value>
              </Property>
              <Property Name="TaskSubmodelEntityCreationMethod">Phases.TaskSubmodelEntityCreationMethod</Property>
              <Property Name="TaskSubmodelEntityType">Phases.TaskSubmodelEntityType</Property>
              <Property Name="TaskSubmodelStartingNode">Phases.TaskSubmodelStartingNode</Property>
              <Property Name="TaskSaveOriginalEntityReference">
                <Value>Phases.TaskSaveOriginalEntityReference</Value>
              </Property>
              <Property Name="TaskChangeoverLogicName">
                <Value>Phases.TaskChangeoverLogicName</Value>
              </Property>
              <Property Name="TaskImmediatePredecessors">Phases.TaskImmediatePredecessors</Property>
              <Property Name="TaskImmediateSuccessors">Phases.TaskImmediateSuccessors</Property>
              <Property Name="TaskAutoCancelTrigger">None</Property>
              <Property Name="TaskResourceRequirementsResourceType">PhaseSecondaryResources.ResourceType</Property>
              <Property Name="TaskResourceRequirementsResourceName">PhaseSecondaryResources.SecondaryResourceName</Property>
              <Property Name="TaskResourceRequirementsResourceListName">PhaseSecondaryResources.SecondaryResourceList</Property>
              <Property Name="TaskResourceRequirementsSelectionValueExpression">Phases.TaskResourceRequirementsSelectionValueExpression</Property>
              <Property Name="TaskResourceRequirementsRequestMove">PhaseSecondaryResources.RequestMove</Property>
              <Property Name="TaskResourceRequirementsDestinationNode">PhaseSecondaryResources.RequestMoveNode</Property>
              <Property Name="TaskResourceRequirementsNumberOfResources">PhaseSecondaryResources.NumberOfSecondaryResources</Property>
              <Property Name="TaskResourceRequirementsSelectionCondition">PhaseSecondaryResources.SecondaryResourceSelectionCondition</Property>
              <Property Name="TaskMaterialRequirementsActionType">BillOfMaterials.MaterialUse</Property>
              <Property Name="TaskMaterialRequirementsMaterialName">
                <Value>BillOfMaterials.ComponentMaterial</Value>
              </Property>
              <Property Name="TaskMaterialRequirementsInventorySiteType">SpecificObject</Property>
              <Property Name="TaskMaterialRequirementsSiteObjectName">BillOfMaterials.InventoryObject</Property>
              <Property Name="TaskMaterialRequirementsQuantity">Math.If(ModelEntity.FromManufacturingOrder, ManufacturingOrders.Quantity * BillOfMaterials.RequiredQuantity, ComponentOrders.Quantity * BillOfMaterials.RequiredQuantity)</Property>
              <Property Name="TaskMaterialRequirementsLotID">Math.If( BillOfMaterials.Pegged == False, String.Empty, Math.If(ModelEntity.FromManufacturingOrder, ManufacturingOrders.MOId,  ComponentOrders.TriggeringOrder ))</Property>
              <Property Name="TaskMaterialRequirementsSkipRequirementCondition">Phases.UseBOM == False || (BillOfMaterials.Picture != List.PictureColor.NONE &amp;&amp; BillOfMaterials.Picture != ModelEntity.Picture) </Property>
              <Property Name="TaskStateAssignmentsTrigger">PhasesStateAssignments.TaskStateAssignmentsTrigger</Property>
              <Property Name="TaskStateAssignmentsStateVariableName">
                <Value>PhasesStateAssignments.StateAssignment</Value>
              </Property>
              <Property Name="TaskStateAssignmentsNewValue">PhasesStateAssignments.StateAssignmentExpression</Property>
              <Property Name="TaskReadyAddOnProcess">
                <Value>MTRServer_TaskReady</Value>
              </Property>
              <Property Name="StartingTaskAddOnProcess">
                <Value>MTRServer_TaskStarting</Value>
              </Property>
              <Property Name="FinishedTaskAddOnProcess">
                <Value>MTRServer_TaskFinished</Value>
              </Property>
              <Property Name="ConsumedMaterialAddOnProcess">
                <Value>MTRServer_OnConsumed</Value>
              </Property>
              <Property Name="ProducedMaterialAddOnProcess">
                <Value>MTRServer_OnProduced</Value>
              </Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="ProcessingLoopbackBranches">
          <Rows>
            <Properties>
              <Property Name="LoopbackFromTaskSequenceNumber">Operations.LoopbackSequenceNumber</Property>
              <Property Name="LoopbackToTaskSequenceNumber">Operations.LoopbackSequenceNumber</Property>
              <Property Name="LoopbackConditionOrProbability">Operations.LoopbackExpression</Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="SeizeConstraintLogic">
          <Rows>
            <Properties>
              <Property Name="SeizeConstraintLogicName">
                <Value>MaterialConstraints</Value>
              </Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="AssignmentsBeforeProcessing">
          <Rows>
            <Properties>
              <Property Name="AssignmentsBeforeProcessingStateVariableName">
                <Value>MTRServer.CurrentDisplayString</Value>
              </Property>
              <Property Name="AssignmentsBeforeProcessingNewValue">ModelEntity.DisplayString</Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="AssignmentsBeforeExiting">
          <Rows>
            <Properties>
              <Property Name="AssignmentsBeforeExitingStateVariableName">
                <Value>MTRServer.CurrentMaterial</Value>
              </Property>
              <Property Name="AssignmentsBeforeExitingNewValue">Math.If(MTRServer.Processing.Contents.NumberWaiting == 0, Nothing, MTRServer.CurrentMaterial)</Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="SecondaryResourcesForProcessing">
          <Value>RunInfo</Value>
          <Rows>
            <Properties />
          </Rows>
        </Property>
        <Property Name="CapitalCost" Units="USD">0.0</Property>
        <Property Name="InputBufferCostPerUse" Units="USD">0.0</Property>
        <Property Name="InputBufferHoldingCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="OutputBufferCostPerUse" Units="USD">0.0</Property>
        <Property Name="OutputBufferHoldingCostRate" Units="USD per Hour">0.0</Property>
      </Properties>
      <Graphics Layer="Everything" ExternallyVisible="True">
        <SymbolInstances CurrentSymbolIndex="0" CurrentSymbolExpression="Server.ResourceState">
          <SymbolInstance Center="0 0 0" Rotation="1.5707963267948966" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
          </SymbolInstance>
        </SymbolInstances>
        <AttachedObjects IndexList="19 20 21">
          <Queue Queue="InputBuffer.Contents" Layer="Everything" ExternallyVisible="True" RotationChangesLocation="False" RotationChangesOrientation="False">
            <Points>
              <Point Location="73.0091268594575 0 19.7917603262131" />
              <Point Location="72.0091268594575 0 19.7917603262131" />
            </Points>
          </Queue>
          <Queue Queue="OutputBuffer.Contents" Layer="Everything" ExternallyVisible="True" RotationChangesLocation="False" RotationChangesOrientation="False">
            <Points>
              <Point Location="75.0091268594575 0 19.7917603262131" />
              <Point Location="76.0091268594575 0 19.7917603262131" />
            </Points>
          </Queue>
          <Queue Queue="Processing.Contents" Layer="Everything" ExternallyVisible="True" RotationChangesLocation="False" RotationChangesOrientation="False">
            <Points>
              <Point Location="73.0511600399006 0 18.2876020265387" />
              <Point Location="75.0511600399006 0 18.2876020265387" />
            </Points>
          </Queue>
        </AttachedObjects>
      </Graphics>
    </Fixed>
    <Fixed Name="WorkCell2" Type="MTRTransferServer" Location="52.0091268594575 0 -13.7082396737869" YawDeg="0" Size="2.08920814597344 0.999103702764571 1.000000367302" Scope="Public">
      <AssociatedNodes>
        <Node Name="Input@WorkCell2" Type="BasicNode1" Location="52.0091268594575 0 -12.2082396737869" YawDeg="0" Scope="Public">
          <Properties>
            <Property Name="InitialCost" Units="USD">0.0</Property>
            <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
            <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="DynamicSelectionRule">
              <Value>None</Value>
            </Property>
            <Property Name="SequenceExpectedOperationTime">Math.If(Entity.CanTransferInAndOutOfObjects, Node.AssociatedObject.Server.ProcessingTime, 0.0)</Property>
          </Properties>
          <Graphics Layer="Everything" ExternallyVisible="True" />
        </Node>
        <Node Name="Output@WorkCell2" Type="TransferNode1" Location="52.0091268594575 0 -15.2082396737869" YawDeg="0" Scope="Public">
          <Properties>
            <Property Name="InitialCost" Units="USD">0.0</Property>
            <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
            <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="DynamicSelectionRule">
              <Value>None</Value>
            </Property>
            <Property Name="EntryExemptionCondition">TransferNode.RideOnTransporter &amp;&amp; !Entity.Is.Transporter</Property>
            <Property Name="DestinationType">Use Custom Routing Group</Property>
            <Property Name="DestinationNodeListName">RoutingDestinations.Node</Property>
            <Property Name="DestinationRoutingGroupName">
              <Value>MTRTransferServerRoutingGroup</Value>
            </Property>
            <Property Name="DestinationSelectionCondition">String.Contains(Candidate.Node.Name, ModelEntity.Location.Parent.Node.AssociatedObject.Name)</Property>
            <Property Name="RouteConstraintLogic">
              <Rows>
                <Properties>
                  <Property Name="RouteConstraintLogicName">
                    <Value>MaterialConstraints</Value>
                  </Property>
                </Properties>
              </Rows>
            </Property>
            <Property Name="RouteRequestDynamicSelectionRule" RuleGuid="60f74791-6ccc-453b-8da7-946990d495d5">
              <Value>Standard Dispatching Rule</Value>
              <Properties>
                <Property Name="DispatchingRules">
                  <Rows>
                    <Properties>
                      <Property Name="RepeatingAttributeValueExpression">DispatchingRules.AttributeValueExpression</Property>
                      <Property Name="RepeatingCampaignValueExpression">DispatchingRules.CampaignValueExpression</Property>
                    </Properties>
                  </Rows>
                </Property>
              </Properties>
            </Property>
            <Property Name="RideOnTransporter">Conditional</Property>
            <Property Name="RideOnTransporterCondition">ModelEntity.UseVehicle</Property>
            <Property Name="TransporterType">Select From List</Property>
            <Property Name="TransporterListName">Equipment.EquipmentName</Property>
            <Property Name="TransporterReservationMethod">Reserve Best</Property>
          </Properties>
          <Graphics Layer="Everything" ExternallyVisible="True" />
        </Node>
      </AssociatedNodes>
      <IndexedSizes>
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" />
      </IndexedSizes>
      <Properties>
        <Property Name="InitialCost" Units="USD">0.0</Property>
        <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
        <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="DynamicSelectionRule" RuleGuid="60f74791-6ccc-453b-8da7-946990d495d5">
          <Value>Standard Dispatching Rule</Value>
          <Properties />
        </Property>
        <Property Name="ProcessingTasks">
          <Value>Phases</Value>
          <Rows>
            <Properties>
              <Property Name="TaskName">Phases.TaskName</Property>
              <Property Name="TaskBranchType">Conditional</Property>
              <Property Name="TaskConditionOrProbability">Resources.PhaseSelectionExpression</Property>
              <Property Name="TaskProcessingTime">0.0001</Property>
              <Property Name="TaskAutoCancelTrigger">None</Property>
              <Property Name="TaskMaterialRequirementsActionType">BillOfMaterials.MaterialUse</Property>
              <Property Name="TaskMaterialRequirementsMaterialName">
                <Value>BillOfMaterials.ComponentMaterial</Value>
              </Property>
              <Property Name="TaskMaterialRequirementsInventorySiteType">SpecificObject</Property>
              <Property Name="TaskMaterialRequirementsSiteObjectName">BillOfMaterials.InventoryObject</Property>
              <Property Name="TaskMaterialRequirementsQuantity">Math.If(ModelEntity.FromManufacturingOrder, BillOfMaterials.RequiredQuantity, ComponentOrders.Quantity * BillOfMaterials.RequiredQuantity)</Property>
              <Property Name="TaskStateAssignmentsTrigger">PhasesStateAssignments.TaskStateAssignmentsTrigger</Property>
              <Property Name="TaskStateAssignmentsStateVariableName">
                <Value>PhasesStateAssignments.StateAssignment</Value>
              </Property>
              <Property Name="TaskStateAssignmentsNewValue">PhasesStateAssignments.StateAssignmentExpression</Property>
              <Property Name="TaskReadyAddOnProcess">
                <Value>MTRServer_TaskReady</Value>
              </Property>
              <Property Name="StartingTaskAddOnProcess">
                <Value>MTRServer_TaskStarting</Value>
              </Property>
              <Property Name="FinishedTaskAddOnProcess">
                <Value>MTRServer_TaskFinished</Value>
              </Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="CapitalCost" Units="USD">0.0</Property>
        <Property Name="InputBufferCostPerUse" Units="USD">0.0</Property>
        <Property Name="InputBufferHoldingCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="OutputBufferCostPerUse" Units="USD">0.0</Property>
        <Property Name="OutputBufferHoldingCostRate" Units="USD per Hour">0.0</Property>
      </Properties>
      <Graphics Layer="Everything" ExternallyVisible="True">
        <SymbolInstances CurrentSymbolIndex="0" CurrentSymbolExpression="Server.ResourceState">
          <SymbolInstance Center="0 0 0" Rotation="1.5707963267948966" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
            <Decorations>
              <Decoration SurfacePath="0,0" SurfaceId="0" DynamicPath="True">
                <MaterialRef Id="cd06413e-6915-44c7-b568-d5902c15b5b1" />
              </Decoration>
            </Decorations>
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
            <Decorations>
              <Decoration SurfacePath="0,0" SurfaceId="0" DynamicPath="True">
                <MaterialRef Id="6eaf912b-755e-40af-b2e6-14439ae1ef6c" />
              </Decoration>
            </Decorations>
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
            <Decorations>
              <Decoration SurfacePath="0,0" SurfaceId="0" DynamicPath="True">
                <MaterialRef Id="738761fd-0eb9-4f75-9f9c-9e29ecad20eb" />
              </Decoration>
            </Decorations>
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
            <Decorations>
              <Decoration SurfacePath="0,0" SurfaceId="0" DynamicPath="True">
                <MaterialRef Id="c9da08ff-feb8-4b45-9ada-e356072e021f" />
              </Decoration>
            </Decorations>
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
            <Decorations>
              <Decoration SurfacePath="0,0" SurfaceId="0" DynamicPath="True">
                <MaterialRef Id="64214342-cc19-40fd-8d48-9f0636c57361" />
              </Decoration>
            </Decorations>
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
            <Decorations>
              <Decoration SurfacePath="0,0" SurfaceId="0" DynamicPath="True">
                <MaterialRef Id="63f12991-9daf-4351-a800-3c9804795f11" />
              </Decoration>
            </Decorations>
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
            <Decorations>
              <Decoration SurfacePath="0,0" SurfaceId="0" DynamicPath="True">
                <MaterialRef Id="3d97d1bf-98db-476a-912e-b71fdc8310c3" />
              </Decoration>
            </Decorations>
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
            <Decorations>
              <Decoration SurfacePath="0,0" SurfaceId="0" DynamicPath="True">
                <MaterialRef Id="13a20194-f3fb-4f5f-b86e-e6d700275b3e" />
              </Decoration>
            </Decorations>
          </SymbolInstance>
        </SymbolInstances>
        <AttachedObjects IndexList="22 23 24">
          <Queue Queue="InputBuffer.Contents" Layer="Everything" ExternallyVisible="True">
            <Points>
              <Point Location="52.5091268594575 0 -12.7082396737869" />
              <Point Location="52.5091268594575 0 -9.7082396737869" />
            </Points>
          </Queue>
          <Queue Queue="OutputBuffer.Contents" Layer="Everything" ExternallyVisible="True">
            <Points>
              <Point Location="52.5091268594575 0 -14.7082396737869" />
              <Point Location="52.5091268594575 0 -17.7082396737869" />
            </Points>
          </Queue>
          <Queue Queue="Processing.Contents" Layer="Everything" ExternallyVisible="True">
            <Points>
              <Point Location="51.0091268594575 0 -12.7082396737869" />
              <Point Location="51.0091268594575 0 -14.7082396737869" />
            </Points>
          </Queue>
        </AttachedObjects>
      </Graphics>
    </Fixed>
    <Fixed Name="WorkCell2_1" Type="MTRServer" Location="39.0091268594575 0 -33.2082396737869" YawDeg="270" Size="2.08920814597344 0.999103702764571 1.000000367302" Scope="Public">
      <AssociatedNodes>
        <Node Name="Input@WorkCell2_1" Type="BasicNode1" Location="40.5091268594575 0 -33.2082396737869" YawDeg="270" Scope="Public">
          <Properties>
            <Property Name="InitialCost" Units="USD">0.0</Property>
            <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
            <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="DynamicSelectionRule">
              <Value>None</Value>
            </Property>
            <Property Name="SequenceExpectedOperationTime">Math.If(Entity.CanTransferInAndOutOfObjects, Node.AssociatedObject.Server.ProcessingTime, 0.0)</Property>
          </Properties>
          <Graphics Layer="Everything" ExternallyVisible="True" />
        </Node>
        <Node Name="Output@WorkCell2_1" Type="TransferNode1" Location="37.5091268594575 0 -33.2082396737869" YawDeg="270" Scope="Public">
          <Properties>
            <Property Name="InitialCost" Units="USD">0.0</Property>
            <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
            <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="DynamicSelectionRule">
              <Value>None</Value>
            </Property>
            <Property Name="EntryExemptionCondition">TransferNode.RideOnTransporter &amp;&amp; !Entity.Is.Transporter</Property>
            <Property Name="DestinationType">Specific</Property>
            <Property Name="DestinationNodeName">ModelEntity.ToLocation</Property>
            <Property Name="RouteRequestDynamicSelectionRule">
              <Value>None</Value>
            </Property>
            <Property Name="RideOnTransporter">Conditional</Property>
            <Property Name="RideOnTransporterCondition">ModelEntity.UseVehicle</Property>
            <Property Name="TransporterType">Select From List</Property>
            <Property Name="TransporterName">ModelEntity.Vehicle</Property>
            <Property Name="TransporterListName">Equipment.EquipmentName</Property>
            <Property Name="TransporterReservationMethod">Reserve Best</Property>
            <Property Name="TransporterSelectionGoal">Largest Value</Property>
            <Property Name="TransporterSelectionValueExpression">Candidate.Equipment.EquipmentName.MTRVehicle.Population.FirstItem.MTRVehicle.BatteryRemaining</Property>
            <Property Name="EnteredAddOnProcess">
              <Value>PSOutputNodeChecks</Value>
            </Property>
          </Properties>
          <Graphics Layer="Everything" ExternallyVisible="True" />
        </Node>
      </AssociatedNodes>
      <IndexedSizes>
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="270" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
      </IndexedSizes>
      <Properties>
        <Property Name="InitialCost" Units="USD">0.0</Property>
        <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
        <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="DynamicSelectionRule" RuleGuid="60f74791-6ccc-453b-8da7-946990d495d5">
          <Value>Standard Dispatching Rule</Value>
          <Properties>
            <Property Name="DispatchingRules">
              <Value>DispatchingRules</Value>
              <Rows>
                <Properties />
              </Rows>
            </Property>
          </Properties>
        </Property>
        <Property Name="ProcessingTasks">
          <Value>Phases</Value>
          <Rows>
            <Properties>
              <Property Name="TaskIDNumber">Phases.TaskIDNumber</Property>
              <Property Name="TaskSequenceNumber">Phases.SequenceNumber</Property>
              <Property Name="TaskName">Phases.TaskName</Property>
              <Property Name="TaskBranchType">Conditional</Property>
              <Property Name="TaskConditionOrProbability">Resources.PhaseSelectionExpression</Property>
              <Property Name="TaskProcessingTime">Math.If( Phases.QuantityBasedTaskProcessingTime, Math.If( ModelEntity.FromManufacturingOrder, ManufacturingOrders.Quantity * Phases.TaskProcessingTime, ComponentOrders.Quantity * Phases.TaskProcessingTime), Phases.TaskProcessingTime)</Property>
              <Property Name="TaskProcessName">
                <Value>Phases.TaskProcessName</Value>
              </Property>
              <Property Name="TaskSubmodelEntityCreationMethod">Phases.TaskSubmodelEntityCreationMethod</Property>
              <Property Name="TaskSubmodelEntityType">Phases.TaskSubmodelEntityType</Property>
              <Property Name="TaskSubmodelStartingNode">Phases.TaskSubmodelStartingNode</Property>
              <Property Name="TaskSaveOriginalEntityReference">
                <Value>Phases.TaskSaveOriginalEntityReference</Value>
              </Property>
              <Property Name="TaskChangeoverLogicName">
                <Value>Phases.TaskChangeoverLogicName</Value>
              </Property>
              <Property Name="TaskImmediatePredecessors">Phases.TaskImmediatePredecessors</Property>
              <Property Name="TaskImmediateSuccessors">Phases.TaskImmediateSuccessors</Property>
              <Property Name="TaskAutoCancelTrigger">None</Property>
              <Property Name="TaskResourceRequirementsResourceType">PhaseSecondaryResources.ResourceType</Property>
              <Property Name="TaskResourceRequirementsResourceName">PhaseSecondaryResources.SecondaryResourceName</Property>
              <Property Name="TaskResourceRequirementsResourceListName">PhaseSecondaryResources.SecondaryResourceList</Property>
              <Property Name="TaskResourceRequirementsSelectionValueExpression">Phases.TaskResourceRequirementsSelectionValueExpression</Property>
              <Property Name="TaskResourceRequirementsRequestMove">PhaseSecondaryResources.RequestMove</Property>
              <Property Name="TaskResourceRequirementsDestinationNode">PhaseSecondaryResources.RequestMoveNode</Property>
              <Property Name="TaskResourceRequirementsNumberOfResources">PhaseSecondaryResources.NumberOfSecondaryResources</Property>
              <Property Name="TaskResourceRequirementsSelectionCondition">PhaseSecondaryResources.SecondaryResourceSelectionCondition</Property>
              <Property Name="TaskMaterialRequirementsActionType">BillOfMaterials.MaterialUse</Property>
              <Property Name="TaskMaterialRequirementsMaterialName">
                <Value>BillOfMaterials.ComponentMaterial</Value>
              </Property>
              <Property Name="TaskMaterialRequirementsInventorySiteType">SpecificObject</Property>
              <Property Name="TaskMaterialRequirementsSiteObjectName">BillOfMaterials.InventoryObject</Property>
              <Property Name="TaskMaterialRequirementsQuantity">Math.If(ModelEntity.FromManufacturingOrder, ManufacturingOrders.Quantity * BillOfMaterials.RequiredQuantity, ComponentOrders.Quantity * BillOfMaterials.RequiredQuantity)</Property>
              <Property Name="TaskMaterialRequirementsLotID">Math.If( BillOfMaterials.Pegged == False, String.Empty, Math.If(ModelEntity.FromManufacturingOrder, ManufacturingOrders.MOId,  ComponentOrders.TriggeringOrder ))</Property>
              <Property Name="TaskMaterialRequirementsSkipRequirementCondition">Phases.UseBOM == False || (BillOfMaterials.Picture != List.PictureColor.NONE &amp;&amp; BillOfMaterials.Picture != ModelEntity.Picture) </Property>
              <Property Name="TaskStateAssignmentsTrigger">PhasesStateAssignments.TaskStateAssignmentsTrigger</Property>
              <Property Name="TaskStateAssignmentsStateVariableName">
                <Value>PhasesStateAssignments.StateAssignment</Value>
              </Property>
              <Property Name="TaskStateAssignmentsNewValue">PhasesStateAssignments.StateAssignmentExpression</Property>
              <Property Name="TaskReadyAddOnProcess">
                <Value>MTRServer_TaskReady</Value>
              </Property>
              <Property Name="StartingTaskAddOnProcess">
                <Value>MTRServer_TaskStarting</Value>
              </Property>
              <Property Name="FinishedTaskAddOnProcess">
                <Value>MTRServer_TaskFinished</Value>
              </Property>
              <Property Name="ConsumedMaterialAddOnProcess">
                <Value>MTRServer_OnConsumed</Value>
              </Property>
              <Property Name="ProducedMaterialAddOnProcess">
                <Value>MTRServer_OnProduced</Value>
              </Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="ProcessingLoopbackBranches">
          <Rows>
            <Properties>
              <Property Name="LoopbackFromTaskSequenceNumber">Operations.LoopbackSequenceNumber</Property>
              <Property Name="LoopbackToTaskSequenceNumber">Operations.LoopbackSequenceNumber</Property>
              <Property Name="LoopbackConditionOrProbability">Operations.LoopbackExpression</Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="SeizeConstraintLogic">
          <Rows>
            <Properties>
              <Property Name="SeizeConstraintLogicName">
                <Value>MaterialConstraints</Value>
              </Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="AssignmentsBeforeProcessing">
          <Rows>
            <Properties>
              <Property Name="AssignmentsBeforeProcessingStateVariableName">
                <Value>MTRServer.CurrentDisplayString</Value>
              </Property>
              <Property Name="AssignmentsBeforeProcessingNewValue">ModelEntity.DisplayString</Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="AssignmentsBeforeExiting">
          <Rows>
            <Properties>
              <Property Name="AssignmentsBeforeExitingStateVariableName">
                <Value>MTRServer.CurrentMaterial</Value>
              </Property>
              <Property Name="AssignmentsBeforeExitingNewValue">Math.If(MTRServer.Processing.Contents.NumberWaiting == 0, Nothing, MTRServer.CurrentMaterial)</Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="SecondaryResourcesForProcessing">
          <Value>RunInfo</Value>
          <Rows>
            <Properties />
          </Rows>
        </Property>
        <Property Name="CapitalCost" Units="USD">0.0</Property>
        <Property Name="InputBufferCostPerUse" Units="USD">0.0</Property>
        <Property Name="InputBufferHoldingCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="OutputBufferCostPerUse" Units="USD">0.0</Property>
        <Property Name="OutputBufferHoldingCostRate" Units="USD per Hour">0.0</Property>
      </Properties>
      <Graphics Layer="Everything" ExternallyVisible="True">
        <SymbolInstances CurrentSymbolIndex="0" CurrentSymbolExpression="Server.ResourceState">
          <SymbolInstance Center="0 0 0" Rotation="-3.1415926535897931" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
          </SymbolInstance>
        </SymbolInstances>
        <AttachedObjects IndexList="25 26 27">
          <Queue Queue="InputBuffer.Contents" Layer="Everything" ExternallyVisible="True" RotationChangesLocation="False" RotationChangesOrientation="False">
            <Points>
              <Point Location="38.0091268594575 0 -32.7082396737869" />
              <Point Location="37.0091268594575 0 -32.7082396737869" />
            </Points>
          </Queue>
          <Queue Queue="OutputBuffer.Contents" Layer="Everything" ExternallyVisible="True" RotationChangesLocation="False" RotationChangesOrientation="False">
            <Points>
              <Point Location="40.0091268594575 0 -32.7082396737869" />
              <Point Location="41.0091268594575 0 -32.7082396737869" />
            </Points>
          </Queue>
          <Queue Queue="Processing.Contents" Layer="Everything" ExternallyVisible="True" RotationChangesLocation="False" RotationChangesOrientation="False">
            <Points>
              <Point Location="38.0511600399006 0 -34.2123979734613" />
              <Point Location="40.0511600399006 0 -34.2123979734613" />
            </Points>
          </Queue>
        </AttachedObjects>
      </Graphics>
    </Fixed>
    <Fixed Name="WorkCell2_2" Type="MTRServer" Location="38.7591268594575 0 -27.4582396737869" YawDeg="270" Size="2.08920814597344 0.999103702764571 1.000000367302" Scope="Public">
      <AssociatedNodes>
        <Node Name="Input@WorkCell2_2" Type="BasicNode1" Location="40.2591268594575 0 -27.4582396737869" YawDeg="270" Scope="Public">
          <Properties>
            <Property Name="InitialCost" Units="USD">0.0</Property>
            <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
            <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="DynamicSelectionRule">
              <Value>None</Value>
            </Property>
            <Property Name="SequenceExpectedOperationTime">Math.If(Entity.CanTransferInAndOutOfObjects, Node.AssociatedObject.Server.ProcessingTime, 0.0)</Property>
          </Properties>
          <Graphics Layer="Everything" ExternallyVisible="True" />
        </Node>
        <Node Name="Output@WorkCell2_2" Type="TransferNode1" Location="37.2591268594575 0 -27.4582396737869" YawDeg="270" Scope="Public">
          <Properties>
            <Property Name="InitialCost" Units="USD">0.0</Property>
            <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
            <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="DynamicSelectionRule">
              <Value>None</Value>
            </Property>
            <Property Name="EntryExemptionCondition">TransferNode.RideOnTransporter &amp;&amp; !Entity.Is.Transporter</Property>
            <Property Name="DestinationType">Specific</Property>
            <Property Name="DestinationNodeName">ModelEntity.ToLocation</Property>
            <Property Name="RouteRequestDynamicSelectionRule">
              <Value>None</Value>
            </Property>
            <Property Name="RideOnTransporter">Conditional</Property>
            <Property Name="RideOnTransporterCondition">ModelEntity.UseVehicle</Property>
            <Property Name="TransporterType">Select From List</Property>
            <Property Name="TransporterName">ModelEntity.Vehicle</Property>
            <Property Name="TransporterListName">Equipment.EquipmentName</Property>
            <Property Name="TransporterReservationMethod">Reserve Best</Property>
            <Property Name="TransporterSelectionGoal">Largest Value</Property>
            <Property Name="TransporterSelectionValueExpression">Candidate.Equipment.EquipmentName.MTRVehicle.Population.FirstItem.MTRVehicle.BatteryRemaining</Property>
            <Property Name="EnteredAddOnProcess">
              <Value>PSOutputNodeChecks</Value>
            </Property>
          </Properties>
          <Graphics Layer="Everything" ExternallyVisible="True" />
        </Node>
      </AssociatedNodes>
      <IndexedSizes>
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="270" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
      </IndexedSizes>
      <Properties>
        <Property Name="InitialCost" Units="USD">0.0</Property>
        <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
        <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="DynamicSelectionRule" RuleGuid="60f74791-6ccc-453b-8da7-946990d495d5">
          <Value>Standard Dispatching Rule</Value>
          <Properties>
            <Property Name="DispatchingRules">
              <Value>DispatchingRules</Value>
              <Rows>
                <Properties />
              </Rows>
            </Property>
          </Properties>
        </Property>
        <Property Name="ProcessingTasks">
          <Value>Phases</Value>
          <Rows>
            <Properties>
              <Property Name="TaskIDNumber">Phases.TaskIDNumber</Property>
              <Property Name="TaskSequenceNumber">Phases.SequenceNumber</Property>
              <Property Name="TaskName">Phases.TaskName</Property>
              <Property Name="TaskBranchType">Conditional</Property>
              <Property Name="TaskConditionOrProbability">Resources.PhaseSelectionExpression</Property>
              <Property Name="TaskProcessingTime">Math.If( Phases.QuantityBasedTaskProcessingTime, Math.If( ModelEntity.FromManufacturingOrder, ManufacturingOrders.Quantity * Phases.TaskProcessingTime, ComponentOrders.Quantity * Phases.TaskProcessingTime), Phases.TaskProcessingTime)</Property>
              <Property Name="TaskProcessName">
                <Value>Phases.TaskProcessName</Value>
              </Property>
              <Property Name="TaskSubmodelEntityCreationMethod">Phases.TaskSubmodelEntityCreationMethod</Property>
              <Property Name="TaskSubmodelEntityType">Phases.TaskSubmodelEntityType</Property>
              <Property Name="TaskSubmodelStartingNode">Phases.TaskSubmodelStartingNode</Property>
              <Property Name="TaskSaveOriginalEntityReference">
                <Value>Phases.TaskSaveOriginalEntityReference</Value>
              </Property>
              <Property Name="TaskChangeoverLogicName">
                <Value>Phases.TaskChangeoverLogicName</Value>
              </Property>
              <Property Name="TaskImmediatePredecessors">Phases.TaskImmediatePredecessors</Property>
              <Property Name="TaskImmediateSuccessors">Phases.TaskImmediateSuccessors</Property>
              <Property Name="TaskAutoCancelTrigger">None</Property>
              <Property Name="TaskResourceRequirementsResourceType">PhaseSecondaryResources.ResourceType</Property>
              <Property Name="TaskResourceRequirementsResourceName">PhaseSecondaryResources.SecondaryResourceName</Property>
              <Property Name="TaskResourceRequirementsResourceListName">PhaseSecondaryResources.SecondaryResourceList</Property>
              <Property Name="TaskResourceRequirementsSelectionValueExpression">Phases.TaskResourceRequirementsSelectionValueExpression</Property>
              <Property Name="TaskResourceRequirementsRequestMove">PhaseSecondaryResources.RequestMove</Property>
              <Property Name="TaskResourceRequirementsDestinationNode">PhaseSecondaryResources.RequestMoveNode</Property>
              <Property Name="TaskResourceRequirementsNumberOfResources">PhaseSecondaryResources.NumberOfSecondaryResources</Property>
              <Property Name="TaskResourceRequirementsSelectionCondition">PhaseSecondaryResources.SecondaryResourceSelectionCondition</Property>
              <Property Name="TaskMaterialRequirementsActionType">BillOfMaterials.MaterialUse</Property>
              <Property Name="TaskMaterialRequirementsMaterialName">
                <Value>BillOfMaterials.ComponentMaterial</Value>
              </Property>
              <Property Name="TaskMaterialRequirementsInventorySiteType">SpecificObject</Property>
              <Property Name="TaskMaterialRequirementsSiteObjectName">BillOfMaterials.InventoryObject</Property>
              <Property Name="TaskMaterialRequirementsQuantity">Math.If(ModelEntity.FromManufacturingOrder, ManufacturingOrders.Quantity * BillOfMaterials.RequiredQuantity, ComponentOrders.Quantity * BillOfMaterials.RequiredQuantity)</Property>
              <Property Name="TaskMaterialRequirementsLotID">Math.If( BillOfMaterials.Pegged == False, String.Empty, Math.If(ModelEntity.FromManufacturingOrder, ManufacturingOrders.MOId,  ComponentOrders.TriggeringOrder ))</Property>
              <Property Name="TaskMaterialRequirementsSkipRequirementCondition">Phases.UseBOM == False || (BillOfMaterials.Picture != List.PictureColor.NONE &amp;&amp; BillOfMaterials.Picture != ModelEntity.Picture) </Property>
              <Property Name="TaskStateAssignmentsTrigger">PhasesStateAssignments.TaskStateAssignmentsTrigger</Property>
              <Property Name="TaskStateAssignmentsStateVariableName">
                <Value>PhasesStateAssignments.StateAssignment</Value>
              </Property>
              <Property Name="TaskStateAssignmentsNewValue">PhasesStateAssignments.StateAssignmentExpression</Property>
              <Property Name="TaskReadyAddOnProcess">
                <Value>MTRServer_TaskReady</Value>
              </Property>
              <Property Name="StartingTaskAddOnProcess">
                <Value>MTRServer_TaskStarting</Value>
              </Property>
              <Property Name="FinishedTaskAddOnProcess">
                <Value>MTRServer_TaskFinished</Value>
              </Property>
              <Property Name="ConsumedMaterialAddOnProcess">
                <Value>MTRServer_OnConsumed</Value>
              </Property>
              <Property Name="ProducedMaterialAddOnProcess">
                <Value>MTRServer_OnProduced</Value>
              </Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="ProcessingLoopbackBranches">
          <Rows>
            <Properties>
              <Property Name="LoopbackFromTaskSequenceNumber">Operations.LoopbackSequenceNumber</Property>
              <Property Name="LoopbackToTaskSequenceNumber">Operations.LoopbackSequenceNumber</Property>
              <Property Name="LoopbackConditionOrProbability">Operations.LoopbackExpression</Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="SeizeConstraintLogic">
          <Rows>
            <Properties>
              <Property Name="SeizeConstraintLogicName">
                <Value>MaterialConstraints</Value>
              </Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="AssignmentsBeforeProcessing">
          <Rows>
            <Properties>
              <Property Name="AssignmentsBeforeProcessingStateVariableName">
                <Value>MTRServer.CurrentDisplayString</Value>
              </Property>
              <Property Name="AssignmentsBeforeProcessingNewValue">ModelEntity.DisplayString</Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="AssignmentsBeforeExiting">
          <Rows>
            <Properties>
              <Property Name="AssignmentsBeforeExitingStateVariableName">
                <Value>MTRServer.CurrentMaterial</Value>
              </Property>
              <Property Name="AssignmentsBeforeExitingNewValue">Math.If(MTRServer.Processing.Contents.NumberWaiting == 0, Nothing, MTRServer.CurrentMaterial)</Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="SecondaryResourcesForProcessing">
          <Value>RunInfo</Value>
          <Rows>
            <Properties />
          </Rows>
        </Property>
        <Property Name="CapitalCost" Units="USD">0.0</Property>
        <Property Name="InputBufferCostPerUse" Units="USD">0.0</Property>
        <Property Name="InputBufferHoldingCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="OutputBufferCostPerUse" Units="USD">0.0</Property>
        <Property Name="OutputBufferHoldingCostRate" Units="USD per Hour">0.0</Property>
      </Properties>
      <Graphics Layer="Everything" ExternallyVisible="True">
        <SymbolInstances CurrentSymbolIndex="0" CurrentSymbolExpression="Server.ResourceState">
          <SymbolInstance Center="0 0 0" Rotation="-3.1415926535897931" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
          </SymbolInstance>
        </SymbolInstances>
        <AttachedObjects IndexList="28 29 30">
          <Queue Queue="InputBuffer.Contents" Layer="Everything" ExternallyVisible="True" RotationChangesLocation="False" RotationChangesOrientation="False">
            <Points>
              <Point Location="37.7591268594575 0 -26.9582396737869" />
              <Point Location="36.7591268594575 0 -26.9582396737869" />
            </Points>
          </Queue>
          <Queue Queue="OutputBuffer.Contents" Layer="Everything" ExternallyVisible="True" RotationChangesLocation="False" RotationChangesOrientation="False">
            <Points>
              <Point Location="39.7591268594575 0 -26.9582396737869" />
              <Point Location="40.7591268594575 0 -26.9582396737869" />
            </Points>
          </Queue>
          <Queue Queue="Processing.Contents" Layer="Everything" ExternallyVisible="True" RotationChangesLocation="False" RotationChangesOrientation="False">
            <Points>
              <Point Location="37.8011600399006 0 -28.4623979734613" />
              <Point Location="39.8011600399006 0 -28.4623979734613" />
            </Points>
          </Queue>
        </AttachedObjects>
      </Graphics>
    </Fixed>
    <Fixed Name="WorkCell2_3" Type="MTRServer" Location="38.7591268594575 0 -21.2082396737869" YawDeg="270" Size="2.08920814597344 0.999103702764571 1.000000367302" Scope="Public">
      <AssociatedNodes>
        <Node Name="Input@WorkCell2_3" Type="BasicNode1" Location="40.2591268594575 0 -21.2082396737869" YawDeg="270" Scope="Public">
          <Properties>
            <Property Name="InitialCost" Units="USD">0.0</Property>
            <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
            <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="DynamicSelectionRule">
              <Value>None</Value>
            </Property>
            <Property Name="SequenceExpectedOperationTime">Math.If(Entity.CanTransferInAndOutOfObjects, Node.AssociatedObject.Server.ProcessingTime, 0.0)</Property>
          </Properties>
          <Graphics Layer="Everything" ExternallyVisible="True" />
        </Node>
        <Node Name="Output@WorkCell2_3" Type="TransferNode1" Location="37.2591268594575 0 -21.2082396737869" YawDeg="270" Scope="Public">
          <Properties>
            <Property Name="InitialCost" Units="USD">0.0</Property>
            <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
            <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="DynamicSelectionRule">
              <Value>None</Value>
            </Property>
            <Property Name="EntryExemptionCondition">TransferNode.RideOnTransporter &amp;&amp; !Entity.Is.Transporter</Property>
            <Property Name="DestinationType">Specific</Property>
            <Property Name="DestinationNodeName">ModelEntity.ToLocation</Property>
            <Property Name="RouteRequestDynamicSelectionRule">
              <Value>None</Value>
            </Property>
            <Property Name="RideOnTransporter">Conditional</Property>
            <Property Name="RideOnTransporterCondition">ModelEntity.UseVehicle</Property>
            <Property Name="TransporterType">Select From List</Property>
            <Property Name="TransporterName">ModelEntity.Vehicle</Property>
            <Property Name="TransporterListName">Equipment.EquipmentName</Property>
            <Property Name="TransporterReservationMethod">Reserve Best</Property>
            <Property Name="TransporterSelectionGoal">Largest Value</Property>
            <Property Name="TransporterSelectionValueExpression">Candidate.Equipment.EquipmentName.MTRVehicle.Population.FirstItem.MTRVehicle.BatteryRemaining</Property>
            <Property Name="EnteredAddOnProcess">
              <Value>PSOutputNodeChecks</Value>
            </Property>
          </Properties>
          <Graphics Layer="Everything" ExternallyVisible="True" />
        </Node>
      </AssociatedNodes>
      <IndexedSizes>
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="270" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
      </IndexedSizes>
      <Properties>
        <Property Name="InitialCost" Units="USD">0.0</Property>
        <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
        <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="DynamicSelectionRule" RuleGuid="60f74791-6ccc-453b-8da7-946990d495d5">
          <Value>Standard Dispatching Rule</Value>
          <Properties>
            <Property Name="DispatchingRules">
              <Value>DispatchingRules</Value>
              <Rows>
                <Properties />
              </Rows>
            </Property>
          </Properties>
        </Property>
        <Property Name="ProcessingTasks">
          <Value>Phases</Value>
          <Rows>
            <Properties>
              <Property Name="TaskIDNumber">Phases.TaskIDNumber</Property>
              <Property Name="TaskSequenceNumber">Phases.SequenceNumber</Property>
              <Property Name="TaskName">Phases.TaskName</Property>
              <Property Name="TaskBranchType">Conditional</Property>
              <Property Name="TaskConditionOrProbability">Resources.PhaseSelectionExpression</Property>
              <Property Name="TaskProcessingTime">Math.If( Phases.QuantityBasedTaskProcessingTime, Math.If( ModelEntity.FromManufacturingOrder, ManufacturingOrders.Quantity * Phases.TaskProcessingTime, ComponentOrders.Quantity * Phases.TaskProcessingTime), Phases.TaskProcessingTime)</Property>
              <Property Name="TaskProcessName">
                <Value>Phases.TaskProcessName</Value>
              </Property>
              <Property Name="TaskSubmodelEntityCreationMethod">Phases.TaskSubmodelEntityCreationMethod</Property>
              <Property Name="TaskSubmodelEntityType">Phases.TaskSubmodelEntityType</Property>
              <Property Name="TaskSubmodelStartingNode">Phases.TaskSubmodelStartingNode</Property>
              <Property Name="TaskSaveOriginalEntityReference">
                <Value>Phases.TaskSaveOriginalEntityReference</Value>
              </Property>
              <Property Name="TaskChangeoverLogicName">
                <Value>Phases.TaskChangeoverLogicName</Value>
              </Property>
              <Property Name="TaskImmediatePredecessors">Phases.TaskImmediatePredecessors</Property>
              <Property Name="TaskImmediateSuccessors">Phases.TaskImmediateSuccessors</Property>
              <Property Name="TaskAutoCancelTrigger">None</Property>
              <Property Name="TaskResourceRequirementsResourceType">PhaseSecondaryResources.ResourceType</Property>
              <Property Name="TaskResourceRequirementsResourceName">PhaseSecondaryResources.SecondaryResourceName</Property>
              <Property Name="TaskResourceRequirementsResourceListName">PhaseSecondaryResources.SecondaryResourceList</Property>
              <Property Name="TaskResourceRequirementsSelectionValueExpression">Phases.TaskResourceRequirementsSelectionValueExpression</Property>
              <Property Name="TaskResourceRequirementsRequestMove">PhaseSecondaryResources.RequestMove</Property>
              <Property Name="TaskResourceRequirementsDestinationNode">PhaseSecondaryResources.RequestMoveNode</Property>
              <Property Name="TaskResourceRequirementsNumberOfResources">PhaseSecondaryResources.NumberOfSecondaryResources</Property>
              <Property Name="TaskResourceRequirementsSelectionCondition">PhaseSecondaryResources.SecondaryResourceSelectionCondition</Property>
              <Property Name="TaskMaterialRequirementsActionType">BillOfMaterials.MaterialUse</Property>
              <Property Name="TaskMaterialRequirementsMaterialName">
                <Value>BillOfMaterials.ComponentMaterial</Value>
              </Property>
              <Property Name="TaskMaterialRequirementsInventorySiteType">SpecificObject</Property>
              <Property Name="TaskMaterialRequirementsSiteObjectName">BillOfMaterials.InventoryObject</Property>
              <Property Name="TaskMaterialRequirementsQuantity">Math.If(ModelEntity.FromManufacturingOrder, ManufacturingOrders.Quantity * BillOfMaterials.RequiredQuantity, ComponentOrders.Quantity * BillOfMaterials.RequiredQuantity)</Property>
              <Property Name="TaskMaterialRequirementsLotID">Math.If( BillOfMaterials.Pegged == False, String.Empty, Math.If(ModelEntity.FromManufacturingOrder, ManufacturingOrders.MOId,  ComponentOrders.TriggeringOrder ))</Property>
              <Property Name="TaskMaterialRequirementsSkipRequirementCondition">Phases.UseBOM == False || (BillOfMaterials.Picture != List.PictureColor.NONE &amp;&amp; BillOfMaterials.Picture != ModelEntity.Picture) </Property>
              <Property Name="TaskStateAssignmentsTrigger">PhasesStateAssignments.TaskStateAssignmentsTrigger</Property>
              <Property Name="TaskStateAssignmentsStateVariableName">
                <Value>PhasesStateAssignments.StateAssignment</Value>
              </Property>
              <Property Name="TaskStateAssignmentsNewValue">PhasesStateAssignments.StateAssignmentExpression</Property>
              <Property Name="TaskReadyAddOnProcess">
                <Value>MTRServer_TaskReady</Value>
              </Property>
              <Property Name="StartingTaskAddOnProcess">
                <Value>MTRServer_TaskStarting</Value>
              </Property>
              <Property Name="FinishedTaskAddOnProcess">
                <Value>MTRServer_TaskFinished</Value>
              </Property>
              <Property Name="ConsumedMaterialAddOnProcess">
                <Value>MTRServer_OnConsumed</Value>
              </Property>
              <Property Name="ProducedMaterialAddOnProcess">
                <Value>MTRServer_OnProduced</Value>
              </Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="ProcessingLoopbackBranches">
          <Rows>
            <Properties>
              <Property Name="LoopbackFromTaskSequenceNumber">Operations.LoopbackSequenceNumber</Property>
              <Property Name="LoopbackToTaskSequenceNumber">Operations.LoopbackSequenceNumber</Property>
              <Property Name="LoopbackConditionOrProbability">Operations.LoopbackExpression</Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="SeizeConstraintLogic">
          <Rows>
            <Properties>
              <Property Name="SeizeConstraintLogicName">
                <Value>MaterialConstraints</Value>
              </Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="AssignmentsBeforeProcessing">
          <Rows>
            <Properties>
              <Property Name="AssignmentsBeforeProcessingStateVariableName">
                <Value>MTRServer.CurrentDisplayString</Value>
              </Property>
              <Property Name="AssignmentsBeforeProcessingNewValue">ModelEntity.DisplayString</Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="AssignmentsBeforeExiting">
          <Rows>
            <Properties>
              <Property Name="AssignmentsBeforeExitingStateVariableName">
                <Value>MTRServer.CurrentMaterial</Value>
              </Property>
              <Property Name="AssignmentsBeforeExitingNewValue">Math.If(MTRServer.Processing.Contents.NumberWaiting == 0, Nothing, MTRServer.CurrentMaterial)</Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="SecondaryResourcesForProcessing">
          <Value>RunInfo</Value>
          <Rows>
            <Properties />
          </Rows>
        </Property>
        <Property Name="CapitalCost" Units="USD">0.0</Property>
        <Property Name="InputBufferCostPerUse" Units="USD">0.0</Property>
        <Property Name="InputBufferHoldingCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="OutputBufferCostPerUse" Units="USD">0.0</Property>
        <Property Name="OutputBufferHoldingCostRate" Units="USD per Hour">0.0</Property>
      </Properties>
      <Graphics Layer="Everything" ExternallyVisible="True">
        <SymbolInstances CurrentSymbolIndex="0" CurrentSymbolExpression="Server.ResourceState">
          <SymbolInstance Center="0 0 0" Rotation="-3.1415926535897931" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
          </SymbolInstance>
        </SymbolInstances>
        <AttachedObjects IndexList="31 32 33">
          <Queue Queue="InputBuffer.Contents" Layer="Everything" ExternallyVisible="True" RotationChangesLocation="False" RotationChangesOrientation="False">
            <Points>
              <Point Location="37.7591268594575 0 -20.7082396737869" />
              <Point Location="36.7591268594575 0 -20.7082396737869" />
            </Points>
          </Queue>
          <Queue Queue="OutputBuffer.Contents" Layer="Everything" ExternallyVisible="True" RotationChangesLocation="False" RotationChangesOrientation="False">
            <Points>
              <Point Location="39.7591268594575 0 -20.7082396737869" />
              <Point Location="40.7591268594575 0 -20.7082396737869" />
            </Points>
          </Queue>
          <Queue Queue="Processing.Contents" Layer="Everything" ExternallyVisible="True" RotationChangesLocation="False" RotationChangesOrientation="False">
            <Points>
              <Point Location="37.8011600399006 0 -22.2123979734613" />
              <Point Location="39.8011600399006 0 -22.2123979734613" />
            </Points>
          </Queue>
        </AttachedObjects>
      </Graphics>
    </Fixed>
    <Fixed Name="WorkCell2_4" Type="MTRServer" Location="38.7591268594575 0 -14.9582396737869" YawDeg="270" Size="2.08920814597344 0.999103702764571 1.000000367302" Scope="Public">
      <AssociatedNodes>
        <Node Name="Input@WorkCell2_4" Type="BasicNode1" Location="40.2591268594575 0 -14.9582396737869" YawDeg="270" Scope="Public">
          <Properties>
            <Property Name="InitialCost" Units="USD">0.0</Property>
            <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
            <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="DynamicSelectionRule">
              <Value>None</Value>
            </Property>
            <Property Name="SequenceExpectedOperationTime">Math.If(Entity.CanTransferInAndOutOfObjects, Node.AssociatedObject.Server.ProcessingTime, 0.0)</Property>
          </Properties>
          <Graphics Layer="Everything" ExternallyVisible="True" />
        </Node>
        <Node Name="Output@WorkCell2_4" Type="TransferNode1" Location="37.2591268594575 0 -14.9582396737869" YawDeg="270" Scope="Public">
          <Properties>
            <Property Name="InitialCost" Units="USD">0.0</Property>
            <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
            <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="DynamicSelectionRule">
              <Value>None</Value>
            </Property>
            <Property Name="EntryExemptionCondition">TransferNode.RideOnTransporter &amp;&amp; !Entity.Is.Transporter</Property>
            <Property Name="DestinationType">Specific</Property>
            <Property Name="DestinationNodeName">ModelEntity.ToLocation</Property>
            <Property Name="RouteRequestDynamicSelectionRule">
              <Value>None</Value>
            </Property>
            <Property Name="RideOnTransporter">Conditional</Property>
            <Property Name="RideOnTransporterCondition">ModelEntity.UseVehicle</Property>
            <Property Name="TransporterType">Select From List</Property>
            <Property Name="TransporterName">ModelEntity.Vehicle</Property>
            <Property Name="TransporterListName">Equipment.EquipmentName</Property>
            <Property Name="TransporterReservationMethod">Reserve Best</Property>
            <Property Name="TransporterSelectionGoal">Largest Value</Property>
            <Property Name="TransporterSelectionValueExpression">Candidate.Equipment.EquipmentName.MTRVehicle.Population.FirstItem.MTRVehicle.BatteryRemaining</Property>
            <Property Name="EnteredAddOnProcess">
              <Value>PSOutputNodeChecks</Value>
            </Property>
          </Properties>
          <Graphics Layer="Everything" ExternallyVisible="True" />
        </Node>
      </AssociatedNodes>
      <IndexedSizes>
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="270" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
      </IndexedSizes>
      <Properties>
        <Property Name="InitialCost" Units="USD">0.0</Property>
        <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
        <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="DynamicSelectionRule" RuleGuid="60f74791-6ccc-453b-8da7-946990d495d5">
          <Value>Standard Dispatching Rule</Value>
          <Properties>
            <Property Name="DispatchingRules">
              <Value>DispatchingRules</Value>
              <Rows>
                <Properties />
              </Rows>
            </Property>
          </Properties>
        </Property>
        <Property Name="ProcessingTasks">
          <Value>Phases</Value>
          <Rows>
            <Properties>
              <Property Name="TaskIDNumber">Phases.TaskIDNumber</Property>
              <Property Name="TaskSequenceNumber">Phases.SequenceNumber</Property>
              <Property Name="TaskName">Phases.TaskName</Property>
              <Property Name="TaskBranchType">Conditional</Property>
              <Property Name="TaskConditionOrProbability">Resources.PhaseSelectionExpression</Property>
              <Property Name="TaskProcessingTime">Math.If( Phases.QuantityBasedTaskProcessingTime, Math.If( ModelEntity.FromManufacturingOrder, ManufacturingOrders.Quantity * Phases.TaskProcessingTime, ComponentOrders.Quantity * Phases.TaskProcessingTime), Phases.TaskProcessingTime)</Property>
              <Property Name="TaskProcessName">
                <Value>Phases.TaskProcessName</Value>
              </Property>
              <Property Name="TaskSubmodelEntityCreationMethod">Phases.TaskSubmodelEntityCreationMethod</Property>
              <Property Name="TaskSubmodelEntityType">Phases.TaskSubmodelEntityType</Property>
              <Property Name="TaskSubmodelStartingNode">Phases.TaskSubmodelStartingNode</Property>
              <Property Name="TaskSaveOriginalEntityReference">
                <Value>Phases.TaskSaveOriginalEntityReference</Value>
              </Property>
              <Property Name="TaskChangeoverLogicName">
                <Value>Phases.TaskChangeoverLogicName</Value>
              </Property>
              <Property Name="TaskImmediatePredecessors">Phases.TaskImmediatePredecessors</Property>
              <Property Name="TaskImmediateSuccessors">Phases.TaskImmediateSuccessors</Property>
              <Property Name="TaskAutoCancelTrigger">None</Property>
              <Property Name="TaskResourceRequirementsResourceType">PhaseSecondaryResources.ResourceType</Property>
              <Property Name="TaskResourceRequirementsResourceName">PhaseSecondaryResources.SecondaryResourceName</Property>
              <Property Name="TaskResourceRequirementsResourceListName">PhaseSecondaryResources.SecondaryResourceList</Property>
              <Property Name="TaskResourceRequirementsSelectionValueExpression">Phases.TaskResourceRequirementsSelectionValueExpression</Property>
              <Property Name="TaskResourceRequirementsRequestMove">PhaseSecondaryResources.RequestMove</Property>
              <Property Name="TaskResourceRequirementsDestinationNode">PhaseSecondaryResources.RequestMoveNode</Property>
              <Property Name="TaskResourceRequirementsNumberOfResources">PhaseSecondaryResources.NumberOfSecondaryResources</Property>
              <Property Name="TaskResourceRequirementsSelectionCondition">PhaseSecondaryResources.SecondaryResourceSelectionCondition</Property>
              <Property Name="TaskMaterialRequirementsActionType">BillOfMaterials.MaterialUse</Property>
              <Property Name="TaskMaterialRequirementsMaterialName">
                <Value>BillOfMaterials.ComponentMaterial</Value>
              </Property>
              <Property Name="TaskMaterialRequirementsInventorySiteType">SpecificObject</Property>
              <Property Name="TaskMaterialRequirementsSiteObjectName">BillOfMaterials.InventoryObject</Property>
              <Property Name="TaskMaterialRequirementsQuantity">Math.If(ModelEntity.FromManufacturingOrder, ManufacturingOrders.Quantity * BillOfMaterials.RequiredQuantity, ComponentOrders.Quantity * BillOfMaterials.RequiredQuantity)</Property>
              <Property Name="TaskMaterialRequirementsLotID">Math.If( BillOfMaterials.Pegged == False, String.Empty, Math.If(ModelEntity.FromManufacturingOrder, ManufacturingOrders.MOId,  ComponentOrders.TriggeringOrder ))</Property>
              <Property Name="TaskMaterialRequirementsSkipRequirementCondition">Phases.UseBOM == False || (BillOfMaterials.Picture != List.PictureColor.NONE &amp;&amp; BillOfMaterials.Picture != ModelEntity.Picture) </Property>
              <Property Name="TaskStateAssignmentsTrigger">PhasesStateAssignments.TaskStateAssignmentsTrigger</Property>
              <Property Name="TaskStateAssignmentsStateVariableName">
                <Value>PhasesStateAssignments.StateAssignment</Value>
              </Property>
              <Property Name="TaskStateAssignmentsNewValue">PhasesStateAssignments.StateAssignmentExpression</Property>
              <Property Name="TaskReadyAddOnProcess">
                <Value>MTRServer_TaskReady</Value>
              </Property>
              <Property Name="StartingTaskAddOnProcess">
                <Value>MTRServer_TaskStarting</Value>
              </Property>
              <Property Name="FinishedTaskAddOnProcess">
                <Value>MTRServer_TaskFinished</Value>
              </Property>
              <Property Name="ConsumedMaterialAddOnProcess">
                <Value>MTRServer_OnConsumed</Value>
              </Property>
              <Property Name="ProducedMaterialAddOnProcess">
                <Value>MTRServer_OnProduced</Value>
              </Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="ProcessingLoopbackBranches">
          <Rows>
            <Properties>
              <Property Name="LoopbackFromTaskSequenceNumber">Operations.LoopbackSequenceNumber</Property>
              <Property Name="LoopbackToTaskSequenceNumber">Operations.LoopbackSequenceNumber</Property>
              <Property Name="LoopbackConditionOrProbability">Operations.LoopbackExpression</Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="SeizeConstraintLogic">
          <Rows>
            <Properties>
              <Property Name="SeizeConstraintLogicName">
                <Value>MaterialConstraints</Value>
              </Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="AssignmentsBeforeProcessing">
          <Rows>
            <Properties>
              <Property Name="AssignmentsBeforeProcessingStateVariableName">
                <Value>MTRServer.CurrentDisplayString</Value>
              </Property>
              <Property Name="AssignmentsBeforeProcessingNewValue">ModelEntity.DisplayString</Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="AssignmentsBeforeExiting">
          <Rows>
            <Properties>
              <Property Name="AssignmentsBeforeExitingStateVariableName">
                <Value>MTRServer.CurrentMaterial</Value>
              </Property>
              <Property Name="AssignmentsBeforeExitingNewValue">Math.If(MTRServer.Processing.Contents.NumberWaiting == 0, Nothing, MTRServer.CurrentMaterial)</Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="SecondaryResourcesForProcessing">
          <Value>RunInfo</Value>
          <Rows>
            <Properties />
          </Rows>
        </Property>
        <Property Name="CapitalCost" Units="USD">0.0</Property>
        <Property Name="InputBufferCostPerUse" Units="USD">0.0</Property>
        <Property Name="InputBufferHoldingCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="OutputBufferCostPerUse" Units="USD">0.0</Property>
        <Property Name="OutputBufferHoldingCostRate" Units="USD per Hour">0.0</Property>
      </Properties>
      <Graphics Layer="Everything" ExternallyVisible="True">
        <SymbolInstances CurrentSymbolIndex="0" CurrentSymbolExpression="Server.ResourceState">
          <SymbolInstance Center="0 0 0" Rotation="-3.1415926535897931" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
          </SymbolInstance>
        </SymbolInstances>
        <AttachedObjects IndexList="34 35 36">
          <Queue Queue="InputBuffer.Contents" Layer="Everything" ExternallyVisible="True" RotationChangesLocation="False" RotationChangesOrientation="False">
            <Points>
              <Point Location="37.7591268594575 0 -14.4582396737869" />
              <Point Location="36.7591268594575 0 -14.4582396737869" />
            </Points>
          </Queue>
          <Queue Queue="OutputBuffer.Contents" Layer="Everything" ExternallyVisible="True" RotationChangesLocation="False" RotationChangesOrientation="False">
            <Points>
              <Point Location="39.7591268594575 0 -14.4582396737869" />
              <Point Location="40.7591268594575 0 -14.4582396737869" />
            </Points>
          </Queue>
          <Queue Queue="Processing.Contents" Layer="Everything" ExternallyVisible="True" RotationChangesLocation="False" RotationChangesOrientation="False">
            <Points>
              <Point Location="37.8011600399006 0 -15.9623979734613" />
              <Point Location="39.8011600399006 0 -15.9623979734613" />
            </Points>
          </Queue>
        </AttachedObjects>
      </Graphics>
    </Fixed>
    <Fixed Name="WorkCell1" Type="MTRServer" Location="40.474407153221 0 19.5532110720984" YawDeg="90" Size="2.08920814597344 0.999103702764571 1.000000367302" Scope="Public">
      <AssociatedNodes>
        <Node Name="Input@WorkCell1" Type="BasicNode1" Location="38.974407153221 0 19.5532110720984" YawDeg="90" Scope="Public">
          <Properties>
            <Property Name="InitialCost" Units="USD">0.0</Property>
            <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
            <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="DynamicSelectionRule">
              <Value>None</Value>
            </Property>
            <Property Name="SequenceExpectedOperationTime">Math.If(Entity.CanTransferInAndOutOfObjects, Node.AssociatedObject.Server.ProcessingTime, 0.0)</Property>
          </Properties>
          <Graphics Layer="Everything" ExternallyVisible="True" />
        </Node>
        <Node Name="Output@WorkCell1" Type="TransferNode1" Location="41.974407153221 0 19.5532110720984" YawDeg="90" Scope="Public">
          <Properties>
            <Property Name="InitialCost" Units="USD">0.0</Property>
            <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
            <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="DynamicSelectionRule">
              <Value>None</Value>
            </Property>
            <Property Name="EntryExemptionCondition">TransferNode.RideOnTransporter &amp;&amp; !Entity.Is.Transporter</Property>
            <Property Name="DestinationType">Specific</Property>
            <Property Name="DestinationNodeName">ModelEntity.ToLocation</Property>
            <Property Name="RouteRequestDynamicSelectionRule">
              <Value>None</Value>
            </Property>
            <Property Name="RideOnTransporter">Conditional</Property>
            <Property Name="RideOnTransporterCondition">ModelEntity.UseVehicle</Property>
            <Property Name="TransporterType">Select From List</Property>
            <Property Name="TransporterName">ModelEntity.Vehicle</Property>
            <Property Name="TransporterListName">Equipment.EquipmentName</Property>
            <Property Name="TransporterReservationMethod">Reserve Best</Property>
            <Property Name="TransporterSelectionGoal">Largest Value</Property>
            <Property Name="TransporterSelectionValueExpression">Candidate.Equipment.EquipmentName.MTRVehicle.Population.FirstItem.MTRVehicle.BatteryRemaining</Property>
            <Property Name="EnteredAddOnProcess">
              <Value>PSOutputNodeChecks</Value>
            </Property>
          </Properties>
          <Graphics Layer="Everything" ExternallyVisible="True" />
        </Node>
      </AssociatedNodes>
      <IndexedSizes>
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
      </IndexedSizes>
      <Properties>
        <Property Name="InitialCost" Units="USD">0.0</Property>
        <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
        <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="DynamicSelectionRule" RuleGuid="60f74791-6ccc-453b-8da7-946990d495d5">
          <Value>Standard Dispatching Rule</Value>
          <Properties>
            <Property Name="DispatchingRules">
              <Value>DispatchingRules</Value>
              <Rows>
                <Properties />
              </Rows>
            </Property>
          </Properties>
        </Property>
        <Property Name="ProcessingTasks">
          <Value>Phases</Value>
          <Rows>
            <Properties>
              <Property Name="TaskIDNumber">Phases.TaskIDNumber</Property>
              <Property Name="TaskSequenceNumber">Phases.SequenceNumber</Property>
              <Property Name="TaskName">Phases.TaskName</Property>
              <Property Name="TaskBranchType">Conditional</Property>
              <Property Name="TaskConditionOrProbability">Resources.PhaseSelectionExpression</Property>
              <Property Name="TaskProcessingTime">Math.If( Phases.QuantityBasedTaskProcessingTime, Math.If( ModelEntity.FromManufacturingOrder, ManufacturingOrders.Quantity * Phases.TaskProcessingTime, ComponentOrders.Quantity * Phases.TaskProcessingTime), Phases.TaskProcessingTime)</Property>
              <Property Name="TaskProcessName">
                <Value>Phases.TaskProcessName</Value>
              </Property>
              <Property Name="TaskSubmodelEntityCreationMethod">Phases.TaskSubmodelEntityCreationMethod</Property>
              <Property Name="TaskSubmodelEntityType">Phases.TaskSubmodelEntityType</Property>
              <Property Name="TaskSubmodelStartingNode">Phases.TaskSubmodelStartingNode</Property>
              <Property Name="TaskSaveOriginalEntityReference">
                <Value>Phases.TaskSaveOriginalEntityReference</Value>
              </Property>
              <Property Name="TaskChangeoverLogicName">
                <Value>Phases.TaskChangeoverLogicName</Value>
              </Property>
              <Property Name="TaskImmediatePredecessors">Phases.TaskImmediatePredecessors</Property>
              <Property Name="TaskImmediateSuccessors">Phases.TaskImmediateSuccessors</Property>
              <Property Name="TaskAutoCancelTrigger">None</Property>
              <Property Name="TaskResourceRequirementsResourceType">PhaseSecondaryResources.ResourceType</Property>
              <Property Name="TaskResourceRequirementsResourceName">PhaseSecondaryResources.SecondaryResourceName</Property>
              <Property Name="TaskResourceRequirementsResourceListName">PhaseSecondaryResources.SecondaryResourceList</Property>
              <Property Name="TaskResourceRequirementsSelectionValueExpression">Phases.TaskResourceRequirementsSelectionValueExpression</Property>
              <Property Name="TaskResourceRequirementsRequestMove">PhaseSecondaryResources.RequestMove</Property>
              <Property Name="TaskResourceRequirementsDestinationNode">PhaseSecondaryResources.RequestMoveNode</Property>
              <Property Name="TaskResourceRequirementsNumberOfResources">PhaseSecondaryResources.NumberOfSecondaryResources</Property>
              <Property Name="TaskResourceRequirementsSelectionCondition">PhaseSecondaryResources.SecondaryResourceSelectionCondition</Property>
              <Property Name="TaskMaterialRequirementsActionType">BillOfMaterials.MaterialUse</Property>
              <Property Name="TaskMaterialRequirementsMaterialName">
                <Value>BillOfMaterials.ComponentMaterial</Value>
              </Property>
              <Property Name="TaskMaterialRequirementsInventorySiteType">SpecificObject</Property>
              <Property Name="TaskMaterialRequirementsSiteObjectName">BillOfMaterials.InventoryObject</Property>
              <Property Name="TaskMaterialRequirementsQuantity">Math.If(ModelEntity.FromManufacturingOrder, ManufacturingOrders.Quantity * BillOfMaterials.RequiredQuantity, ComponentOrders.Quantity * BillOfMaterials.RequiredQuantity)</Property>
              <Property Name="TaskMaterialRequirementsLotID">Math.If( BillOfMaterials.Pegged == False, String.Empty, Math.If(ModelEntity.FromManufacturingOrder, ManufacturingOrders.MOId,  ComponentOrders.TriggeringOrder ))</Property>
              <Property Name="TaskMaterialRequirementsSkipRequirementCondition">Phases.UseBOM == False || (BillOfMaterials.Picture != List.PictureColor.NONE &amp;&amp; BillOfMaterials.Picture != ModelEntity.Picture) </Property>
              <Property Name="TaskStateAssignmentsTrigger">PhasesStateAssignments.TaskStateAssignmentsTrigger</Property>
              <Property Name="TaskStateAssignmentsStateVariableName">
                <Value>PhasesStateAssignments.StateAssignment</Value>
              </Property>
              <Property Name="TaskStateAssignmentsNewValue">PhasesStateAssignments.StateAssignmentExpression</Property>
              <Property Name="TaskReadyAddOnProcess">
                <Value>MTRServer_TaskReady</Value>
              </Property>
              <Property Name="StartingTaskAddOnProcess">
                <Value>MTRServer_TaskStarting</Value>
              </Property>
              <Property Name="FinishedTaskAddOnProcess">
                <Value>MTRServer_TaskFinished</Value>
              </Property>
              <Property Name="ConsumedMaterialAddOnProcess">
                <Value>MTRServer_OnConsumed</Value>
              </Property>
              <Property Name="ProducedMaterialAddOnProcess">
                <Value>MTRServer_OnProduced</Value>
              </Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="ProcessingLoopbackBranches">
          <Rows>
            <Properties>
              <Property Name="LoopbackFromTaskSequenceNumber">Operations.LoopbackSequenceNumber</Property>
              <Property Name="LoopbackToTaskSequenceNumber">Operations.LoopbackSequenceNumber</Property>
              <Property Name="LoopbackConditionOrProbability">Operations.LoopbackExpression</Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="SeizeConstraintLogic">
          <Rows>
            <Properties>
              <Property Name="SeizeConstraintLogicName">
                <Value>MaterialConstraints</Value>
              </Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="AssignmentsBeforeProcessing">
          <Rows>
            <Properties>
              <Property Name="AssignmentsBeforeProcessingStateVariableName">
                <Value>MTRServer.CurrentDisplayString</Value>
              </Property>
              <Property Name="AssignmentsBeforeProcessingNewValue">ModelEntity.DisplayString</Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="AssignmentsBeforeExiting">
          <Rows>
            <Properties>
              <Property Name="AssignmentsBeforeExitingStateVariableName">
                <Value>MTRServer.CurrentMaterial</Value>
              </Property>
              <Property Name="AssignmentsBeforeExitingNewValue">Math.If(MTRServer.Processing.Contents.NumberWaiting == 0, Nothing, MTRServer.CurrentMaterial)</Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="SecondaryResourcesForProcessing">
          <Value>RunInfo</Value>
          <Rows>
            <Properties />
          </Rows>
        </Property>
        <Property Name="CapitalCost" Units="USD">0.0</Property>
        <Property Name="InputBufferCostPerUse" Units="USD">0.0</Property>
        <Property Name="InputBufferHoldingCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="OutputBufferCostPerUse" Units="USD">0.0</Property>
        <Property Name="OutputBufferHoldingCostRate" Units="USD per Hour">0.0</Property>
      </Properties>
      <Graphics Layer="Everything" ExternallyVisible="True">
        <SymbolInstances CurrentSymbolIndex="0" CurrentSymbolExpression="Server.ResourceState">
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
          </SymbolInstance>
        </SymbolInstances>
        <AttachedObjects IndexList="37 38 39">
          <Queue Queue="InputBuffer.Contents" Layer="Everything" ExternallyVisible="True" RotationChangesLocation="False" RotationChangesOrientation="False">
            <Points>
              <Point Location="39.474407153221 0 20.0532110720984" />
              <Point Location="38.474407153221 0 20.0532110720984" />
            </Points>
          </Queue>
          <Queue Queue="OutputBuffer.Contents" Layer="Everything" ExternallyVisible="True" RotationChangesLocation="False" RotationChangesOrientation="False">
            <Points>
              <Point Location="41.474407153221 0 20.0532110720984" />
              <Point Location="42.474407153221 0 20.0532110720984" />
            </Points>
          </Queue>
          <Queue Queue="Processing.Contents" Layer="Everything" ExternallyVisible="True" RotationChangesLocation="False" RotationChangesOrientation="False">
            <Points>
              <Point Location="39.5164403336641 0 18.549052772424" />
              <Point Location="41.5164403336641 0 18.549052772424" />
            </Points>
          </Queue>
        </AttachedObjects>
      </Graphics>
    </Fixed>
    <Fixed Name="WC1ToConveyor" Type="MTRServer" Location="44.0091268594575 0 20.7917603262131" YawDeg="90" Size="2.08920814597344 0.999103702764571 1.000000367302" Scope="Public">
      <AssociatedNodes>
        <Node Name="Input@WC1ToConveyor" Type="BasicNode1" Location="42.5091268594575 0 20.7917603262131" YawDeg="90" Scope="Public">
          <Properties>
            <Property Name="InitialCost" Units="USD">0.0</Property>
            <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
            <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="DynamicSelectionRule">
              <Value>None</Value>
            </Property>
            <Property Name="SequenceExpectedOperationTime">Math.If(Entity.CanTransferInAndOutOfObjects, Node.AssociatedObject.Server.ProcessingTime, 0.0)</Property>
          </Properties>
          <Graphics Layer="Everything" ExternallyVisible="True" />
        </Node>
        <Node Name="Output@WC1ToConveyor" Type="TransferNode1" Location="45.5091268594575 0 20.7917603262131" YawDeg="90" Scope="Public">
          <Properties>
            <Property Name="InitialCost" Units="USD">0.0</Property>
            <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
            <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="DynamicSelectionRule">
              <Value>None</Value>
            </Property>
            <Property Name="EntryExemptionCondition">TransferNode.RideOnTransporter &amp;&amp; !Entity.Is.Transporter</Property>
            <Property Name="DestinationType">Specific</Property>
            <Property Name="DestinationNodeName">ModelEntity.ToLocation</Property>
            <Property Name="RouteRequestDynamicSelectionRule">
              <Value>None</Value>
            </Property>
            <Property Name="RideOnTransporter">Conditional</Property>
            <Property Name="RideOnTransporterCondition">ModelEntity.UseVehicle</Property>
            <Property Name="TransporterType">Select From List</Property>
            <Property Name="TransporterName">ModelEntity.Vehicle</Property>
            <Property Name="TransporterListName">Equipment.EquipmentName</Property>
            <Property Name="TransporterReservationMethod">Reserve Best</Property>
            <Property Name="TransporterSelectionGoal">Largest Value</Property>
            <Property Name="TransporterSelectionValueExpression">Candidate.Equipment.EquipmentName.MTRVehicle.Population.FirstItem.MTRVehicle.BatteryRemaining</Property>
            <Property Name="EnteredAddOnProcess">
              <Value>PSOutputNodeChecks</Value>
            </Property>
          </Properties>
          <Graphics Layer="Everything" ExternallyVisible="True" />
        </Node>
      </AssociatedNodes>
      <IndexedSizes>
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
      </IndexedSizes>
      <Properties>
        <Property Name="InitialCost" Units="USD">0.0</Property>
        <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
        <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="DynamicSelectionRule" RuleGuid="60f74791-6ccc-453b-8da7-946990d495d5">
          <Value>Standard Dispatching Rule</Value>
          <Properties>
            <Property Name="DispatchingRules">
              <Value>DispatchingRules</Value>
              <Rows>
                <Properties />
              </Rows>
            </Property>
          </Properties>
        </Property>
        <Property Name="ProcessingTasks">
          <Value>Phases</Value>
          <Rows>
            <Properties>
              <Property Name="TaskIDNumber">Phases.TaskIDNumber</Property>
              <Property Name="TaskSequenceNumber">Phases.SequenceNumber</Property>
              <Property Name="TaskName">Phases.TaskName</Property>
              <Property Name="TaskBranchType">Conditional</Property>
              <Property Name="TaskConditionOrProbability">Resources.PhaseSelectionExpression</Property>
              <Property Name="TaskProcessingTime">Math.If( Phases.QuantityBasedTaskProcessingTime, Math.If( ModelEntity.FromManufacturingOrder, ManufacturingOrders.Quantity * Phases.TaskProcessingTime, ComponentOrders.Quantity * Phases.TaskProcessingTime), Phases.TaskProcessingTime)</Property>
              <Property Name="TaskProcessName">
                <Value>Phases.TaskProcessName</Value>
              </Property>
              <Property Name="TaskSubmodelEntityCreationMethod">Phases.TaskSubmodelEntityCreationMethod</Property>
              <Property Name="TaskSubmodelEntityType">Phases.TaskSubmodelEntityType</Property>
              <Property Name="TaskSubmodelStartingNode">Phases.TaskSubmodelStartingNode</Property>
              <Property Name="TaskSaveOriginalEntityReference">
                <Value>Phases.TaskSaveOriginalEntityReference</Value>
              </Property>
              <Property Name="TaskChangeoverLogicName">
                <Value>Phases.TaskChangeoverLogicName</Value>
              </Property>
              <Property Name="TaskImmediatePredecessors">Phases.TaskImmediatePredecessors</Property>
              <Property Name="TaskImmediateSuccessors">Phases.TaskImmediateSuccessors</Property>
              <Property Name="TaskAutoCancelTrigger">None</Property>
              <Property Name="TaskResourceRequirementsResourceType">PhaseSecondaryResources.ResourceType</Property>
              <Property Name="TaskResourceRequirementsResourceName">PhaseSecondaryResources.SecondaryResourceName</Property>
              <Property Name="TaskResourceRequirementsResourceListName">PhaseSecondaryResources.SecondaryResourceList</Property>
              <Property Name="TaskResourceRequirementsSelectionValueExpression">Phases.TaskResourceRequirementsSelectionValueExpression</Property>
              <Property Name="TaskResourceRequirementsRequestMove">PhaseSecondaryResources.RequestMove</Property>
              <Property Name="TaskResourceRequirementsDestinationNode">PhaseSecondaryResources.RequestMoveNode</Property>
              <Property Name="TaskResourceRequirementsNumberOfResources">PhaseSecondaryResources.NumberOfSecondaryResources</Property>
              <Property Name="TaskResourceRequirementsSelectionCondition">PhaseSecondaryResources.SecondaryResourceSelectionCondition</Property>
              <Property Name="TaskMaterialRequirementsActionType">BillOfMaterials.MaterialUse</Property>
              <Property Name="TaskMaterialRequirementsMaterialName">
                <Value>BillOfMaterials.ComponentMaterial</Value>
              </Property>
              <Property Name="TaskMaterialRequirementsInventorySiteType">SpecificObject</Property>
              <Property Name="TaskMaterialRequirementsSiteObjectName">BillOfMaterials.InventoryObject</Property>
              <Property Name="TaskMaterialRequirementsQuantity">Math.If(ModelEntity.FromManufacturingOrder, ManufacturingOrders.Quantity * BillOfMaterials.RequiredQuantity, ComponentOrders.Quantity * BillOfMaterials.RequiredQuantity)</Property>
              <Property Name="TaskMaterialRequirementsLotID">Math.If( BillOfMaterials.Pegged == False, String.Empty, Math.If(ModelEntity.FromManufacturingOrder, ManufacturingOrders.MOId,  ComponentOrders.TriggeringOrder ))</Property>
              <Property Name="TaskMaterialRequirementsSkipRequirementCondition">Phases.UseBOM == False || (BillOfMaterials.Picture != List.PictureColor.NONE &amp;&amp; BillOfMaterials.Picture != ModelEntity.Picture) </Property>
              <Property Name="TaskStateAssignmentsTrigger">PhasesStateAssignments.TaskStateAssignmentsTrigger</Property>
              <Property Name="TaskStateAssignmentsStateVariableName">
                <Value>PhasesStateAssignments.StateAssignment</Value>
              </Property>
              <Property Name="TaskStateAssignmentsNewValue">PhasesStateAssignments.StateAssignmentExpression</Property>
              <Property Name="TaskReadyAddOnProcess">
                <Value>MTRServer_TaskReady</Value>
              </Property>
              <Property Name="StartingTaskAddOnProcess">
                <Value>MTRServer_TaskStarting</Value>
              </Property>
              <Property Name="FinishedTaskAddOnProcess">
                <Value>MTRServer_TaskFinished</Value>
              </Property>
              <Property Name="ConsumedMaterialAddOnProcess">
                <Value>MTRServer_OnConsumed</Value>
              </Property>
              <Property Name="ProducedMaterialAddOnProcess">
                <Value>MTRServer_OnProduced</Value>
              </Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="ProcessingLoopbackBranches">
          <Rows>
            <Properties>
              <Property Name="LoopbackFromTaskSequenceNumber">Operations.LoopbackSequenceNumber</Property>
              <Property Name="LoopbackToTaskSequenceNumber">Operations.LoopbackSequenceNumber</Property>
              <Property Name="LoopbackConditionOrProbability">Operations.LoopbackExpression</Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="SeizeConstraintLogic">
          <Rows>
            <Properties>
              <Property Name="SeizeConstraintLogicName">
                <Value>MaterialConstraints</Value>
              </Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="AssignmentsBeforeProcessing">
          <Rows>
            <Properties>
              <Property Name="AssignmentsBeforeProcessingStateVariableName">
                <Value>MTRServer.CurrentDisplayString</Value>
              </Property>
              <Property Name="AssignmentsBeforeProcessingNewValue">ModelEntity.DisplayString</Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="AssignmentsBeforeExiting">
          <Rows>
            <Properties>
              <Property Name="AssignmentsBeforeExitingStateVariableName">
                <Value>MTRServer.CurrentMaterial</Value>
              </Property>
              <Property Name="AssignmentsBeforeExitingNewValue">Math.If(MTRServer.Processing.Contents.NumberWaiting == 0, Nothing, MTRServer.CurrentMaterial)</Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="SecondaryResourcesForProcessing">
          <Value>RunInfo</Value>
          <Rows>
            <Properties />
          </Rows>
        </Property>
        <Property Name="CapitalCost" Units="USD">0.0</Property>
        <Property Name="InputBufferCostPerUse" Units="USD">0.0</Property>
        <Property Name="InputBufferHoldingCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="OutputBufferCostPerUse" Units="USD">0.0</Property>
        <Property Name="OutputBufferHoldingCostRate" Units="USD per Hour">0.0</Property>
      </Properties>
      <Graphics Layer="Everything" ExternallyVisible="True">
        <SymbolInstances CurrentSymbolIndex="0" CurrentSymbolExpression="Server.ResourceState">
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
          </SymbolInstance>
        </SymbolInstances>
        <AttachedObjects IndexList="40 41 42">
          <Queue Queue="InputBuffer.Contents" Layer="Everything" ExternallyVisible="True" RotationChangesLocation="False" RotationChangesOrientation="False">
            <Points>
              <Point Location="43.0091268594575 0 21.2917603262131" />
              <Point Location="42.0091268594575 0 21.2917603262131" />
            </Points>
          </Queue>
          <Queue Queue="OutputBuffer.Contents" Layer="Everything" ExternallyVisible="True" RotationChangesLocation="False" RotationChangesOrientation="False">
            <Points>
              <Point Location="45.0091268594575 0 21.2917603262131" />
              <Point Location="46.0091268594575 0 21.2917603262131" />
            </Points>
          </Queue>
          <Queue Queue="Processing.Contents" Layer="Everything" ExternallyVisible="True" RotationChangesLocation="False" RotationChangesOrientation="False">
            <Points>
              <Point Location="43.0511600399006 0 19.7876020265387" />
              <Point Location="45.0511600399006 0 19.7876020265387" />
            </Points>
          </Queue>
        </AttachedObjects>
      </Graphics>
    </Fixed>
    <Transporter Name="Workers" Type="MTRWorker" Location="-21 0 7" YawDeg="90" Size="0.428386503125493 0.53783072913644 1.79546940326691" Scope="Public">
      <IndexedSizes>
        <IndexedSize Size="0.428386503125493 0.53783072913644 1.79546940326691" YawDeg="90" />
        <IndexedSize Size="0.427143776110505 0.538431424692165 1.71242344379425" YawDeg="90" />
        <IndexedSize Size="0.428386503125493 0.53783072913644 1.79546940326691" YawDeg="90" />
      </IndexedSizes>
      <Properties>
        <Property Name="InitialCost" Units="USD">0.0</Property>
        <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceIdleCostRate" Units="USD per Hour">10</Property>
        <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
        <Property Name="ResourceUsageCostRate" Units="USD per Hour">25</Property>
        <Property Name="DynamicSelectionRule">
          <Value>None</Value>
        </Property>
        <Property Name="TransportCostPerRider" Units="USD">0.0</Property>
        <Property Name="TransportCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="CapitalCostPerWorker" Units="USD">0.0</Property>
      </Properties>
      <Graphics Layer="Everything" ExternallyVisible="True">
        <SymbolInstances CurrentSymbolIndex="0" CurrentSymbolExpression="Worker.ResourceState">
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="71aa2c80-dffd-47c9-9fe9-35231f239015" />
            <SymbolLookRef Name="Look5" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="007ef483-40c1-4d17-9bde-b8c9576292ff" />
            <SymbolLookRef Name="Look6" />
          </SymbolInstance>
        </SymbolInstances>
        <AttachedObjects IndexList="43 44">
          <Queue Queue="RideStation.Contents" Layer="Everything" ExternallyVisible="True" RotationChangesLocation="False" RotationChangesOrientation="False">
            <Points>
              <Point Location="-20.55 0.00286627509297888 7.45" />
              <Point Location="-20.55 0.00286627509297888 6.45" />
            </Points>
          </Queue>
          <StatusLabel Center="-21.55 0 6.45" Width="1.2000000000000002" Height="0.30000000000000004" Layer="Everything" ExternallyVisible="True" Expression="PhaseKey" />
        </AttachedObjects>
      </Graphics>
    </Transporter>
    <Transporter Name="AMR1" Type="MTRVehicle" Location="-9.9908731405425 0 -4.20823967378693" YawDeg="90" Size="1.5502269638102 1.20000011544629 0.375105517646665" Scope="Public">
      <Properties>
        <Property Name="InitialCost" Units="USD">0.0</Property>
        <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceIdleCostRate" Units="USD per Hour">1</Property>
        <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
        <Property Name="ResourceUsageCostRate" Units="USD per Hour">10</Property>
        <Property Name="DynamicSelectionRule">
          <Value>None</Value>
        </Property>
        <Property Name="TransportCostPerRider" Units="USD">10</Property>
        <Property Name="TransportCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="CapitalCostPerVehicle" Units="USD">0.0</Property>
      </Properties>
      <Graphics Layer="Everything" ExternallyVisible="True">
        <SymbolInstances>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
          </SymbolInstance>
        </SymbolInstances>
        <AttachedObjects IndexList="45 46 47 48 49">
          <Queue Queue="RideStation.Contents" Layer="Everything" ExternallyVisible="True">
            <Points>
              <Point Location="-9.2283731405425 0.699999988079071 -4.20823967378693" />
              <Point Location="-10.7533731405425 0.699999988079071 -4.20823967378693" />
            </Points>
          </Queue>
          <Queue Queue="DriverStation.Contents" Alignment="Inline" Layer="Everything" ExternallyVisible="True">
            <Points>
              <Point Location="-10.9283731405425 0 -4.20823967378693" />
              <Point Location="-12.0533731405425 0 -4.20823967378693" />
            </Points>
          </Queue>
          <StatusLabel Center="-11.4908731405425 0.270062515420583 -4.60823967378693" Width="1.2249999999999999" Height="0.25" Layer="Everything" ExternallyVisible="True" Expression="BatteryRemaining" />
          <StatusLabel Center="-11.4908731405425 0.270062515420583 -4.00823967378693" Width="1.2249999999999999" Height="0.25" Layer="Everything" ExternallyVisible="True" Expression="RealX" />
          <StatusLabel Center="-11.4908731405425 0.270062515420583 -3.70823967378693" Width="1.2249999999999999" Height="0.25" Layer="Everything" ExternallyVisible="True" Expression="RealZ" />
        </AttachedObjects>
      </Graphics>
    </Transporter>
    <Transporter Name="AMR2" Type="MTRVehicle" Location="-9.9908731405425 0 -2.45823967378693" YawDeg="90" Size="1.5502269638102 1.20000011544629 0.375105517646665" Scope="Public">
      <Properties>
        <Property Name="InitialCost" Units="USD">0.0</Property>
        <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceIdleCostRate" Units="USD per Hour">1</Property>
        <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
        <Property Name="ResourceUsageCostRate" Units="USD per Hour">10</Property>
        <Property Name="DynamicSelectionRule">
          <Value>None</Value>
        </Property>
        <Property Name="TransportCostPerRider" Units="USD">10</Property>
        <Property Name="TransportCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="CapitalCostPerVehicle" Units="USD">0.0</Property>
      </Properties>
      <Graphics Layer="Everything" ExternallyVisible="True">
        <SymbolInstances>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
          </SymbolInstance>
        </SymbolInstances>
        <AttachedObjects IndexList="50 51 52 53 54">
          <Queue Queue="RideStation.Contents" Layer="Everything" ExternallyVisible="True">
            <Points>
              <Point Location="-9.2283731405425 0.699999988079071 -2.45823967378693" />
              <Point Location="-10.7533731405425 0.699999988079071 -2.45823967378693" />
            </Points>
          </Queue>
          <Queue Queue="DriverStation.Contents" Alignment="Inline" Layer="Everything" ExternallyVisible="True">
            <Points>
              <Point Location="-10.9283731405425 0 -2.45823967378693" />
              <Point Location="-12.0533731405425 0 -2.45823967378693" />
            </Points>
          </Queue>
          <StatusLabel Center="-11.4908731405425 0.270062515420583 -2.85823967378693" Width="1.2249999999999999" Height="0.25" Layer="Everything" ExternallyVisible="True" Expression="BatteryRemaining" />
          <StatusLabel Center="-11.4908731405425 0.270062515420583 -2.25823967378693" Width="1.2249999999999999" Height="0.25" Layer="Everything" ExternallyVisible="True" Expression="RealX" />
          <StatusLabel Center="-11.4908731405425 0.270062515420583 -1.95823967378693" Width="1.2249999999999999" Height="0.25" Layer="Everything" ExternallyVisible="True" Expression="RealZ" />
        </AttachedObjects>
      </Graphics>
    </Transporter>
    <Node Name="LA1Loop" Type="BasicNode" Location="15 0 10" YawDeg="90" Scope="Public">
      <Properties>
        <Property Name="InitialCost" Units="USD">0.0</Property>
        <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
        <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="DynamicSelectionRule">
          <Value>None</Value>
        </Property>
      </Properties>
      <Graphics Layer="Everything" ExternallyVisible="True" />
    </Node>
    <Node Name="LoopWC1" Type="BasicNode" Location="26 0 10" YawDeg="90" Scope="Public">
      <Properties>
        <Property Name="InitialCost" Units="USD">0.0</Property>
        <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
        <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="DynamicSelectionRule">
          <Value>None</Value>
        </Property>
      </Properties>
      <Graphics Layer="Everything" ExternallyVisible="True" />
    </Node>
    <Node Name="WC1Loop" Type="BasicNode" Location="56 0 10" YawDeg="90" Scope="Public">
      <Properties>
        <Property Name="InitialCost" Units="USD">0.0</Property>
        <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
        <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="DynamicSelectionRule">
          <Value>None</Value>
        </Property>
      </Properties>
      <Graphics Layer="Everything" ExternallyVisible="True" />
    </Node>
    <Node Name="LoopWC2" Type="BasicNode" Location="55.5 0 -9" YawDeg="90" Scope="Public">
      <Properties>
        <Property Name="InitialCost" Units="USD">0.0</Property>
        <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
        <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="DynamicSelectionRule">
          <Value>None</Value>
        </Property>
      </Properties>
      <Graphics Layer="Everything" ExternallyVisible="True" />
    </Node>
    <Node Name="WC2Loop" Type="BasicNode" Location="22.6974178850979 0 -8.98741328772579" YawDeg="90" Scope="Public">
      <Properties>
        <Property Name="InitialCost" Units="USD">0.0</Property>
        <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
        <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="DynamicSelectionRule">
          <Value>None</Value>
        </Property>
      </Properties>
      <Graphics Layer="Everything" ExternallyVisible="True" />
    </Node>
    <Node Name="LoopLA1" Type="BasicNode" Location="14.5684507556317 0 -8.92125986972647" YawDeg="90" Scope="Public">
      <Properties>
        <Property Name="InitialCost" Units="USD">0.0</Property>
        <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
        <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="DynamicSelectionRule">
          <Value>None</Value>
        </Property>
      </Properties>
      <Graphics Layer="Everything" ExternallyVisible="True" />
    </Node>
    <Node Name="WorkersNode" Type="BasicNode" Location="-9.9908731405425 0 7.29176032621307" YawDeg="90" Scope="Public">
      <Properties>
        <Property Name="InitialCost" Units="USD">0.0</Property>
        <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
        <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="DynamicSelectionRule">
          <Value>None</Value>
        </Property>
      </Properties>
      <Graphics Layer="Everything" ExternallyVisible="True" />
    </Node>
    <Node Name="ChargeNode" Type="BasicNode" Location="80 0 10" YawDeg="90" Scope="Public">
      <Properties>
        <Property Name="InitialCost" Units="USD">0.0</Property>
        <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
        <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="DynamicSelectionRule">
          <Value>None</Value>
        </Property>
      </Properties>
      <Graphics Layer="Everything" ExternallyVisible="True" />
    </Node>
    <Link Name="Connector1" Type="Connector" Size="6.8 0 0" Scope="Public" Start="Output@SOSource_Deterministic" End="Input@SOAllocateMaterial">
      <Properties>
        <Property Name="InitialCost" Units="USD">0.0</Property>
        <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
        <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="DynamicSelectionRule">
          <Value>None</Value>
        </Property>
      </Properties>
      <Graphics EditsLocked="True" ExternallyVisible="True" />
    </Link>
    <Link Name="Connector3" Type="Connector" Size="12.53 0 0" Scope="Public" Start="Output@OperationController" End="Input@SalesOrdersShip">
      <Properties>
        <Property Name="InitialCost" Units="USD">0.0</Property>
        <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
        <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="DynamicSelectionRule">
          <Value>None</Value>
        </Property>
      </Properties>
      <Graphics EditsLocked="True" ExternallyVisible="True" />
    </Link>
    <Link Name="Connector4" Type="Connector" Size="11.41 0 0" Scope="Public" Start="Output@OperationController" End="Input@ComponentOrdersDestroy">
      <Properties>
        <Property Name="InitialCost" Units="USD">0.0</Property>
        <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
        <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="DynamicSelectionRule">
          <Value>None</Value>
        </Property>
      </Properties>
      <Graphics EditsLocked="True" ExternallyVisible="True" />
    </Link>
    <Link Name="Connector5" Type="Connector" Size="7.16 0 0" Scope="Public" Start="Output@SOSource_Stochastic" End="Input@SOAllocateMaterial">
      <Properties>
        <Property Name="InitialCost" Units="USD">0.0</Property>
        <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
        <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="DynamicSelectionRule">
          <Value>None</Value>
        </Property>
      </Properties>
      <Graphics EditsLocked="True" ExternallyVisible="True" />
    </Link>
    <Link Name="Connector2" Type="Connector" Size="6.5 0 0" Scope="Public" Start="Output@SOSource_RealTime" End="Input@SORTAllocateMaterial">
      <Properties>
        <Property Name="InitialCost" Units="USD">0.0</Property>
        <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
        <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="DynamicSelectionRule">
          <Value>None</Value>
        </Property>
      </Properties>
      <Graphics EditsLocked="True" Layer="Everything" ExternallyVisible="True" />
    </Link>
    <Link Name="Connector6" Type="Connector" Size="23.93 0 0" Scope="Public" Start="Output@OperationController" End="Input@SalesOrdersRealTimeShip">
      <Properties>
        <Property Name="InitialCost" Units="USD">0.0</Property>
        <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
        <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="DynamicSelectionRule">
          <Value>None</Value>
        </Property>
      </Properties>
      <Graphics Layer="Everything" ExternallyVisible="True" />
    </Link>
    <Link Name="MTRPath1" Type="MTRPath" Size="22.52 4 0" Scope="Public" Start="Output@LogisticsArea1" End="LA1Loop">
      <Points>
        <Point Location="2.5 0 10" />
      </Points>
      <Properties>
        <Property Name="InitialCost" Units="USD">0.0</Property>
        <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
        <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="DynamicSelectionRule">
          <Value>None</Value>
        </Property>
      </Properties>
      <Graphics Layer="Everything" ExternallyVisible="True" />
    </Link>
    <Link Name="MTRPath9" Type="MTRPath" Size="11 4 0" Scope="Public" Start="LA1Loop" End="LoopWC1">
      <Properties>
        <Property Name="InitialCost" Units="USD">0.0</Property>
        <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
        <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="DynamicSelectionRule">
          <Value>None</Value>
        </Property>
      </Properties>
      <Graphics Layer="Everything" ExternallyVisible="True" />
    </Link>
    <Link Name="MTRPath10" Type="MTRPath" Size="16.11 4 0" Scope="Public" Start="LoopWC1" End="Input@WorkCell1">
      <Properties>
        <Property Name="InitialCost" Units="USD">0.0</Property>
        <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
        <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="DynamicSelectionRule">
          <Value>None</Value>
        </Property>
      </Properties>
      <Graphics Layer="Everything" ExternallyVisible="True" />
    </Link>
    <Link Name="MTRPath14" Type="MTRPath" Size="30 4 0" Scope="Public" Start="LoopWC1" End="WC1Loop">
      <Properties>
        <Property Name="InitialCost" Units="USD">0.0</Property>
        <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
        <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="DynamicSelectionRule">
          <Value>None</Value>
        </Property>
      </Properties>
      <Graphics Layer="Everything" ExternallyVisible="True" />
    </Link>
    <Link Name="MTRPath2" Type="MTRPath" Size="3 4 0" Scope="Public" Start="Input@WorkCell1" End="Output@WorkCell1">
      <Properties>
        <Property Name="InitialCost" Units="USD">0.0</Property>
        <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
        <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="DynamicSelectionRule">
          <Value>None</Value>
        </Property>
      </Properties>
      <Graphics Layer="Everything" ExternallyVisible="True" />
    </Link>
    <Link Name="MTRPath3" Type="MTRPath" Size="16.97 4 0" Scope="Public" Start="Output@WorkCell1" End="WC1Loop">
      <Properties>
        <Property Name="InitialCost" Units="USD">0.0</Property>
        <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
        <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="DynamicSelectionRule">
          <Value>None</Value>
        </Property>
      </Properties>
      <Graphics Layer="Everything" ExternallyVisible="True" />
    </Link>
    <Link Name="MTRPath15" Type="MTRConveyor" Size="28.5 4 0" Scope="Public" Start="Output@WC1ToConveyor" End="Input@LogisticsArea2">
      <Properties>
        <Property Name="InitialCost" Units="USD">0.0</Property>
        <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
        <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="DynamicSelectionRule">
          <Value>None</Value>
        </Property>
        <Property Name="CapitalCost" Units="USD">0.0</Property>
      </Properties>
      <Graphics Layer="Everything" ExternallyVisible="True" />
    </Link>
    <Link Name="MTRPath11" Type="MTRPath" Size="22.94 4 0" Scope="Public" Start="WC1Loop" End="LoopWC2">
      <Points>
        <Point Location="58.7941903952726 0 7.1619172646608" />
        <Point Location="59.5669573869079 0 5.78987277363388" />
        <Point Location="60.0267177877184 0 4.20475930909665" />
        <Point Location="60.093843016991 0 -5.0317726397963" />
        <Point Location="59.2332631545219 0 -6.8246473532737" />
        <Point Location="58.0141083493572 0 -8.2589471240556" />
      </Points>
      <Properties>
        <Property Name="InitialCost" Units="USD">0.0</Property>
        <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
        <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="DynamicSelectionRule">
          <Value>None</Value>
        </Property>
      </Properties>
      <Graphics Layer="Everything" ExternallyVisible="True" />
    </Link>
    <Link Name="MTRPath4" Type="MTRPath" Size="3 4 0" Scope="Public" Start="Input@LogisticsArea2" End="Output@LogisticsArea2">
      <Properties>
        <Property Name="InitialCost" Units="USD">0.0</Property>
        <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
        <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="DynamicSelectionRule">
          <Value>None</Value>
        </Property>
      </Properties>
      <Graphics Layer="Everything" ExternallyVisible="True" />
    </Link>
    <Link Name="MTRPath12" Type="MTRPath" Size="21.36 4 0" Scope="Public" Start="Output@WorkCell2" End="Input@WorkCell2_1">
      <Properties>
        <Property Name="InitialCost" Units="USD">0.0</Property>
        <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
        <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="DynamicSelectionRule">
          <Value>None</Value>
        </Property>
      </Properties>
      <Graphics Layer="Everything" ExternallyVisible="True" />
    </Link>
    <Link Name="MTRPath13" Type="MTRPath" Size="32.8 4 0" Scope="Public" Start="LoopWC2" End="WC2Loop">
      <Properties>
        <Property Name="InitialCost" Units="USD">0.0</Property>
        <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
        <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="DynamicSelectionRule">
          <Value>None</Value>
        </Property>
      </Properties>
      <Graphics Layer="Everything" ExternallyVisible="True" />
    </Link>
    <Link Name="MTRPath17" Type="MTRPath" Size="3 4 0" Scope="Public" Start="Input@WorkCell2_1" End="Output@WorkCell2_1">
      <Properties>
        <Property Name="InitialCost" Units="USD">0.0</Property>
        <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
        <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="DynamicSelectionRule">
          <Value>None</Value>
        </Property>
      </Properties>
      <Graphics Layer="Everything" ExternallyVisible="True" />
    </Link>
    <Link Name="MTRPath6" Type="MTRPath" Size="28.39 4 0" Scope="Public" Start="Output@WorkCell2_1" End="WC2Loop">
      <Properties>
        <Property Name="InitialCost" Units="USD">0.0</Property>
        <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
        <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="DynamicSelectionRule">
          <Value>None</Value>
        </Property>
      </Properties>
      <Graphics Layer="Everything" ExternallyVisible="True" />
    </Link>
    <Link Name="MTRPath7" Type="MTRPath" Size="8.13 4 0" Scope="Public" Start="WC2Loop" End="LoopLA1">
      <Properties>
        <Property Name="InitialCost" Units="USD">0.0</Property>
        <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
        <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="DynamicSelectionRule">
          <Value>None</Value>
        </Property>
      </Properties>
      <Graphics Layer="Everything" ExternallyVisible="True" />
    </Link>
    <Link Name="MTRPath5" Type="MTRPath" Size="17.23 4 0" Scope="Public" Start="LoopLA1" End="Input@LogisticsArea1">
      <Points>
        <Point Location="5.5 0 -8.75" />
      </Points>
      <Properties>
        <Property Name="InitialCost" Units="USD">0.0</Property>
        <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
        <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="DynamicSelectionRule">
          <Value>None</Value>
        </Property>
      </Properties>
      <Graphics Layer="Everything" ExternallyVisible="True" />
    </Link>
    <Link Name="MTRPath16" Type="MTRPath" Size="22.28 4 0" Scope="Public" Start="LoopLA1" End="LA1Loop">
      <Points>
        <Point Location="12.0647265903672 0 -7.9931657313266" />
        <Point Location="11.1159372919948 0 -6.974095744186" />
        <Point Location="10.9402355700741 0 -5.5684819688197" />
        <Point Location="11.0456566032265 0 3.14632343845128" />
        <Point Location="11.2564986695315 0 4.83305996889078" />
        <Point Location="12.2755686566721 0 6.0278316779522" />
      </Points>
      <Properties>
        <Property Name="InitialCost" Units="USD">0.0</Property>
        <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
        <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="DynamicSelectionRule">
          <Value>None</Value>
        </Property>
      </Properties>
      <Graphics Layer="Everything" ExternallyVisible="True" />
    </Link>
    <Link Name="MTRPath8" Type="MTRPath" Size="3 4 0" Scope="Public" Start="Input@LogisticsArea1" End="Output@LogisticsArea1">
      <Properties>
        <Property Name="InitialCost" Units="USD">0.0</Property>
        <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
        <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="DynamicSelectionRule">
          <Value>None</Value>
        </Property>
      </Properties>
      <Graphics Layer="Everything" ExternallyVisible="True" />
    </Link>
    <Link Name="MTRPath19" Type="MTRPath" Size="24 4 0" Scope="Public" Start="WC1Loop" End="ChargeNode">
      <Properties>
        <Property Name="InitialCost" Units="USD">0.0</Property>
        <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
        <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="DynamicSelectionRule">
          <Value>None</Value>
        </Property>
      </Properties>
      <Graphics Layer="Everything" ExternallyVisible="True" />
    </Link>
    <Link Name="MTRPath18" Type="MTRPath" Size="4.74 4 0" Scope="Public" Start="LoopWC2" End="Input@WorkCell2">
      <Properties>
        <Property Name="InitialCost" Units="USD">0.0</Property>
        <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
        <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="DynamicSelectionRule">
          <Value>None</Value>
        </Property>
      </Properties>
      <Graphics Layer="Everything" ExternallyVisible="True" />
    </Link>
    <Link Name="MTRPath29" Type="MTRPath" Size="3 4 0" Scope="Public" Start="Input@WorkCell2" End="Output@WorkCell2">
      <Properties>
        <Property Name="InitialCost" Units="USD">0.0</Property>
        <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
        <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="DynamicSelectionRule">
          <Value>None</Value>
        </Property>
      </Properties>
      <Graphics Layer="Everything" ExternallyVisible="True" />
    </Link>
    <Link Name="MTRPath20" Type="MTRPath" Size="16.97 4 0" Scope="Public" Start="Output@WorkCell2" End="Input@WorkCell2_2">
      <Properties>
        <Property Name="InitialCost" Units="USD">0.0</Property>
        <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
        <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="DynamicSelectionRule">
          <Value>None</Value>
        </Property>
      </Properties>
      <Graphics Layer="Everything" ExternallyVisible="True" />
    </Link>
    <Link Name="MTRPath21" Type="MTRPath" Size="3 4 0" Scope="Public" Start="Input@WorkCell2_2" End="Output@WorkCell2_2">
      <Properties>
        <Property Name="InitialCost" Units="USD">0.0</Property>
        <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
        <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="DynamicSelectionRule">
          <Value>None</Value>
        </Property>
      </Properties>
      <Graphics Layer="Everything" ExternallyVisible="True" />
    </Link>
    <Link Name="MTRPath22" Type="MTRPath" Size="23.52 4 0" Scope="Public" Start="Output@WorkCell2_2" End="WC2Loop">
      <Properties>
        <Property Name="InitialCost" Units="USD">0.0</Property>
        <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
        <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="DynamicSelectionRule">
          <Value>None</Value>
        </Property>
      </Properties>
      <Graphics Layer="Everything" ExternallyVisible="True" />
    </Link>
    <Link Name="MTRPath23" Type="MTRPath" Size="13.19 4 0" Scope="Public" Start="Output@WorkCell2" End="Input@WorkCell2_3">
      <Properties>
        <Property Name="InitialCost" Units="USD">0.0</Property>
        <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
        <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="DynamicSelectionRule">
          <Value>None</Value>
        </Property>
      </Properties>
      <Graphics Layer="Everything" ExternallyVisible="True" />
    </Link>
    <Link Name="MTRPath24" Type="MTRPath" Size="3 4 0" Scope="Public" Start="Input@WorkCell2_3" End="Output@WorkCell2_3">
      <Properties>
        <Property Name="InitialCost" Units="USD">0.0</Property>
        <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
        <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="DynamicSelectionRule">
          <Value>None</Value>
        </Property>
      </Properties>
      <Graphics Layer="Everything" ExternallyVisible="True" />
    </Link>
    <Link Name="MTRPath25" Type="MTRPath" Size="19.01 4 0" Scope="Public" Start="Output@WorkCell2_3" End="WC2Loop">
      <Properties>
        <Property Name="InitialCost" Units="USD">0.0</Property>
        <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
        <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="DynamicSelectionRule">
          <Value>None</Value>
        </Property>
      </Properties>
      <Graphics Layer="Everything" ExternallyVisible="True" />
    </Link>
    <Link Name="MTRPath26" Type="MTRPath" Size="11.75 4 0" Scope="Public" Start="Output@WorkCell2" End="Input@WorkCell2_4">
      <Properties>
        <Property Name="InitialCost" Units="USD">0.0</Property>
        <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
        <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="DynamicSelectionRule">
          <Value>None</Value>
        </Property>
      </Properties>
      <Graphics Layer="Everything" ExternallyVisible="True" />
    </Link>
    <Link Name="MTRPath27" Type="MTRPath" Size="3 4 0" Scope="Public" Start="Input@WorkCell2_4" End="Output@WorkCell2_4">
      <Properties>
        <Property Name="InitialCost" Units="USD">0.0</Property>
        <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
        <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="DynamicSelectionRule">
          <Value>None</Value>
        </Property>
      </Properties>
      <Graphics Layer="Everything" ExternallyVisible="True" />
    </Link>
    <Link Name="MTRPath28" Type="MTRPath" Size="15.74 4 0" Scope="Public" Start="Output@WorkCell2_4" End="WC2Loop">
      <Properties>
        <Property Name="InitialCost" Units="USD">0.0</Property>
        <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
        <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="DynamicSelectionRule">
          <Value>None</Value>
        </Property>
      </Properties>
      <Graphics Layer="Everything" ExternallyVisible="True" />
    </Link>
  </Objects>
  <Tokens>
    <Token Name="CustomToken">
      <States>
        <ElementReferenceState Name="CurrentEntity" ElementType="Entity" />
        <IntegerState Name="NumberOfRows" />
        <ElementReferenceState Name="Resource" ElementType="Object" />
        <StringState Name="SOId" />
        <DiscreteState Name="EventDelayTime" InitialValueUnits="Hours" UnitType="Time" />
        <ElementReferenceState Name="Material" ElementType="Material" />
        <IntegerState Name="RowNumber" />
        <IntegerState Name="BOMLevel" />
        <DiscreteState Name="Quantity" />
        <DiscreteState Name="AvailableQuantity" />
        <StringState Name="MOId" />
        <ElementReferenceState Name="CurrentLocation" ElementType="Object" />
        <ElementReferenceState Name="CurrentCarrierLocation" ElementType="Object" />
        <BooleanState Name="EntityJustCreated" />
        <ElementReferenceState Name="Inventory" ElementType="Inventory" />
        <StringState Name="AOId" />
        <IntegerState Name="VialsPerTub" />
        <StringState Name="MaterialConfiguration" />
        <IntegerState Name="ParallelSequence" />
        <ElementReferenceState Name="Driver" ElementType="Object" />
        <DiscreteState Name="RemainderQuantity" />
        <IntegerState Name="AlternatePath" />
        <ElementReferenceState Name="EventTimer" ElementType="Timer" />
        <DiscreteState Name="BatteryCharge" />
        <ElementReferenceState Name="AssignedVehicle" ElementType="Transporter" />
        <StringState Name="ColorStr" />
        <StringState Name="Command" />
        <ElementReferenceState Name="Worker" ElementType="Transporter" />
        <DiscreteState Name="BatchSize" />
        <BooleanState Name="IsPalletOrder" />
        <BooleanState Name="LastBikeForSO" />
        <StringState Name="ProcessName" />
        <StringState Name="JSONStringCommandTemplate" InitialStringValue="{&quot;d&quot;:[{ &quot;Command&quot;:&quot;COMMANDTEMPLATE&quot;, &quot;Color&quot;:&quot;COLORTEMPLATE&quot; }]}" />
        <StringState Name="JSONStringDispatchListRowTemplate" InitialStringValue="{&quot;SOId&quot;: &quot;SOIDTEMPLATE&quot;,&quot;Customer&quot;: &quot;CUSTOMERTEMPLATE&quot;,&quot;MaterialName&quot;: &quot;MATERIALNAMETEMPLATE&quot;,&quot;SiteObjectName&quot;: &quot;SITEOBJECTNAMETEMPLATE&quot;,&quot;ReleaseDate&quot;: &quot;RELEASEDATETEMPLATE&quot;,&quot;DueDate&quot;: &quot;DUEDATETEMPLATE&quot;,&quot;Priority&quot;: &quot;PRIORITYTEMPLATE&quot;,&quot;Quantity&quot;: &quot;QUANTITYTEMPLATE&quot;}" />
        <StringState Name="JSONStringDispatchListRow" />
      </States>
    </Token>
    <Token Name="SuccessorsToken">
      <States>
        <StringState Name="SequenceNumber" />
        <StringState Name="SuccessorSequenceNumber" />
        <IntegerState Name="NumberOfRows" />
        <StringState Name="OperationName" />
        <StringState Name="PhaseKey" />
        <IntegerState Name="RowNumber" />
        <IntegerState Name="SuccessorParallelSequence" />
        <StringState Name="ProcessName" />
      </States>
    </Token>
  </Tokens>
  <Tables AutomaticallyImportBoundTables="False">
    <Table Name="Resources" LastImportTimeUTC="2021-09-22T20:00:18.7799883Z">
      <Schema>
        <PropertyDefinitions>
          <ObjectInstanceProperty Name="ResourceName" DefaultValue="null" NullString="null" ObjectTypeName="ObjectType" DefaultValueInstantiation="AutoCreateInstance" LocationType="Cartesian" InitialOffsetX="XLocation" InitialOffsetZ="ZLocation" InitialYaw="Yaw" />
          <StringProperty Name="Description" NullString="null" />
          <RealProperty Name="XLocation" DefaultValue="0" NullString="null" UnitType="Length" />
          <RealProperty Name="ZLocation" DefaultValue="0" NullString="null" UnitType="Length" />
          <RealProperty Name="Yaw" DefaultValue="90" NullString="null" />
          <ObjectTypeProperty Name="ObjectType" DefaultValue="MTRServer" NullString="null" />
          <StringProperty Name="DisplayCategory" NullString="null" />
          <ScheduleProperty Name="WorkSchedule" DefaultValue="ResourcesTableSchedule" Required="False" NullString="null" />
          <IntegerProperty Name="Capacity" DefaultValue="1" NullString="null" />
          <BooleanProperty Name="EnableLoopbackConstraint" DefaultValue="False" NullString="null" />
          <IntegerProperty Name="InputBufferCapacity" DefaultValue="Infinity" NullString="null" />
          <IntegerProperty Name="OutputBufferCapacity" DefaultValue="Infinity" NullString="null" />
          <RealProperty Name="CostRate" DefaultValue="0" NullString="null" UnitType="CurrencyPerTimeUnit" />
          <ChangeoverMatrixProperty Name="ChangeoverMatrix" Required="False" NullString="null" />
          <ExpressionProperty Name="EquipmentSelectionExpression" DefaultValue="True" NullString="null" SupportForeign="True" />
          <ExpressionProperty Name="PhaseSelectionExpression" DefaultValue="Phases.Enabled == True &amp;&amp; Operations.ResourceName == ModelEntity.Location.Parent.MTRServer.RoutingResource &amp;&amp; Operations.ParallelSequence == ModelEntity.ParallelSequence &amp;&amp; Operations.AlternatePath == ModelEntity.AlternatePath" NullString="null" />
          <ElementProperty Name="EvaluatingSeizeRequestProcess" Required="False" NullString="null" ValueListFilter="UserExecutableProcessesOnly" Type="Process" />
          <ElementProperty Name="BeforeProcessingProcess" Required="False" NullString="null" ValueListFilter="UserExecutableProcessesOnly" Type="Process" />
          <ElementProperty Name="AfterProcessingProcess" Required="False" NullString="null" ValueListFilter="UserExecutableProcessesOnly" Type="Process" />
          <Overrides />
        </PropertyDefinitions>
        <AutoRows>
          <AutoRow Column="ResourceName" />
        </AutoRows>
        <States>
          <DiscreteState Name="ChangeoverEfficiency" InitialValue="1" />
        </States>
        <Keys>
          <Key Column="ResourceName" />
        </Keys>
        <ExtendedAttributeSets>
          <ExtendedAttributeSet Name="ResourceName" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="Description" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="XLocation" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="ZLocation" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="Yaw" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="ObjectType" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="DisplayCategory" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="WorkSchedule" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="Capacity" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="EnableLoopbackConstraint" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="InputBufferCapacity" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="OutputBufferCapacity" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="CostRate" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="ChangeoverMatrix" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="EquipmentSelectionExpression" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="PhaseSelectionExpression" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="EvaluatingSeizeRequestProcess" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="BeforeProcessingProcess" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="AfterProcessingProcess" OperationalPlanningEditable="True" />
        </ExtendedAttributeSets>
      </Schema>
      <Rows>
        <FileRef Name="Models\MTRSite\TableData\Resources.xml" />
      </Rows>
      <DataBindings ImportMode="Manual" ImportForExperimentScenarios="True" />
    </Table>
    <Table Name="Materials" Description="Input Table for manually entering the Materials, should be replaced by the Material Output Table which is automatically generated from the BOM from DS21" LastImportTimeUTC="2021-06-25T21:14:35.2234293Z">
      <Schema>
        <PropertyDefinitions>
          <ElementProperty Name="MaterialName" DefaultValue="null" NullString="null" Type="Material" ReferenceType="Create">
            <AutoCreateInitialValues>
              <AutoCreateInitialValue Name="InitialQuantities" Value="MaterialLots" />
              <AutoCreateInitialValue Name="CostPerUnit" Value="Materials.MaterialCost" />
              <AutoCreateInitialValue Name="LogMaterialUsage" Value="True" />
              <AutoCreateInitialValue Name="LocationBasedInventory" Value="True" />
              <AutoCreateInitialValue Name="AssumeInfiniteAvailabilityCondition" Value="Materials.InfiniteAvailability" />
              <AutoCreateInitialValue Name="InitialQuantities.InitialQuantitiesInitialQuantity" Value="MaterialLots.Quantity" />
              <AutoCreateInitialValue Name="InitialQuantities.InitialQuantitiesLotID" Value="MaterialLots.LotId" />
            </AutoCreateInitialValues>
          </ElementProperty>
          <ForeignKeyProperty Name="MaterialClass" DefaultValue="Production" NullString="null" TableKey="MaterialClasses.MaterialClass" />
          <RealProperty Name="BatchSize" DefaultValue="1" NullString="null" />
          <RealProperty Name="LeadTime" DefaultValue="0.0" NullString="null" UnitType="Time" DefaultUnits="Days" />
          <IntegerProperty Name="Priority" DefaultValue="1" NullString="null" />
          <BooleanProperty Name="InfiniteAvailability" DefaultValue="False" NullString="null" />
          <RealProperty Name="MaterialCost" DefaultValue="0" NullString="null" UnitType="Currency" />
          <ElementProperty Name="MaterialStateStatistic" Required="False" NullString="null" Type="StateStatistic" ReferenceType="Create">
            <AutoCreateInitialValues>
              <AutoCreateInitialValue Name="StateVariableName" Value="Materials.MaterialName.QuantityInStock" />
              <AutoCreateInitialValue Name="DataSource" Value="Materials.MaterialName" />
              <AutoCreateInitialValue Name="DisplayCategory" Value="Materials.DisplayCategory" />
              <AutoCreateInitialValue Name="LogObservations" Value="True" />
            </AutoCreateInitialValues>
          </ElementProperty>
          <ListProperty Name="Picture" DefaultValue="Red" NullString="null" List="PictureColor" />
          <StringProperty Name="DisplayCategory" DefaultValue="Statistics\Materials" NullString="null" />
          <Overrides />
        </PropertyDefinitions>
        <AutoRows>
          <AutoRow Column="MaterialName" />
          <AutoRow Column="MaterialStateStatistic" />
        </AutoRows>
        <States>
          <StringState Name="ValidWorkCellResources" />
        </States>
        <Keys>
          <Key Column="MaterialName" />
        </Keys>
        <ExtendedAttributeSets>
          <ExtendedAttributeSet Name="MaterialName" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="MaterialClass" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="BatchSize" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="LeadTime" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="Priority" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="MaterialCost" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="MaterialStateStatistic" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="DisplayCategory" OperationalPlanningEditable="True" />
        </ExtendedAttributeSets>
      </Schema>
      <Rows>
        <FileRef Name="Models\MTRSite\TableData\Materials.xml" />
      </Rows>
      <DataBindings ImportMode="Manual" ImportType="UpdateAppend" />
    </Table>
    <Table Name="MaterialLots">
      <Schema>
        <PropertyDefinitions>
          <ForeignKeyProperty Name="MaterialName" NullString="null" TableKey="Materials.MaterialName" />
          <StringProperty Name="LotId" NullString="null" />
          <RealProperty Name="Quantity" DefaultValue="0" NullString="null" />
          <Overrides />
        </PropertyDefinitions>
        <States>
          <DiscreteState Name="AllocatedQty" />
        </States>
        <ExtendedAttributeSets>
          <ExtendedAttributeSet Name="MaterialName" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="LotId" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="Quantity" OperationalPlanningEditable="True" />
        </ExtendedAttributeSets>
      </Schema>
      <Rows>
        <FileRef Name="Models\MTRSite\TableData\MaterialLots.xml" />
      </Rows>
      <DataBindings ImportMode="Automatic" />
    </Table>
    <Table Name="SalesOrders" LastImportTimeUTC="2021-09-14T16:19:39.7702806Z">
      <Schema>
        <PropertyDefinitions>
          <BooleanProperty Name="Enabled" DefaultValue="True" NullString="null" />
          <StringProperty Name="SOId" NullString="null" />
          <StringProperty Name="Customer" NullString="null" />
          <ElementProperty Name="MaterialName" DefaultValue="null" NullString="null" Type="Material" />
          <ObjectInstanceProperty Name="SiteObjectName" DefaultValue="PackAndShip" NullString="null" LocationType="Cartesian" />
          <DateTimeProperty Name="ReleaseDate" DefaultValue="08/24/2017 00:00:00" NullString="null" UnitType="Time" />
          <DateTimeProperty Name="DueDate" DefaultValue="08/24/2017 00:00:00" NullString="null" UnitType="Time" />
          <ListProperty Name="OrderStatus" DefaultValue="New" NullString="null" List="OrderStatus" />
          <IntegerProperty Name="Priority" DefaultValue="1" NullString="null" />
          <RealProperty Name="Quantity" DefaultValue="1" NullString="null" />
          <ExpressionProperty Name="AdjustedReleaseDate" DefaultValue="Math.If(SalesOrders.OrderStatus == List.OrderStatus.WIP, 0.0, Math.Max(SalesOrders.ReleaseDate, 0.0))" NullString="null" />
          <Overrides />
        </PropertyDefinitions>
        <States>
          <IntegerState Name="QuantityCompleted" />
          <IntegerState Name="SOEntityID" />
          <DateTimeState Name="ShipDate" />
          <DiscreteState Name="ProductionCost" InitialValueUnits="Default Currency" UnitType="Currency" />
          <IntegerState Name="RowNumber" />
        </States>
        <Keys>
          <Key Column="SOId" />
        </Keys>
        <ExtendedAttributeSets>
          <ExtendedAttributeSet Name="Enabled" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="SOId" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="Customer" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="SiteObjectName" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="ReleaseDate" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="DueDate" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="OrderStatus" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="Priority" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="Quantity" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="AdjustedReleaseDate" OperationalPlanningEditable="True" OperationalPlanningHidden="True" />
        </ExtendedAttributeSets>
        <Targets>
          <Target Name="TargetShipDate" DataFormat="DateTime" UnitType="Unspecified" WithinBoundsStatus="OnTime" AboveBoundsStatus="Late" NoValueStatus="Incomplete">
            <Expression>SalesOrders.ShipDate</Expression>
            <UpperBound>SalesOrders.DueDate</UpperBound>
          </Target>
          <Target Name="TargetCost" DataFormat="Real" UnitType="Currency" WithinBoundsStatus="OnBudget" AboveBoundsStatus="Overrun" NoValueStatus="Incomplete">
            <Expression Units="USD">SalesOrders.ProductionCost</Expression>
            <UpperBound Units="USD">100000</UpperBound>
          </Target>
        </Targets>
      </Schema>
      <Rows>
        <FileRef Name="Models\MTRSite\TableData\SalesOrders.xml" />
      </Rows>
      <DataBindings ImportMode="Manual" />
    </Table>
    <Table Name="Operations">
      <Schema>
        <PropertyDefinitions>
          <BooleanProperty Name="Enabled" DefaultValue="True" NullString="null" />
          <StringProperty Name="OperationName" NullString="null" />
          <ForeignKeyProperty Name="ProcessName" NullString="null" TableKey="Processes.ProcessName" />
          <SequenceNumberProperty Name="SequenceNumber" DefaultValue="10" NullString="null" />
          <ExpressionProperty Name="ResourceName" DefaultValue="0.0" NullString="null" />
          <ExpressionProperty Name="ToLocation" Required="False" NullString="null" />
          <BooleanProperty Name="UseVehicle" DefaultValue="False" NullString="null" />
          <TransporterProperty Name="VehicleDriver" Required="False" NullString="null" ValidObjectType="Transporter" LocationType="Cartesian" />
          <IntegerProperty Name="ParallelSequence" DefaultValue="1" NullString="null" />
          <IntegerProperty Name="AlternatePath" DefaultValue="0" NullString="null" />
          <SequenceNumberProperty Name="LoopbackSequenceNumber" Required="False" NullString="null" />
          <ExpressionProperty Name="LoopbackExpression" DefaultValue="False" Required="False" NullString="null" />
          <Overrides />
        </PropertyDefinitions>
        <Keys>
          <Key Column="OperationName" />
        </Keys>
        <ExtendedAttributeSets>
          <ExtendedAttributeSet Name="Enabled" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="OperationName" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="ProcessName" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="SequenceNumber" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="VehicleDriver" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="ParallelSequence" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="AlternatePath" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="LoopbackSequenceNumber" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="LoopbackExpression" OperationalPlanningEditable="True" />
        </ExtendedAttributeSets>
      </Schema>
      <Rows>
        <FileRef Name="Models\MTRSite\TableData\Operations.xml" />
      </Rows>
      <DataBindings ImportMode="Automatic" />
    </Table>
    <Table Name="WorkInProcess">
      <Schema>
        <PropertyDefinitions>
          <StringProperty Name="SOId" NullString="null" />
          <StringProperty Name="MOId" NullString="null" />
          <IntegerProperty Name="CurrentSequenceNumber" DefaultValue="10" NullString="null" />
          <ObjectInstanceProperty Name="CurrentResource" NullString="null" FilterMode="Resources" LocationType="Cartesian" />
          <RealProperty Name="FractionOfSetupCompleted" DefaultValue="0" NullString="null" />
          <RealProperty Name="CompletedQuantity" DefaultValue="0" NullString="null" />
          <RealProperty Name="AccruedCost" DefaultValue="0" NullString="null" UnitType="Currency" />
          <Overrides />
        </PropertyDefinitions>
        <ExtendedAttributeSets>
          <ExtendedAttributeSet Name="SOId" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="MOId" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="CurrentSequenceNumber" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="CurrentResource" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="FractionOfSetupCompleted" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="CompletedQuantity" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="AccruedCost" OperationalPlanningEditable="True" />
        </ExtendedAttributeSets>
      </Schema>
      <Rows>
        <FileRef Name="Models\MTRSite\TableData\WorkInProcess.xml" />
      </Rows>
      <DataBindings ImportMode="Automatic" />
    </Table>
    <Table Name="RoutingDestinations" LastImportTimeUTC="2021-09-22T20:00:18.8303416Z">
      <Schema>
        <PropertyDefinitions>
          <ForeignKeyProperty Name="ResourceName" NullString="null" TableKey="Resources.ResourceName" />
          <NodeProperty Name="Node" DefaultValue="null" NullString="null" ValidObjectType="Node" LocationType="Cartesian" />
          <Overrides />
        </PropertyDefinitions>
        <ExtendedAttributeSets>
          <ExtendedAttributeSet Name="ResourceName" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="Node" OperationalPlanningEditable="True" />
        </ExtendedAttributeSets>
      </Schema>
      <Rows>
        <FileRef Name="Models\MTRSite\TableData\RoutingDestinations.xml" />
      </Rows>
      <DataBindings ImportMode="Manual" ImportForExperimentScenarios="True" />
    </Table>
    <Table Name="ManufacturingOrders" OutputOnly="True">
      <Schema>
        <States>
          <StringState Name="MOId" />
          <StringState Name="SOId" />
          <ForeignKeyState Name="ProcessName" ReadOnly="True" TableKey="Processes.ProcessName" />
          <ForeignKeyState Name="InventoryLocation" ReadOnly="True" TableKey="InventoryLocations.InventoryName" />
          <IntegerState Name="BOMLevel" />
          <DiscreteState Name="Quantity" />
          <IntegerState Name="EntityIdx" />
          <BooleanState Name="HasWIP" />
          <BooleanState Name="HasStarted" />
          <BooleanState Name="HasCompleted" />
          <IntegerState Name="RowNumber" />
          <IntegerState Name="SOEntityID" />
          <ElementReferenceState Name="Entity" ElementType="Entity" />
          <IntegerState Name="LineNumber" InitialValue="1" />
        </States>
        <Keys>
          <Key Column="MOId" />
        </Keys>
      </Schema>
      <Rows>
        <FileRef Name="Models\MTRSite\TableData\ManufacturingOrders.xml" />
      </Rows>
      <DataBindings ImportMode="Automatic" />
    </Table>
    <Table Name="DispatchingRules" LastImportTimeUTC="2020-04-06T14:47:25.7616200Z">
      <Schema>
        <PropertyDefinitions>
          <EnumProperty Name="DispatchingRule" DefaultValue="FirstInQueue" NullString="null" EnumType="SimioSelectionRules.StandardDispatchingRuleDefinition+DispatchingRule" />
          <ExpressionProperty Name="AttributeValueExpression" DefaultValue="Candidate.Entity.Priority" NullString="null" SupportForeign="True" />
          <ExpressionProperty Name="CampaignValueExpression" DefaultValue="Candidate.Entity.Priority" NullString="null" SupportForeign="True" />
          <Overrides />
        </PropertyDefinitions>
        <ExtendedAttributeSets>
          <ExtendedAttributeSet Name="DispatchingRule" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="AttributeValueExpression" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="CampaignValueExpression" OperationalPlanningEditable="True" />
        </ExtendedAttributeSets>
      </Schema>
      <Rows>
        <FileRef Name="Models\MTRSite\TableData\DispatchingRules.xml" />
      </Rows>
      <DataBindings ImportMode="Manual" />
    </Table>
    <Table Name="Employees" LastImportTimeUTC="2021-07-26T18:18:59.6115191Z">
      <Schema>
        <PropertyDefinitions>
          <ObjectInstanceProperty Name="ResourceName" DisplayName="EmployeeName" DefaultValue="null" NullString="null" ObjectTypeName="ObjectType" DefaultValueInstantiation="AutoCreateInstance" LocationType="Cartesian" InitialOffsetX="XLocation" InitialOffsetY="0" InitialOffsetZ="ZLocation" />
          <StringProperty Name="Description" NullString="null" />
          <RealProperty Name="XLocation" DefaultValue="0" NullString="null" UnitType="Length" />
          <RealProperty Name="ZLocation" DefaultValue="0" NullString="null" UnitType="Length" />
          <StringProperty Name="DisplayCategory" NullString="null" />
          <ObjectTypeProperty Name="ObjectType" DefaultValue="MTRWorker" NullString="null" />
          <NodeProperty Name="InitialNode" DefaultValue="WorkerNode" NullString="null" ValidObjectType="Node" LocationType="Cartesian" />
          <ExpressionProperty Name="InitialQuantity" DefaultValue="1" NullString="null" />
          <IntegerProperty Name="InitialRideCapacity" DefaultValue="1" NullString="null" />
          <ListProperty Name="DwellTypeType" DefaultValue="NoRequirement" NullString="null" List="DwellTimeTypes" />
          <EventProperty Name="DwellUntilEvent" Required="False" NullString="null" />
          <RealProperty Name="MinDwellTime" DefaultValue="1" NullString="null" UnitType="Time" />
          <ScheduleProperty Name="WorkSchedule" DefaultValue="EmployeesTableSchedule" Required="False" NullString="null" />
          <RealProperty Name="CostRate" DefaultValue="0" NullString="null" UnitType="CurrencyPerTimeUnit" />
          <IntegerProperty Name="Picture" DefaultValue="0" NullString="null" />
          <Overrides />
        </PropertyDefinitions>
        <AutoRows>
          <AutoRow Column="ResourceName" />
        </AutoRows>
        <Keys>
          <Key Column="ResourceName" />
        </Keys>
        <ExtendedAttributeSets>
          <ExtendedAttributeSet Name="ResourceName" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="Description" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="XLocation" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="ZLocation" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="DisplayCategory" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="ObjectType" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="InitialNode" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="InitialRideCapacity" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="DwellUntilEvent" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="MinDwellTime" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="WorkSchedule" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="CostRate" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="Picture" OperationalPlanningEditable="True" />
        </ExtendedAttributeSets>
      </Schema>
      <Rows>
        <FileRef Name="Models\MTRSite\TableData\Employees.xml" />
      </Rows>
      <DataBindings ImportMode="Manual" />
    </Table>
    <Table Name="EmployeesSchedule">
      <Schema>
        <PropertyDefinitions>
          <ForeignKeyProperty Name="EmployeeName" NullString="null" TableKey="Employees.ResourceName" />
          <DateTimeProperty Name="StartDate" DefaultValue="1/4/2021 12:00:00 AM" NullString="null" UnitType="Time" />
          <DateTimeProperty Name="EndDate" DefaultValue="1/11/2021 12:00:00 AM" NullString="null" UnitType="Time" />
          <ExpressionProperty Name="Capacity" DefaultValue="1" NullString="null" />
          <Overrides />
        </PropertyDefinitions>
        <ExtendedAttributeSets>
          <ExtendedAttributeSet Name="EmployeeName" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="StartDate" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="EndDate" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="Capacity" OperationalPlanningEditable="True" />
        </ExtendedAttributeSets>
      </Schema>
      <Rows>
        <FileRef Name="Models\MTRSite\TableData\EmployeesSchedule.xml" />
      </Rows>
      <DataBindings ImportMode="Automatic" />
    </Table>
    <Table Name="ResourcesSchedule" LastImportTimeUTC="2020-04-06T14:47:23.9335588Z">
      <Schema>
        <PropertyDefinitions>
          <DateTimeProperty Name="start_time" DefaultValue="1/1/2008" NullString="null" UnitType="Time" />
          <DateTimeProperty Name="end_time" DefaultValue="1/1/2008" NullString="null" UnitType="Time" />
          <Overrides />
        </PropertyDefinitions>
        <ExtendedAttributeSets>
          <ExtendedAttributeSet Name="start_time" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="end_time" OperationalPlanningEditable="True" />
        </ExtendedAttributeSets>
      </Schema>
      <Rows>
        <FileRef Name="Models\MTRSite\TableData\ResourcesSchedule.xml" />
      </Rows>
      <DataBindings ImportMode="Manual" />
    </Table>
    <Table Name="Equipment" LastImportTimeUTC="2021-07-26T18:19:32.8820243Z">
      <Schema>
        <PropertyDefinitions>
          <TransporterProperty Name="EquipmentName" DefaultValue="null" NullString="null" ValidObjectType="Transporter" ObjectTypeName="ObjectType" DefaultValueInstantiation="AutoCreateInstance" LocationType="Cartesian" InitialOffsetX="XLocation" InitialOffsetZ="ZLocation" />
          <TransporterProperty Name="Transporter" DefaultValue="null" NullString="null" ValidObjectType="Transporter" LocationType="Cartesian" />
          <StringProperty Name="Description" NullString="null" />
          <RealProperty Name="XLocation" DefaultValue="0" NullString="null" UnitType="Length" />
          <RealProperty Name="ZLocation" DefaultValue="0" NullString="null" UnitType="Length" />
          <StringProperty Name="DisplayCategory" NullString="null" />
          <ObjectTypeProperty Name="ObjectType" DefaultValue="MTRVehicle" NullString="null" />
          <RealProperty Name="DesiredSpeed" DefaultValue="1" NullString="null" UnitType="TravelRate" DefaultUnits="Meters per Second" />
          <ExpressionProperty Name="InitialQuantity" DefaultValue="1.0" NullString="null" />
          <StringProperty Name="MQTTBroker" NullString="null" />
          <StringProperty Name="MQTTLocationTopic" NullString="null" />
          <StringProperty Name="MQTTCommandTopic" NullString="null" />
          <NodeProperty Name="InitialNode" DefaultValue="null" NullString="null" ValidObjectType="Node" LocationType="Cartesian" />
          <IntegerProperty Name="InitialRideCapacity" DefaultValue="1" NullString="null" />
          <ListProperty Name="DwellTypeType" DefaultValue="NoRequirement" NullString="null" List="DwellTimeTypes" />
          <EventProperty Name="DwellUntilEvent" Required="False" NullString="null" />
          <RealProperty Name="MinDwellTime" DefaultValue="1" NullString="null" UnitType="Time" DefaultUnits="Minutes" />
          <RealProperty Name="CostRate" DefaultValue="0" NullString="null" UnitType="CurrencyPerTimeUnit" />
          <ExpressionProperty Name="BatteryChargeRate" DefaultValue="1000" NullString="null" />
          <ExpressionProperty Name="LowBatteryThreshold" DefaultValue="20" NullString="null" />
          <ExpressionProperty Name="BatteryDischargeRate" DefaultValue="0.1" NullString="null" />
          <NodeProperty Name="InitialChargeNode" DefaultValue="ChargeNode" NullString="null" ValidObjectType="Node" LocationType="Cartesian" />
          <IntegerProperty Name="Picture" DefaultValue="0" NullString="null" />
          <Overrides />
        </PropertyDefinitions>
        <AutoRows>
          <AutoRow Column="EquipmentName" />
        </AutoRows>
        <Keys>
          <Key Column="EquipmentName" />
        </Keys>
        <ExtendedAttributeSets>
          <ExtendedAttributeSet Name="Transporter" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="Description" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="XLocation" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="ZLocation" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="DisplayCategory" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="ObjectType" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="DesiredSpeed" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="InitialQuantity" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="MQTTBroker" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="MQTTLocationTopic" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="MQTTCommandTopic" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="InitialRideCapacity" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="DwellTypeType" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="DwellUntilEvent" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="MinDwellTime" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="CostRate" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="BatteryChargeRate" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="LowBatteryThreshold" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="BatteryDischargeRate" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="InitialChargeNode" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="Picture" OperationalPlanningEditable="True" />
        </ExtendedAttributeSets>
      </Schema>
      <Rows>
        <FileRef Name="Models\MTRSite\TableData\Equipment.xml" />
      </Rows>
      <DataBindings ImportMode="Manual" />
    </Table>
    <Table Name="MaterialClasses">
      <Schema>
        <PropertyDefinitions>
          <StringProperty Name="MaterialClass" NullString="null" />
          <Overrides />
        </PropertyDefinitions>
        <Keys>
          <Key Column="MaterialClass" />
        </Keys>
        <ExtendedAttributeSets>
          <ExtendedAttributeSet Name="MaterialClass" OperationalPlanningEditable="True" />
        </ExtendedAttributeSets>
      </Schema>
      <Rows>
        <FileRef Name="Models\MTRSite\TableData\MaterialClasses.xml" />
      </Rows>
      <DataBindings ImportMode="Automatic" />
    </Table>
    <Table Name="Phases" LastImportTimeUTC="2021-04-21T19:55:13.5421931Z">
      <Schema>
        <PropertyDefinitions>
          <Categories>
            <Category Name="Task Information" Description="Task Information" />
            <Category Name="Resource Requirements" Description="Resource Requirements" InitiallyExpanded="False" />
            <Category Name="Resource Requirements/Required Quantity &amp; Constraints" Description="Resource Requirements/Required Quantity &amp; Constraints" InitiallyExpanded="False" />
            <Category Name="Resource Requirements/Advanced Options" Description="Resource Requirements/Advanced Options" InitiallyExpanded="False" />
            <Category Name="Material Requirements" Description="Material Requirements" InitiallyExpanded="False" />
            <Category Name="Material Requirements/Required Quantity &amp; Constraints" Description="Material Requirements/Required Quantity &amp; Constraints" InitiallyExpanded="False" />
            <Category Name="Material Requirements/Advanced Options" Description="Material Requirements/Advanced Options" InitiallyExpanded="False" />
            <Category Name="State Assignments" Description="Optional State Assignments" InitiallyExpanded="False" />
            <Category Name="Add-On Process Triggers" Description="Add-On Process Triggers" InitiallyExpanded="False" />
          </Categories>
          <BooleanProperty Name="Enabled" DefaultValue="True" NullString="null" />
          <StringProperty Name="PhaseKey" NullString="null" />
          <StringProperty Name="TaskName" Description="Name field for the task." Category="Task Information" Required="False" NullString="null" />
          <ForeignKeyProperty Name="OperationName" NullString="null" TableKey="Operations.OperationName" />
          <SequenceNumberProperty Name="SequenceNumber" DisplayName="Sequence Number" Description="Sequence number used to define the task precedence constraints. To model a task sequence that is simply a serially ordered set of tasks, define the tasks with increasing sequence numbers (e.g., the first task is numbered '10', the second task is numbered '20', and so forth). Tasks with identical sequence numbers will be performed in parallel.&#xD;&#xA;&#xD;&#xA;For a more in-depth discussion on task sequence numbering including examples of how to model parallel subsequences, please refer to the Task Sequence element documentation." Category="Task Information" DefaultValue="10" Required="False" NullString="null">
            <Switch Property="ProcessingTaskPrecedenceMethod" Value="SequenceNumberMethod" />
          </SequenceNumberProperty>
          <BooleanProperty Name="UseBOM" DefaultValue="False" NullString="null" />
          <ExpressionProperty Name="TaskProcessingTime" Description="The time required to perform the task." Category="Task Information" DefaultValue="0" NullString="null" UnitType="Time" DefaultUnits="Minutes">
            <Switch Property="TaskProcessType" Value="SpecificTime" />
          </ExpressionProperty>
          <BooleanProperty Name="QuantityBasedTaskProcessingTime" DefaultValue="False" NullString="null" />
          <ElementProperty Name="PhaseReadyProcess" Required="False" NullString="null" ValueListFilter="UserExecutableProcessesOnly" Type="Process" />
          <ElementProperty Name="PhaseStartingProcess" Required="False" NullString="null" ValueListFilter="UserExecutableProcessesOnly" Type="Process" />
          <ElementProperty Name="PhaseFinishedProcess" Required="False" NullString="null" ValueListFilter="UserExecutableProcessesOnly" Type="Process" />
          <Overrides />
          <PropertyReplacements>
            <PropertyReplacement Version="254" OldPropertyName="TaskResourceRequirementsSelectionExpression" NewPropertyName="TaskResourceRequirementsSelectionValueExpression" />
            <PropertyReplacement Version="256" OldPropertyName="TaskResourceRequirementsObjectType" NewPropertyName="TaskResourceRequirementsResourceType" />
            <PropertyReplacement Version="256" OldPropertyName="TaskResourceRequirementsObjectName" NewPropertyName="TaskResourceRequirementsResourceName" />
            <PropertyReplacement Version="256" OldPropertyName="TaskResourceRequirementsObjectListName" NewPropertyName="TaskResourceRequirementsResourceListName" />
            <PropertyReplacement Version="256" OldPropertyName="TaskResourceRequirementsNumberOfObjects" NewPropertyName="TaskResourceRequirementsNumberOfResources" />
            <PropertyReplacement Version="256" OldPropertyName="TaskResourceRequirementsUnitsPerObject" NewPropertyName="TaskResourceRequirementsUnitsPerResource" />
          </PropertyReplacements>
          <PropertyDefaultValueChanges>
            <PropertyDefaultValueChange Version="203" PropertyName="TaskResourceRequirementsOffShiftRule" OldDefaultValue="Finish Work Already Started" />
            <PropertyDefaultValueChange Version="231" PropertyName="TaskResourceRequirementsImmediatelyTrySeize" OldDefaultValue="True" />
            <PropertyDefaultValueChange Version="231" PropertyName="TaskResourceRequirementsImmediatelyTryAllocateWhenReleased" OldDefaultValue="True" />
          </PropertyDefaultValueChanges>
        </PropertyDefinitions>
        <Keys>
          <Key Column="PhaseKey" />
        </Keys>
        <ExtendedAttributeSets>
          <ExtendedAttributeSet Name="Enabled" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="PhaseKey" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="TaskName" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="OperationName" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="SequenceNumber" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="UseBOM" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="TaskProcessingTime" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="QuantityBasedTaskProcessingTime" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="PhaseReadyProcess" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="PhaseStartingProcess" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="PhaseFinishedProcess" OperationalPlanningEditable="True" />
        </ExtendedAttributeSets>
      </Schema>
      <Rows>
        <FileRef Name="Models\MTRSite\TableData\Phases.xml" />
      </Rows>
      <DataBindings ImportMode="Automatic" />
    </Table>
    <Table Name="ComponentOrders" OutputOnly="True">
      <Schema>
        <States>
          <StringState Name="COId" />
          <ForeignKeyState Name="ProcessName" ReadOnly="True" TableKey="Processes.ProcessName" />
          <ForeignKeyState Name="InventoryLocation" ReadOnly="True" TableKey="InventoryLocations.InventoryName" />
          <StringState Name="MOId" />
          <StringState Name="SOId" />
          <ElementReferenceState Name="SourceEntity" ElementType="Entity" />
          <StringState Name="TriggeringOrder" />
          <DateTimeState Name="ReleaseDate" />
          <DateTimeState Name="DueDate" />
          <IntegerState Name="Priority" />
          <DiscreteState Name="Quantity" />
          <IntegerState Name="EntityIdx" />
          <BooleanState Name="IsPalletOrder" />
          <BooleanState Name="LastBikeForSO" />
          <BooleanState Name="CompletedFlag" />
          <IntegerState Name="RowNumber" />
        </States>
        <Keys>
          <Key Column="COId" />
        </Keys>
      </Schema>
      <Rows>
        <FileRef Name="Models\MTRSite\TableData\ComponentOrders.xml" />
      </Rows>
      <DataBindings ImportMode="Automatic" />
    </Table>
    <Table Name="InventoryLocations" LastImportTimeUTC="2022-04-05T18:41:50.4354263Z">
      <Schema>
        <PropertyDefinitions>
          <Categories>
            <Category Name="Basic Logic" Description="Basic Logic" />
            <Category Name="Process Logic" Description="Process Logic" />
            <Category Name="Crossing Logic" Description="Crossing Logic" />
            <Category Name="Transport Logic" Description="Transport Logic" />
            <Category Name="Travel Logic" Description="Travel Logic" />
            <Category Name="Routing Logic" Description="Routing Logic" />
            <Category Name="Routing Logic/Other Routing Out Options" Description="Routing Logic/Other Routing Out Options" InitiallyExpanded="False" />
            <Category Name="Population" Description="Population" InitiallyExpanded="False" />
            <Category Name="Statistic Element" Description="Statistic Element" />
            <Category Name="Time Period Pattern" Description="Time Period Pattern" />
            <Category Name="Reporting &amp; Logging" Description="Reporting &amp; Logging" InitiallyExpanded="False" />
            <Category Name="Stopping Conditions" Description="Stopping Conditions" InitiallyExpanded="False" />
            <Category Name="Input Flow Control" Description="Input Flow Control" />
            <Category Name="Financials" Description="Financials" InitiallyExpanded="False" />
            <Category Name="Financials/Transport Costs" Description="Transport Costs" InitiallyExpanded="False" />
            <Category Name="Financials/Resource Costs" Description="Resource Costs" InitiallyExpanded="False" />
            <Category Name="Shortest Path Calculations" Description="Shortest Path Calculations" InitiallyExpanded="False" />
            <Category Name="Add-On Process Triggers" Description="Add-On Process Triggers" InitiallyExpanded="False" />
            <Category Name="Advanced Options" Description="Advanced Options" InitiallyExpanded="False" />
          </Categories>
          <ElementProperty Name="InventoryName" DefaultValue="null" NullString="null" Type="Inventory" ReferenceType="Create">
            <AutoCreateInitialValues>
              <AutoCreateInitialValue Name="ReportStatistics" Value="InventoryLocations.ReportStatistics" />
              <AutoCreateInitialValue Name="MaterialName" Value="InventoryLocations.MaterialName" />
              <AutoCreateInitialValue Name="SiteObjectName" Value="InventoryLocations.SiteObjectName" />
              <AutoCreateInitialValue Name="InitialQuantity" Value="InventoryLocations.InitialQuantity" />
              <AutoCreateInitialValue Name="ReviewPeriod" Value="InventoryLocations.ReviewPeriod" />
              <AutoCreateInitialValue Name="OnReplenishmentOrderProcess" Value="InventoryLocations.OnReplenishmentOrderProcess" />
              <AutoCreateInitialValue Name="ReplenishmentPolicy" Value="InventoryLocations.ReplenishmentPolicy" />
              <AutoCreateInitialValue Name="ReviewTimerName" Value="InventoryLocations.ReviewTimer" />
              <AutoCreateInitialValue Name="AssumeInfiniteAvailabilityCondition" Value="InventoryLocations.InfiniteAvailability" />
            </AutoCreateInitialValues>
          </ElementProperty>
          <BooleanProperty Name="ReportStatistics" DisplayName="Report Statistics" Description="Indicates whether statistics are to be automatically reported for this object or element." ComplexityLevel="Advanced" DefaultValue="True" NullString="null" />
          <ElementProperty Name="MaterialName" DefaultValue="null" NullString="null" Type="Material" />
          <ObjectInstanceProperty Name="SiteObjectName" Description="The name of the fixed object that is the inventory’s physical location." Category="Basic Logic" Required="False" NullString="null" ValidObjectType="FixedObject" LocationType="Cartesian" />
          <ExpressionProperty Name="InitialQuantity" DisplayName="Initial Quantity" Description="The quantity of material present in the inventory at the beginning of the simulation run." Category="Basic Logic" DefaultValue="0.0" NullString="null" />
          <ExpressionProperty Name="InfiniteAvailability" DefaultValue="True" NullString="null" />
          <EnumProperty Name="ReviewPeriod" DisplayName="Review Period" Description="The frequency of inventory review to determine whether a replenishment order is required.&#xD;&#xA;&#xD;&#xA;If the review period is ‘Continuous’, then an inventory review is triggered once at the start of the simulation and then whenever the inventory position decreases.&#xD;&#xA;&#xD;&#xA;If the review period is ‘Timer’, then an inventory review is triggered whenever the specified timer fires its event." Category="Basic Logic" DefaultValue="None" NullString="null" EnumType="InventoryReviewPeriod" />
          <ReplenishmentPolicyProperty Name="ReplenishmentPolicy" DisplayName="Replenishment Policy" Description="The replenishment policy checked at the time of an inventory review to determine whether a replenishment order is required and, if so, the recommended order size." Category="Basic Logic" DefaultValue="None" NullString="None">
            <Switch Property="ReviewPeriod" Comparison="NotEqual" Value="None" />
            <DefaultDynamicPropertyValues>
              <DefaultDynamicPropertyValue Name="ReorderPoint" Value="InventoryLocations.ReorderPoint" />
              <DefaultDynamicPropertyValue Name="OrderUpToLevel" Value="InventoryLocations.UpToLevel" />
              <DefaultDynamicPropertyValue Name="ReorderQuantity" Value="InventoryLocations.ReorderQuantity" />
              <DefaultDynamicPropertyValue Name="ReorderCondition" Value="InventoryLocations.ReorderCondition" />
            </DefaultDynamicPropertyValues>
          </ReplenishmentPolicyProperty>
          <ExpressionProperty Name="ReorderCondition" DefaultValue="True" NullString="null" />
          <ElementProperty Name="ReviewTimer" Required="False" NullString="null" Type="Timer" />
          <ExpressionProperty Name="ReorderPoint" DefaultValue="0.0" NullString="null" />
          <ExpressionProperty Name="ReorderQuantity" DefaultValue="0.0" NullString="null" />
          <ExpressionProperty Name="UpToLevel" DefaultValue="0.0" NullString="null" />
          <ElementProperty Name="OnReplenishmentOrderProcess" DisplayName="On Replenishment Order Process" Description="The name of the process that will be executed to handle an inventory replenishment order. Note that whenever this process is triggered by the replenishment policy, the inventory's quantity on order will have been automatically increased by the recommended order size.&#xD;&#xA;&#xD;&#xA;NOTE: The created token's material order detail reference will provide the detail of the replenishment request. For example, the function Token.MaterialOrderDetail.Quantity may be used to get the recommended order size." Category="Basic Logic" DefaultValue="Inventory_OnReplenishmentOrder" Required="False" NullString="null" ValueListFilter="UserExecutableProcessesOnly" Type="Process">
            <Switch Property="ReviewPeriod" Comparison="NotEqual" Value="None" />
          </ElementProperty>
          <ElementProperty Name="Monitor" Required="False" NullString="null" Type="Monitor" ReferenceType="Create">
            <AutoCreateInitialValues>
              <AutoCreateInitialValue Name="StateVariableName" Value="InventoryLocations.InventoryName.Inventory.QuantityInStock" />
              <AutoCreateInitialValue Name="TriggeredProcessName" Value="InventoryLocations.OnProducedProcess" />
            </AutoCreateInitialValues>
          </ElementProperty>
          <ElementProperty Name="OnProducedProcess" Required="False" NullString="null" ValueListFilter="UserExecutableProcessesOnly" Type="Process" />
          <StringProperty Name="PalletInventoryLocationName" NullString="null" />
          <ElementProperty Name="MaterialInventoryStateStatistic" DefaultValue="null" NullString="null" Type="StateStatistic" ReferenceType="Create">
            <AutoCreateInitialValues>
              <AutoCreateInitialValue Name="StateVariableName" Value="InventoryLocations.InventoryName.QuantityInStock" />
              <AutoCreateInitialValue Name="DataSource" Value="InventoryLocations.InventoryName" />
              <AutoCreateInitialValue Name="DisplayCategory" Value="InventoryLocations.DisplayCategory" />
              <AutoCreateInitialValue Name="LogObservations" Value="True" />
            </AutoCreateInitialValues>
          </ElementProperty>
          <StringProperty Name="DisplayCategory" DefaultValue="Statistics\Inventory" NullString="null" />
          <Overrides />
        </PropertyDefinitions>
        <AutoRows>
          <AutoRow Column="InventoryName" />
          <AutoRow Column="Monitor" />
          <AutoRow Column="MaterialInventoryStateStatistic" />
        </AutoRows>
        <States>
          <DiscreteState Name="PreviousQtyProduced" />
          <DiscreteState Name="TimerTriggeredHour" />
          <StringState Name="EntityName" />
          <StringState Name="EntityDisplayName" />
          <StringState Name="MOId" />
          <StringState Name="SOId" />
          <BooleanState Name="LastBikeForSO" />
          <DiscreteState Name="CurrentQuantity" />
          <DiscreteState Name="AccumulatedConsumptionQuantity" />
          <ElementReferenceState Name="Entity" ElementType="Entity" />
          <DiscreteState Name="LastUpdateHour" />
        </States>
        <Keys>
          <Key Column="InventoryName" />
        </Keys>
        <ExtendedAttributeSets>
          <ExtendedAttributeSet Name="InventoryName" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="ReportStatistics" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="SiteObjectName" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="InitialQuantity" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="InfiniteAvailability" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="ReviewPeriod" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="ReplenishmentPolicy" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="ReorderCondition" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="ReviewTimer" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="ReorderQuantity" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="OnReplenishmentOrderProcess" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="Monitor" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="OnProducedProcess" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="MaterialInventoryStateStatistic" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="DisplayCategory" OperationalPlanningEditable="True" />
        </ExtendedAttributeSets>
      </Schema>
      <Rows>
        <FileRef Name="Models\MTRSite\TableData\InventoryLocations.xml" />
      </Rows>
      <DataBindings ImportMode="Manual" />
    </Table>
    <Table Name="Paths" LastImportTimeUTC="2021-09-22T20:57:18.0802980Z">
      <Schema>
        <PropertyDefinitions>
          <ObjectInstanceProperty Name="PathName" DefaultValue="null" NullString="null" ObjectTypeName="ObjectType" DefaultValueInstantiation="AutoCreateInstance" LocationType="Cartesian" InitialWidth="Width" LinkStartingNode="StartNode" LinkEndingNode="EndNode" LinkVertexX="PathVertices.VertexX" LinkVertexZ="PathVertices.VertexZ" />
          <NodeProperty Name="StartNode" DefaultValue="null" NullString="null" ValidObjectType="Node" LocationType="Cartesian" />
          <NodeProperty Name="EndNode" DefaultValue="null" NullString="null" ValidObjectType="Node" LocationType="Cartesian" />
          <EnumProperty Name="PathType" DefaultValue="Unidirectional" NullString="null" EnumType="LinkType" />
          <ObjectTypeProperty Name="ObjectType" DefaultValue="MTRPath" NullString="null" />
          <RealProperty Name="Width" DefaultValue="3" NullString="null" UnitType="Length" />
          <Overrides />
        </PropertyDefinitions>
        <AutoRows>
          <AutoRow Column="PathName" />
        </AutoRows>
        <Keys>
          <Key Column="PathName" />
        </Keys>
        <ExtendedAttributeSets>
          <ExtendedAttributeSet Name="PathName" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="StartNode" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="EndNode" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="PathType" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="ObjectType" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="Width" OperationalPlanningEditable="True" />
        </ExtendedAttributeSets>
      </Schema>
      <Rows>
        <FileRef Name="Models\MTRSite\TableData\Paths.xml" />
      </Rows>
      <DataBindings ImportMode="Automatic" />
    </Table>
    <Table Name="PathVertices" LastImportTimeUTC="2021-07-12T21:07:53.8531964Z">
      <Schema>
        <PropertyDefinitions>
          <ForeignKeyProperty Name="PathName" NullString="null" TableKey="Paths.PathName" />
          <RealProperty Name="VertexX" DefaultValue="0.0" NullString="null" />
          <RealProperty Name="VertexZ" DefaultValue="0.0" NullString="null" />
          <Overrides />
        </PropertyDefinitions>
        <ExtendedAttributeSets>
          <ExtendedAttributeSet Name="PathName" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="VertexX" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="VertexZ" OperationalPlanningEditable="True" />
        </ExtendedAttributeSets>
      </Schema>
      <Rows>
        <FileRef Name="Models\MTRSite\TableData\PathVertices.xml" />
      </Rows>
      <DataBindings ImportMode="Automatic" />
    </Table>
    <Table Name="OperationSuccessors" OutputOnly="True">
      <Schema>
        <States>
          <ForeignKeyState Name="OperationName" ReadOnly="True" TableKey="Operations.OperationName" />
          <StringState Name="SequenceNumber" />
          <StringState Name="SuccessorSequenceNumber" />
          <IntegerState Name="SuccessorParallelSequence" />
        </States>
      </Schema>
      <Rows>
        <FileRef Name="Models\MTRSite\TableData\OperationSuccessors.xml" />
      </Rows>
      <DataBindings ImportMode="Automatic" />
    </Table>
    <Table Name="PhaseSuccessors" OutputOnly="True">
      <Schema>
        <States>
          <ForeignKeyState Name="PhaseKey" ReadOnly="True" TableKey="Phases.PhaseKey" />
          <StringState Name="SequenceNumber" />
          <StringState Name="SuccessorSequenceNumber" />
        </States>
      </Schema>
      <Rows>
        <FileRef Name="Models\MTRSite\TableData\PhaseSuccessors.xml" />
      </Rows>
      <DataBindings ImportMode="Automatic" />
    </Table>
    <Table Name="BillOfMaterials">
      <Schema>
        <PropertyDefinitions>
          <ForeignKeyProperty Name="OperationName" NullString="null" TableKey="Operations.OperationName" />
          <ElementProperty Name="ComponentMaterial" DefaultValue="null" NullString="null" Type="Material" />
          <ExpressionProperty Name="RequiredQuantity" DefaultValue="1" NullString="null" />
          <BooleanProperty Name="Pegged" DefaultValue="False" NullString="null" />
          <ObjectInstanceProperty Name="InventoryObject" DefaultValue="Stock" NullString="null" LocationType="Cartesian" />
          <EnumProperty Name="MaterialUse" DefaultValue="Consume" NullString="null" EnumType="MaterialActionType" />
          <ObjectInstanceProperty Name="StageMaterialLocation" Required="False" NullString="null" LocationType="Cartesian" />
          <ListProperty Name="Picture" DefaultValue="NONE" NullString="null" List="PictureColor" />
          <Overrides />
        </PropertyDefinitions>
        <ExtendedAttributeSets>
          <ExtendedAttributeSet Name="OperationName" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="Pegged" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="InventoryObject" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="MaterialUse" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="StageMaterialLocation" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="Picture" OperationalPlanningEditable="True" />
        </ExtendedAttributeSets>
      </Schema>
      <Rows>
        <FileRef Name="Models\MTRSite\TableData\BillOfMaterials.xml" />
      </Rows>
      <DataBindings ImportMode="Automatic" />
    </Table>
    <Table Name="PhasesStateAssignments" LastImportTimeUTC="2021-04-21T19:55:13.5421931Z">
      <Schema>
        <PropertyDefinitions>
          <Categories>
            <Category Name="Task Information" Description="Task Information" />
            <Category Name="Resource Requirements" Description="Resource Requirements" InitiallyExpanded="False" />
            <Category Name="Resource Requirements/Required Quantity &amp; Constraints" Description="Resource Requirements/Required Quantity &amp; Constraints" InitiallyExpanded="False" />
            <Category Name="Resource Requirements/Advanced Options" Description="Resource Requirements/Advanced Options" InitiallyExpanded="False" />
            <Category Name="Material Requirements" Description="Material Requirements" InitiallyExpanded="False" />
            <Category Name="Material Requirements/Required Quantity &amp; Constraints" Description="Material Requirements/Required Quantity &amp; Constraints" InitiallyExpanded="False" />
            <Category Name="Material Requirements/Advanced Options" Description="Material Requirements/Advanced Options" InitiallyExpanded="False" />
            <Category Name="State Assignments" Description="Optional State Assignments" InitiallyExpanded="False" />
            <Category Name="Add-On Process Triggers" Description="Add-On Process Triggers" InitiallyExpanded="False" />
          </Categories>
          <ForeignKeyProperty Name="PhaseKey" NullString="null" TableKey="Phases.PhaseKey" />
          <ListProperty Name="TaskStateAssignmentsTrigger" DefaultValue="TaskReady" NullString="null" List="TaskStateAssignmentTrigger" />
          <StateProperty Name="StateAssignment" Required="False" NullString="null" />
          <ExpressionProperty Name="StateAssignmentExpression" DefaultValue="0.0" NullString="null" />
          <StringProperty Name="Description" NullString="null" />
          <Overrides />
          <PropertyReplacements>
            <PropertyReplacement Version="254" OldPropertyName="TaskResourceRequirementsSelectionExpression" NewPropertyName="TaskResourceRequirementsSelectionValueExpression" />
            <PropertyReplacement Version="256" OldPropertyName="TaskResourceRequirementsObjectType" NewPropertyName="TaskResourceRequirementsResourceType" />
            <PropertyReplacement Version="256" OldPropertyName="TaskResourceRequirementsObjectName" NewPropertyName="TaskResourceRequirementsResourceName" />
            <PropertyReplacement Version="256" OldPropertyName="TaskResourceRequirementsObjectListName" NewPropertyName="TaskResourceRequirementsResourceListName" />
            <PropertyReplacement Version="256" OldPropertyName="TaskResourceRequirementsNumberOfObjects" NewPropertyName="TaskResourceRequirementsNumberOfResources" />
            <PropertyReplacement Version="256" OldPropertyName="TaskResourceRequirementsUnitsPerObject" NewPropertyName="TaskResourceRequirementsUnitsPerResource" />
          </PropertyReplacements>
          <PropertyDefaultValueChanges>
            <PropertyDefaultValueChange Version="203" PropertyName="TaskResourceRequirementsOffShiftRule" OldDefaultValue="Finish Work Already Started" />
            <PropertyDefaultValueChange Version="231" PropertyName="TaskResourceRequirementsImmediatelyTrySeize" OldDefaultValue="True" />
            <PropertyDefaultValueChange Version="231" PropertyName="TaskResourceRequirementsImmediatelyTryAllocateWhenReleased" OldDefaultValue="True" />
          </PropertyDefaultValueChanges>
        </PropertyDefinitions>
        <ExtendedAttributeSets>
          <ExtendedAttributeSet Name="TaskStateAssignmentsTrigger" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="StateAssignment" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="StateAssignmentExpression" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="Description" OperationalPlanningEditable="True" />
        </ExtendedAttributeSets>
      </Schema>
      <Rows>
        <FileRef Name="Models\MTRSite\TableData\PhasesStateAssignments.xml" />
      </Rows>
      <DataBindings ImportMode="Automatic" />
    </Table>
    <Table Name="RunInfo" OutputOnly="True">
      <Schema>
        <States>
          <DateTimeState Name="TimeNowDateTime" />
          <DiscreteState Name="TimeNow" />
          <DiscreteState Name="RealTimeDuration" InitialValueUnits="Hours" UnitType="Time" />
        </States>
      </Schema>
      <Rows>
        <FileRef Name="Models\MTRSite\TableData\RunInfo.xml" />
      </Rows>
      <DataBindings ImportMode="Automatic" />
    </Table>
    <Table Name="WorkCellCapabilities" LastImportTimeUTC="2021-09-22T20:57:17.9442084Z">
      <Schema>
        <PropertyDefinitions>
          <ForeignKeyProperty Name="Material" NullString="null" TableKey="Materials.MaterialName" />
          <ForeignKeyProperty Name="WorkCell" NullString="null" TableKey="Resources.ResourceName" />
          <Overrides />
        </PropertyDefinitions>
        <ExtendedAttributeSets>
          <ExtendedAttributeSet Name="Material" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="WorkCell" OperationalPlanningEditable="True" />
        </ExtendedAttributeSets>
      </Schema>
      <Rows>
        <FileRef Name="Models\MTRSite\TableData\WorkCellCapabilities.xml" />
      </Rows>
      <DataBindings ImportMode="Automatic" />
    </Table>
    <Table Name="SalesOrdersOutput" OutputOnly="True">
      <Schema>
        <States>
          <StringState Name="SOId" />
          <StringState Name="Customer" />
          <StringState Name="MaterialName" />
          <StringState Name="SiteObjectName" />
          <DateTimeState Name="ReleaseDate" />
          <DateTimeState Name="DueDate" />
          <IntegerState Name="Priority" />
          <DiscreteState Name="Quantity" />
        </States>
      </Schema>
      <Rows>
        <FileRef Name="Models\MTRSite\TableData\SalesOrdersOutput.xml" />
      </Rows>
      <DataBindings ImportMode="Automatic" />
    </Table>
    <Table Name="Downtimes" LastImportTimeUTC="2021-11-12T22:37:02.6823885Z">
      <Schema>
        <PropertyDefinitions>
          <ForeignKeyProperty Name="ent_name" NullString="null" TableKey="Resources.ResourceName" />
          <DateTimeProperty Name="event_time_local" DefaultValue="1/1/2008" NullString="null" UnitType="Time" />
          <DateTimeProperty Name="event_end_time" DefaultValue="1/1/2008" NullString="null" UnitType="Time" />
          <StringProperty Name="reas_desc" NullString="null" />
          <Overrides />
        </PropertyDefinitions>
        <ExtendedAttributeSets>
          <ExtendedAttributeSet Name="ent_name" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="event_time_local" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="event_end_time" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="reas_desc" OperationalPlanningEditable="True" />
        </ExtendedAttributeSets>
      </Schema>
      <Rows>
        <FileRef Name="Models\MTRSite\TableData\Downtimes.xml" />
      </Rows>
      <DataBindings ImportMode="Automatic" AllowManualImportForOperationalPlanning="True" />
    </Table>
    <Table Name="SchedOutput" OutputOnly="True">
      <Schema>
        <States>
          <StringState Name="wo_id_oper_id_seq_no" />
          <StringState Name="wo_id" />
          <StringState Name="oper_id" />
          <StringState Name="seq_no" />
          <StringState Name="sched_start_time_local" />
          <StringState Name="sched_finish_time_local" />
          <StringState Name="target_sched_ent_id" />
          <StringState Name="spare1" />
          <StringState Name="state_cd" />
          <StringState Name="MOOrderId" />
          <StringState Name="TraitGrouping" />
        </States>
        <Keys>
          <Key Column="wo_id_oper_id_seq_no" />
        </Keys>
      </Schema>
      <Rows>
        <FileRef Name="Models\MTRSite\TableData\SchedOutput.xml" />
      </Rows>
      <DataBindings ImportMode="Automatic" />
    </Table>
    <Table Name="PhaseSecondaryResources" LastImportTimeUTC="2021-07-23T15:26:18.1348664Z">
      <Schema>
        <PropertyDefinitions>
          <ForeignKeyProperty Name="PhaseKey" NullString="null" TableKey="Phases.PhaseKey" />
          <EnumProperty Name="ResourceType" DefaultValue="Specific" NullString="null" EnumType="ObjectSeizeType" />
          <ListNameProperty Name="SecondaryResourceList" Required="False" NullString="null" ListType="Object" />
          <ObjectInstanceProperty Name="SecondaryResourceName" Required="False" NullString="null" LocationType="Cartesian" />
          <IntegerProperty Name="NumberOfSecondaryResources" DefaultValue="1" NullString="null" />
          <EnumProperty Name="RequestMove" DefaultValue="ToNode" NullString="null" EnumType="SeizeRequestVisitType" />
          <NodeProperty Name="RequestMoveNode" DefaultValue="MTRServer.Input" NullString="null" ValidObjectType="Node" LocationType="Cartesian" />
          <EnumProperty Name="SecondaryResourceSelectionGoal" DefaultValue="SmallestDistance" NullString="null" EnumType="SeizeSelectionGoal" />
          <ExpressionProperty Name="SecondaryResourceSelectionExpression" DefaultValue="0.0" NullString="null" SupportForeign="True" />
          <ExpressionProperty Name="SecondaryResourceSelectionCondition" DefaultValue="True" NullString="null" SupportForeign="True" />
          <Overrides />
        </PropertyDefinitions>
        <ExtendedAttributeSets>
          <ExtendedAttributeSet Name="PhaseKey" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="ResourceType" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="SecondaryResourceList" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="SecondaryResourceName" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="NumberOfSecondaryResources" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="RequestMove" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="RequestMoveNode" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="SecondaryResourceSelectionGoal" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="SecondaryResourceSelectionExpression" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="SecondaryResourceSelectionCondition" OperationalPlanningEditable="True" />
        </ExtendedAttributeSets>
      </Schema>
      <Rows>
        <FileRef Name="Models\MTRSite\TableData\PhaseSecondaryResources.xml" />
      </Rows>
      <DataBindings ImportMode="Automatic" />
    </Table>
    <Table Name="SalesOrdersRealTime" OutputOnly="True">
      <Schema>
        <States>
          <IntegerState Name="RowNumber" />
          <StringState Name="SOId" />
          <StringState Name="Customer" />
          <StringState Name="MaterialName" />
          <StringState Name="SiteObjectName" />
          <DateTimeState Name="ReleaseDate" />
          <DateTimeState Name="DueDate" />
          <ListState Name="OrderStatus" List="OrderStatus" InitialListValue="New" />
          <IntegerState Name="Priority" />
          <DiscreteState Name="Quantity" />
          <IntegerState Name="SOEntityID" />
          <DateTimeState Name="ShipDate" />
          <DiscreteState Name="ProductionCost" />
          <DateTimeState Name="StartDate" />
        </States>
        <Keys>
          <Key Column="RowNumber" />
        </Keys>
      </Schema>
      <Rows>
        <FileRef Name="Models\MTRSite\TableData\SalesOrdersRealTime.xml" />
      </Rows>
      <DataBindings ImportMode="Automatic" />
    </Table>
    <Table Name="Nodes" LastImportTimeUTC="2021-07-12T21:07:22.8582838Z">
      <Schema>
        <PropertyDefinitions>
          <ObjectInstanceProperty Name="NodeName" DefaultValue="null" NullString="null" ObjectTypeName="ObjectType" DefaultValueInstantiation="AutoCreateInstance" LocationType="Cartesian" InitialOffsetX="XLocation" InitialOffsetZ="ZLocation" />
          <RealProperty Name="XLocation" DefaultValue="0" NullString="null" UnitType="Length" />
          <RealProperty Name="ZLocation" DefaultValue="0" NullString="null" UnitType="Length" />
          <ObjectTypeProperty Name="ObjectType" DefaultValue="BasicNode" NullString="null" />
          <Overrides />
        </PropertyDefinitions>
        <AutoRows>
          <AutoRow Column="NodeName" />
        </AutoRows>
        <Keys>
          <Key Column="NodeName" />
        </Keys>
        <ExtendedAttributeSets>
          <ExtendedAttributeSet Name="NodeName" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="XLocation" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="ZLocation" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="ObjectType" OperationalPlanningEditable="True" />
        </ExtendedAttributeSets>
      </Schema>
      <Rows>
        <FileRef Name="Models\MTRSite\TableData\Nodes.xml" />
      </Rows>
      <DataBindings ImportMode="Manual" />
    </Table>
    <Table Name="InventoryLocationsToProcesses" LastImportTimeUTC="2022-04-05T18:45:57.5944096Z">
      <Schema>
        <PropertyDefinitions>
          <Categories>
            <Category Name="Basic Logic" Description="Basic Logic" />
            <Category Name="Process Logic" Description="Process Logic" />
            <Category Name="Crossing Logic" Description="Crossing Logic" />
            <Category Name="Transport Logic" Description="Transport Logic" />
            <Category Name="Travel Logic" Description="Travel Logic" />
            <Category Name="Routing Logic" Description="Routing Logic" />
            <Category Name="Routing Logic/Other Routing Out Options" Description="Routing Logic/Other Routing Out Options" InitiallyExpanded="False" />
            <Category Name="Population" Description="Population" InitiallyExpanded="False" />
            <Category Name="Statistic Element" Description="Statistic Element" />
            <Category Name="Time Period Pattern" Description="Time Period Pattern" />
            <Category Name="Reporting &amp; Logging" Description="Reporting &amp; Logging" InitiallyExpanded="False" />
            <Category Name="Stopping Conditions" Description="Stopping Conditions" InitiallyExpanded="False" />
            <Category Name="Input Flow Control" Description="Input Flow Control" />
            <Category Name="Financials" Description="Financials" InitiallyExpanded="False" />
            <Category Name="Financials/Transport Costs" Description="Transport Costs" InitiallyExpanded="False" />
            <Category Name="Financials/Resource Costs" Description="Resource Costs" InitiallyExpanded="False" />
            <Category Name="Shortest Path Calculations" Description="Shortest Path Calculations" InitiallyExpanded="False" />
            <Category Name="Add-On Process Triggers" Description="Add-On Process Triggers" InitiallyExpanded="False" />
            <Category Name="Advanced Options" Description="Advanced Options" InitiallyExpanded="False" />
          </Categories>
          <ForeignKeyProperty Name="InventoryName" NullString="null" TableKey="InventoryLocations.InventoryName" />
          <ForeignKeyProperty Name="ProcessName" NullString="null" TableKey="Processes.ProcessName" />
          <Overrides />
        </PropertyDefinitions>
        <ExtendedAttributeSets>
          <ExtendedAttributeSet Name="ProcessName" OperationalPlanningEditable="True" />
        </ExtendedAttributeSets>
      </Schema>
      <Rows>
        <FileRef Name="Models\MTRSite\TableData\InventoryLocationsToProcesses.xml" />
      </Rows>
      <DataBindings ImportMode="Manual" />
    </Table>
    <Table Name="Processes" LastImportTimeUTC="2022-04-05T18:45:03.9744880Z">
      <Schema>
        <PropertyDefinitions>
          <StringProperty Name="ProcessName" NullString="null" />
          <Overrides />
        </PropertyDefinitions>
        <Keys>
          <Key Column="ProcessName" />
        </Keys>
        <ExtendedAttributeSets>
          <ExtendedAttributeSet Name="ProcessName" OperationalPlanningEditable="True" />
        </ExtendedAttributeSets>
      </Schema>
      <Rows>
        <FileRef Name="Models\MTRSite\TableData\Processes.xml" />
      </Rows>
      <DataBindings ImportMode="Automatic" />
    </Table>
    <Table Name="InitialResourceTagValues" LastImportTimeUTC="2021-11-12T22:37:02.3913692Z">
      <Schema>
        <PropertyDefinitions>
          <StringProperty Name="id" NullString="null" />
          <ForeignKeyProperty Name="Resource" NullString="null" TableKey="InitialBatteryCharge.AMR" />
          <ListProperty Name="TagValueType" DefaultValue="Formula" NullString="null" List="TagValueTypes" />
          <StringProperty Name="s" NullString="null" />
          <StringProperty Name="r" NullString="null" />
          <StringProperty Name="v" NullString="null" />
          <StringProperty Name="t" NullString="null" />
          <Overrides />
        </PropertyDefinitions>
        <Keys>
          <Key Column="id" />
        </Keys>
        <ExtendedAttributeSets>
          <ExtendedAttributeSet Name="id" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="Resource" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="TagValueType" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="s" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="r" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="v" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="t" OperationalPlanningEditable="True" />
        </ExtendedAttributeSets>
      </Schema>
      <Rows>
        <FileRef Name="Models\MTRSite\TableData\InitialResourceTagValues.xml" />
      </Rows>
      <DataBindings ImportMode="Automatic" ImportType="UpdateAppend" ActiveDataBinding="KepwareIOTGatewayImporter" LastImportedBinding="KepwareIOTGatewayImporter">
        <NamedDataBinding Name="KepwareIOTGatewayImporter" ProviderId="00000000-0000-0000-0000-000000000000">
          <ProviderSettings>
            <BinaryData />
          </ProviderSettings>
        </NamedDataBinding>
      </DataBindings>
    </Table>
    <Table Name="InitialBatteryCharge" LastImportTimeUTC="2020-09-18T16:44:10.0281709Z">
      <Schema>
        <PropertyDefinitions>
          <TransporterProperty Name="AMR" DefaultValue="null" NullString="null" ValidObjectType="Transporter" LocationType="Cartesian" />
          <Overrides />
        </PropertyDefinitions>
        <States>
          <DiscreteState Name="BatteryCharge" />
        </States>
        <Keys>
          <Key Column="AMR" />
        </Keys>
      </Schema>
      <Rows>
        <FileRef Name="Models\MTRSite\TableData\InitialBatteryCharge.xml" />
      </Rows>
      <DataBindings ImportMode="Automatic" ImportType="UpdateAppend" />
    </Table>
  </Tables>
  <TableSchedules>
    <TableSchedule Name="ResourcesTableSchedule" TableName="ResourcesSchedule" StartDateTime="ResourcesSchedule.start_time" EndDateTime="ResourcesSchedule.end_time" ScheduleValue="Resources.Capacity" CostMultiplier="1" ExceptionTableName="Downtimes" ExceptionStartDateTime="Downtimes.event_time_local" ExceptionEndDateTime="Downtimes.event_end_time" ExceptionScheduleValue="0" ExceptionCostMultiplier="0" Repeating="True" RepeatingIntervalType="4" RepeatingStartType="SpecificDateTime" RepeatingStartDateTime="2022-02-20T00:00:00" />
    <TableSchedule Name="EmployeesTableSchedule" TableName="EmployeesSchedule" StartDateTime="EmployeesSchedule.StartDate" EndDateTime="EmployeesSchedule.EndDate" ScheduleValue="EmployeesSchedule.Capacity" CostMultiplier="1" ExceptionScheduleValue="0" ExceptionCostMultiplier="0" Repeating="True" RepeatingIntervalType="4" RepeatingStartType="SpecificDateTime" RepeatingStartDateTime="2022-02-20T00:00:00" />
  </TableSchedules>
  <ResourceLogExpressions OwnerGanttGroupingExpression="MOId">
    <ResourceLogExpression Name="StartHour" Description="" DataFormat="Real" UnitType="Unspecified" EvaluationType="StartTimeValue" ShowInTooltips="True">
      <Expression>TimeNow</Expression>
    </ResourceLogExpression>
    <ResourceLogExpression Name="EndHour" Description="" DataFormat="Real" UnitType="Unspecified" EvaluationType="EndTimeValue" ShowInTooltips="True">
      <Expression>TimeNow</Expression>
    </ResourceLogExpression>
    <ResourceLogExpression Name="OperationName" Description="" DataFormat="String" EvaluationType="EndTimeValue" ShowInTooltips="True" ShowInDropdowns="True">
      <Expression>Math.If(Owner.Object.Is.ManufacturingOrderEntity || Owner.Object.Is.ComponentOrderEntity || Owner.Object.Is.Operation, Owner.ModelEntity.OperationName, String.Empty)</Expression>
    </ResourceLogExpression>
    <ResourceLogExpression Name="PhaseKey" Description="" DataFormat="String" EvaluationType="StartTimeValue" ShowInTooltips="True" ShowInDropdowns="True">
      <Expression>Math.If(Owner.Object.Is.Operation, Owner.ModelEntity.PhaseKey, String.Empty)</Expression>
    </ResourceLogExpression>
    <ResourceLogExpression Name="MaterialClass" Description="" DataFormat="String" EvaluationType="StartTimeValue" ShowInDropdowns="True">
      <Expression>Math.If(Owner.Object.Is.ManufacturingOrderEntity || Owner.Object.Is.ComponentOrderEntity || Owner.Object.Is.OperationEntity, Owner.MaterialClasses.MaterialClass, "Workers")</Expression>
    </ResourceLogExpression>
    <ResourceLogExpression Name="ParallelSequence" Description="" DataFormat="Integer" UnitType="Unspecified" EvaluationType="EndTimeValue" ShowInTooltips="True" ShowInDropdowns="True">
      <Expression>Math.If(Owner.Object.Is.ManufacturingOrderEntity || Owner.Object.Is.ComponentOrderEntity || Owner.Object.Is.OperationEntity, Owner.ModelEntity.ParallelSequence, 0)</Expression>
    </ResourceLogExpression>
    <ResourceLogExpression Name="AlternatePath" Description="" DataFormat="Integer" UnitType="Unspecified" EvaluationType="StartTimeValue" ShowInTooltips="True" ShowInDropdowns="True">
      <Expression>Math.If(Owner.Object.Is.ManufacturingOrderEntity || Owner.Object.Is.ComponentOrderEntity || Owner.Object.Is.OperationEntity, Owner.ModelEntity.AlternatePath, 0)</Expression>
    </ResourceLogExpression>
    <ResourceLogExpression Name="SequenceNumber" Description="" DataFormat="String" EvaluationType="StartTimeValue" ShowInTooltips="True">
      <Expression>Math.If(Owner.Object.Is.ManufacturingOrderEntity || Owner.Object.Is.ComponentOrderEntity || Owner.Object.Is.OperationEntity, Owner.ModelEntity.SequenceNumber, 0)</Expression>
    </ResourceLogExpression>
    <ResourceLogExpression Name="MOId" Description="" DataFormat="String" EvaluationType="StartTimeValue" ShowInTooltips="True" ShowInDropdowns="True">
      <Expression>Math.If(Owner.Object.Is.ManufacturingOrderEntity || Owner.Object.Is.ComponentOrderEntity || Owner.Object.Is.OperationEntity, Owner.ModelEntity.MOId, String.Empty)</Expression>
    </ResourceLogExpression>
    <ResourceLogExpression Name="Material" Description="" DataFormat="String" EvaluationType="StartTimeValue" ShowInTooltips="True" ShowInDropdowns="True">
      <Expression>Math.If(Owner.Object.Is.ManufacturingOrderEntity || Owner.Object.Is.ComponentOrderEntity || Owner.Object.Is.OperationEntity, Owner.ModelEntity.CurrentMaterial.Name, String.Empty)</Expression>
    </ResourceLogExpression>
    <ResourceLogExpression Name="MOId \ Material" Description="" DataFormat="String" EvaluationType="StartTimeValue" ShowInDropdowns="True">
      <Expression>Math.If(Owner.Object.Is.ManufacturingOrderEntity || Owner.Object.Is.ComponentOrderEntity || Owner.Object.Is.OperationEntity, Owner.ModelEntity.MOId + "\" + Owner.ModelEntity.CurrentMaterial.Name, String.Empty)</Expression>
    </ResourceLogExpression>
  </ResourceLogExpressions>
  <TaskLogExpressions>
    <TaskLogExpression Name="ParallelSequence" Description="" DataFormat="Integer" UnitType="Unspecified" EvaluationType="EndTimeValue" ShowInTooltips="True" ShowInDropdowns="True">
      <Expression>ModelEntity.ParallelSequence</Expression>
    </TaskLogExpression>
    <TaskLogExpression Name="AlternatePath" Description="" DataFormat="Integer" UnitType="Unspecified" EvaluationType="StartTimeValue" ShowInTooltips="True">
      <Expression>ModelEntity.AlternatePath</Expression>
    </TaskLogExpression>
    <TaskLogExpression Name="SequenceNumber" Description="" DataFormat="String" EvaluationType="StartTimeValue" ShowInTooltips="True">
      <Expression>Math.If(Object.Is.Operation, ModelEntity.SequenceNumber, 0)</Expression>
    </TaskLogExpression>
    <TaskLogExpression Name="StartHour" Description="" DataFormat="Real" UnitType="Unspecified" EvaluationType="StartTimeValue" ShowInTooltips="True">
      <Expression>TimeNow</Expression>
    </TaskLogExpression>
    <TaskLogExpression Name="EndHour" Description="" DataFormat="Real" UnitType="Unspecified" EvaluationType="EndTimeValue" ShowInTooltips="True">
      <Expression>TimeNow</Expression>
    </TaskLogExpression>
    <TaskLogExpression Name="PhaseKey" Description="" DataFormat="String" EvaluationType="StartTimeValue" ShowInTooltips="True" ShowInDropdowns="True">
      <Expression>Math.If(Object.Is.Operation, ModelEntity.PhaseKey, String.Empty)</Expression>
    </TaskLogExpression>
    <TaskLogExpression Name="OperationName" Description="" DataFormat="String" EvaluationType="StartTimeValue" ShowInTooltips="True" ShowInDropdowns="True">
      <Expression>Math.If(Object.Is.Operation, ModelEntity.OperationName, String.Empty)</Expression>
    </TaskLogExpression>
  </TaskLogExpressions>
  <ConstraintLogExpressions>
    <ConstraintLogExpression Name="ParallelSequence" Description="" DataFormat="Integer" UnitType="Unspecified" EvaluationType="EndTimeValue">
      <Expression>Math.If(Is.OperationEntity, ModelEntity.ParallelSequence, 0)</Expression>
    </ConstraintLogExpression>
    <ConstraintLogExpression Name="AlternatePath" Description="" DataFormat="Integer" UnitType="Unspecified" EvaluationType="StartTimeValue">
      <Expression>Math.If(Is.OperationEntity, ModelEntity.AlternatePath, 0)</Expression>
    </ConstraintLogExpression>
    <ConstraintLogExpression Name="PhaseKey" Description="" DataFormat="String" EvaluationType="StartTimeValue">
      <Expression>Math.If(Is.OperationEntity, ModelEntity.PhaseKey, String.Empty)</Expression>
    </ConstraintLogExpression>
    <ConstraintLogExpression Name="OperationName" Description="" DataFormat="String" EvaluationType="StartTimeValue">
      <Expression>Math.If(Is.OperationEntity, ModelEntity.OperationName, String.Empty)</Expression>
    </ConstraintLogExpression>
  </ConstraintLogExpressions>
  <TransporterUsageLogExpressions>
    <TransporterUsageLogExpression Name="MaterialClass" Description="" DataFormat="String" EvaluationType="StartTimeValue">
      <Expression>"Transporters"</Expression>
    </TransporterUsageLogExpression>
    <TransporterUsageLogExpression Name="ParallelSequence" Description="" DataFormat="Integer" UnitType="Unspecified" EvaluationType="EndTimeValue">
      <Expression>Math.If(Entity.Object.Is.ManufacturingOrderEntity || Owner.Object.Is.Operation || Owner.Object.Is.Operation, Owner.ModelEntity.ParallelSequence, 0)</Expression>
    </TransporterUsageLogExpression>
    <TransporterUsageLogExpression Name="AlternatePath" Description="" DataFormat="String" EvaluationType="StartTimeValue">
      <Expression>Math.If(Entity.Object.Is.ManufacturingOrderEntity || Owner.Object.Is.Operation || Owner.Object.Is.Operation, Owner.ModelEntity.AlternatePath, 0)</Expression>
    </TransporterUsageLogExpression>
    <TransporterUsageLogExpression Name="PhaseKey" Description="" DataFormat="String" EvaluationType="StartTimeValue">
      <Expression>Math.If(Entity.Object.Is.ManufacturingOrderEntity || Owner.Object.Is.Operation || Owner.Object.Is.Operation, Owner.ModelEntity.PhaseKey, String.Empty)</Expression>
    </TransporterUsageLogExpression>
    <TransporterUsageLogExpression Name="OperationName" Description="" DataFormat="String" EvaluationType="StartTimeValue">
      <Expression>Math.If(Entity.Object.Is.ManufacturingOrderEntity || Owner.Object.Is.Operation || Owner.Object.Is.Operation, Owner.ModelEntity.OperationName, String.Empty)</Expression>
    </TransporterUsageLogExpression>
  </TransporterUsageLogExpressions>
  <SaveHistories>
    <SaveHistory SavedDateTime="2022-01-21T17:41:59" ProductVersion="14.234.25882.0" Edition="RPS" />
    <SaveHistory SavedDateTime="2022-01-24T14:17:02" ProductVersion="14.234.25882.0" Edition="Internal" />
    <SaveHistory SavedDateTime="2022-02-01T15:57:03" ProductVersion="14.234.25941.0" Edition="Internal" />
    <SaveHistory SavedDateTime="2022-02-09T14:01:30" ProductVersion="14.235.26088.0" Edition="RPS" />
    <SaveHistory SavedDateTime="2022-02-13T14:38:55" ProductVersion="14.235.26122.0" Edition="RPS" />
    <SaveHistory SavedDateTime="2022-02-14T20:15:47" ProductVersion="14.235.26159.0" Edition="RPS" />
    <SaveHistory SavedDateTime="2022-02-15T16:17:36" ProductVersion="14.235.26173.0" Edition="RPS" />
    <SaveHistory SavedDateTime="2022-02-17T13:52:24" ProductVersion="14.235.26184.0" Edition="RPS" />
    <SaveHistory SavedDateTime="2022-02-18T16:44:49" ProductVersion="14.235.26184.0" Edition="Internal" />
    <SaveHistory SavedDateTime="2022-02-23T00:39:35" ProductVersion="14.235.26245.0" Edition="Internal" />
    <SaveHistory SavedDateTime="2022-02-23T01:10:59" ProductVersion="14.235.26295.0" Edition="Internal" />
    <SaveHistory SavedDateTime="2022-02-25T20:23:13" ProductVersion="14.235.26335.0" Edition="Internal" />
    <SaveHistory SavedDateTime="2022-04-05T13:06:37" ProductVersion="14.237.26791.0" Edition="Internal" />
    <SaveHistory SavedDateTime="2022-04-06T16:24:21" ProductVersion="14.237.26861.0" Edition="RPS" />
    <SaveHistory SavedDateTime="2022-04-07T20:46:42" ProductVersion="14.237.26870.0" Edition="RPS" />
    <SaveHistory SavedDateTime="2022-04-11T21:24:51" ProductVersion="14.237.26883.0" Edition="RPS" />
    <SaveHistory SavedDateTime="2022-04-15T13:50:35" ProductVersion="14.238.26931.0" Edition="RPS" />
    <SaveHistory SavedDateTime="2022-04-27T16:30:43" ProductVersion="14.238.27085.0" Edition="RPS" />
  </SaveHistories>
  <Graphics>
    <Queue Queue="Global.VisitRequestQueue" Alignment="Inline" ExternallyVisible="True" Locked="True">
      <Points>
        <Point Location="-39.375 0 -50.125" />
        <Point Location="50 0 -50" />
      </Points>
    </Queue>
    <Environment>
      <Skybox>
        <MaterialRef Id="a3ed352e-8c17-4a53-a988-ea6fbe7bcbab" />
      </Skybox>
    </Environment>
    <Layers ActiveLayer="Everything">
      <Layer Name="Everything" Visible="True" />
    </Layers>
    <AnimationSetup MinimumNumberOfFramesToDisplayIdleAnimation="10" />
  </Graphics>
</Fragment>
<!-- n7pdBScSsXdTCMi0GbLi0EJbrbNQOWsgmQnJfCSMx+9/nw2svLYe+t3PrL5NwkNCAqSVVIpHeDIADiVYZ/Dwiw== -->